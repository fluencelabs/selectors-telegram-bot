{"abi":[{"type":"function","name":"createCommitment","inputs":[{"name":"peerId","type":"bytes32","internalType":"bytes32"},{"name":"duration","type":"uint256","internalType":"uint256"},{"name":"delegator","type":"address","internalType":"address"},{"name":"rewardDelegationRate","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"depositCollateral","inputs":[{"name":"commitmentIds","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"diamondReceive","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"finishCommitment","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCommitment","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct ICapacity.CommitmentView","components":[{"name":"status","type":"uint8","internalType":"enum ICapacity.CCStatus"},{"name":"peerId","type":"bytes32","internalType":"bytes32"},{"name":"collateralPerUnit","type":"uint256","internalType":"uint256"},{"name":"unitCount","type":"uint256","internalType":"uint256"},{"name":"startEpoch","type":"uint256","internalType":"uint256"},{"name":"endEpoch","type":"uint256","internalType":"uint256"},{"name":"rewardDelegatorRate","type":"uint256","internalType":"uint256"},{"name":"delegator","type":"address","internalType":"address"},{"name":"totalFailCount","type":"uint256","internalType":"uint256"},{"name":"failedEpoch","type":"uint256","internalType":"uint256"},{"name":"exitedUnitCount","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getGlobalNonce","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getProofCounts","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"unitIds","type":"bytes32[]","internalType":"bytes32[]"},{"name":"counts","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getRewardInfo","inputs":[{"name":"epoch","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct ICapacity.RewardInfo","components":[{"name":"minProofsPerEpoch","type":"uint256","internalType":"uint256"},{"name":"maxProofsPerEpoch","type":"uint256","internalType":"uint256"},{"name":"totalSuccessProofs","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getStatus","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint8","internalType":"enum ICapacity.CCStatus"}],"stateMutability":"view"},{"type":"function","name":"removeCUFromCC","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"},{"name":"unitIds","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeCommitment","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"submitProof","inputs":[{"name":"unitId","type":"bytes32","internalType":"bytes32"},{"name":"localUnitNonce","type":"bytes32","internalType":"bytes32"},{"name":"resultHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"submitProofs","inputs":[{"name":"unitIds","type":"bytes32[]","internalType":"bytes32[]"},{"name":"localUnitNonces","type":"bytes32[]","internalType":"bytes32[]"},{"name":"resultHashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalRewards","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct ICapacity.CCRewardsView","components":[{"name":"ccRewards","type":"uint256","internalType":"uint256"},{"name":"dealStakerRewards","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"unlockedRewards","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct ICapacity.CCRewardsView","components":[{"name":"ccRewards","type":"uint256","internalType":"uint256"},{"name":"dealStakerRewards","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"withdrawCollateral","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawReward","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawnRewards","inputs":[{"name":"commitmentId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct ICapacity.CCRewardsView","components":[{"name":"ccRewards","type":"uint256","internalType":"uint256"},{"name":"dealStakerRewards","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"event","name":"CollateralDeposited","inputs":[{"name":"commitmentId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"totalCollateral","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"CollateralWithdrawn","inputs":[{"name":"commitmentId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"amountWithdrawn","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountSlashed","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"CommitmentActivated","inputs":[{"name":"peerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"commitmentId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"startEpoch","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"endEpoch","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"unitIds","type":"bytes32[]","indexed":false,"internalType":"bytes32[]"}],"anonymous":false},{"type":"event","name":"CommitmentCreated","inputs":[{"name":"peerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"commitmentId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"duration","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"delegator","type":"address","indexed":false,"internalType":"address"},{"name":"rewardDelegationRate","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"fltCollateralPerUnit","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"CommitmentFailed","inputs":[{"name":"commitmentId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"failedEpoch","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"CommitmentFinished","inputs":[{"name":"commitmentId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"CommitmentRemoved","inputs":[{"name":"commitmentId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"CommitmentStatsUpdated","inputs":[{"name":"commitmentId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"totalFailCount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"exitedUnitCount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"activeUnitCount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"nextAdditionalActiveUnitCount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"changedEpoch","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ProofSubmitted","inputs":[{"name":"commitmentId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"unitId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"localUnitNonce","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"RewardWithdrawn","inputs":[{"name":"commitmentId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"ccRewardsAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"dealStakerRewardsAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UnitActivated","inputs":[{"name":"commitmentId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"unitId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"startEpoch","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UnitDeactivated","inputs":[{"name":"commitmentId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"unitId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"CapacityCommitmentIsActive","inputs":[{"name":"status","type":"uint8","internalType":"enum ICapacity.CCStatus"}]},{"type":"error","name":"CapacityCommitmentIsNotActive","inputs":[{"name":"status","type":"uint8","internalType":"enum ICapacity.CCStatus"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createCommitment(bytes32,uint256,address,uint256)":"886f0e87","depositCollateral(bytes32[])":"3d5f526c","diamondReceive()":"77fc1b6a","finishCommitment(bytes32)":"ea03ef52","getCommitment(bytes32)":"7795820c","getGlobalNonce()":"92163b4b","getProofCounts(bytes32)":"c9b824c2","getRewardInfo(uint256)":"243d3827","getStatus(bytes32)":"5de28ae0","removeCUFromCC(bytes32,bytes32[])":"8e7af1d1","removeCommitment(bytes32)":"d6a1c7f8","submitProof(bytes32,bytes32,bytes32)":"4ece5685","submitProofs(bytes32[],bytes32[],bytes32[])":"64b75e31","totalRewards(bytes32)":"de644849","unlockedRewards(bytes32)":"3d081790","withdrawCollateral(bytes32)":"d3cde344","withdrawReward(bytes32)":"474b5809","withdrawnRewards(bytes32)":"88af96c4"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum ICapacity.CCStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"CapacityCommitmentIsActive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum ICapacity.CCStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"CapacityCommitmentIsNotActive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalCollateral\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSlashed\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"unitIds\",\"type\":\"bytes32[]\"}],\"name\":\"CommitmentActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardDelegationRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fltCollateralPerUnit\",\"type\":\"uint256\"}],\"name\":\"CommitmentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"failedEpoch\",\"type\":\"uint256\"}],\"name\":\"CommitmentFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"CommitmentFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"CommitmentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFailCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exitedUnitCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"activeUnitCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nextAdditionalActiveUnitCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"changedEpoch\",\"type\":\"uint256\"}],\"name\":\"CommitmentStatsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"localUnitNonce\",\"type\":\"bytes32\"}],\"name\":\"ProofSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ccRewardsAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dealStakerRewardsAmount\",\"type\":\"uint256\"}],\"name\":\"RewardWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startEpoch\",\"type\":\"uint256\"}],\"name\":\"UnitActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"}],\"name\":\"UnitDeactivated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardDelegationRate\",\"type\":\"uint256\"}],\"name\":\"createCommitment\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"commitmentIds\",\"type\":\"bytes32[]\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"diamondReceive\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"finishCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"getCommitment\",\"outputs\":[{\"components\":[{\"internalType\":\"enum ICapacity.CCStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"collateralPerUnit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unitCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDelegatorRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalFailCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"failedEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exitedUnitCount\",\"type\":\"uint256\"}],\"internalType\":\"struct ICapacity.CommitmentView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"getProofCounts\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"unitIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"counts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"getRewardInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"minProofsPerEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxProofsPerEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSuccessProofs\",\"type\":\"uint256\"}],\"internalType\":\"struct ICapacity.RewardInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"getStatus\",\"outputs\":[{\"internalType\":\"enum ICapacity.CCStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"unitIds\",\"type\":\"bytes32[]\"}],\"name\":\"removeCUFromCC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"removeCommitment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"localUnitNonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"resultHash\",\"type\":\"bytes32\"}],\"name\":\"submitProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"unitIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"localUnitNonces\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"resultHashes\",\"type\":\"bytes32[]\"}],\"name\":\"submitProofs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"totalRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ccRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dealStakerRewards\",\"type\":\"uint256\"}],\"internalType\":\"struct ICapacity.CCRewardsView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"unlockedRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ccRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dealStakerRewards\",\"type\":\"uint256\"}],\"internalType\":\"struct ICapacity.CCRewardsView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"}],\"name\":\"withdrawnRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ccRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dealStakerRewards\",\"type\":\"uint256\"}],\"internalType\":\"struct ICapacity.CCRewardsView\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Capacity contract is responsible for managing the commitments\",\"errors\":{\"CapacityCommitmentIsActive(uint8)\":[{\"details\":\"Capacity commitment is active\"}],\"CapacityCommitmentIsNotActive(uint8)\":[{\"details\":\"Capacity commitment is not active\"}]},\"events\":{\"CollateralDeposited(bytes32,uint256)\":{\"details\":\"Emitted when a delegator deposited collateral to commitment\",\"params\":{\"commitmentId\":\"Commitment id\",\"totalCollateral\":\"The total collateral deposited to commitment\"}},\"CollateralWithdrawn(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a someone withdraws deposited collateral from commitment\",\"params\":{\"amountSlashed\":\"The slashed part of the collateral\",\"amountWithdrawn\":\"The returned part of the collateral after slashing\",\"commitmentId\":\"Commitment id\"}},\"CommitmentActivated(bytes32,bytes32,uint256,uint256,bytes32[])\":{\"details\":\"Emitted when a commitment is activated. Commitment can be activated only if delegator deposited collateral.\",\"params\":{\"commitmentId\":\"Commitment id which activated\",\"endEpoch\":\"The end epoch of the commitment\",\"peerId\":\"Peer id which linked to the commitment\",\"startEpoch\":\"The start epoch of the commitment\",\"unitIds\":\"Compute unit ids which linked to the commitment\"}},\"CommitmentCreated(bytes32,bytes32,uint256,address,uint256,uint256)\":{\"details\":\"Emitted when a new commitment is created\",\"params\":{\"commitmentId\":\"Commitment id\",\"delegator\":\"The delegator address. If address is zero, the commitment has no delegator\",\"duration\":\"The duration of the commitment in Epochs\",\"fltCollateralPerUnit\":\"The flt collateral per compute unit\",\"peerId\":\"Peer id which linked to the commitment\",\"rewardDelegationRate\":\"The reward delegation rate in precision\"}},\"CommitmentFinished(bytes32)\":{\"details\":\"Emitted when a commitment is finished. Commitment can be finished only if it is in Failed or Ended\",\"params\":{\"commitmentId\":\"Commitment id which finished\"}},\"CommitmentRemoved(bytes32)\":{\"details\":\"Emitted when a commitment is removed. Commitment can be removed only if it is in WaitDelegation status\",\"params\":{\"commitmentId\":\"Commitment id\"}},\"ProofSubmitted(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when a proof is submitted\",\"params\":{\"commitmentId\":\"Commitment id\",\"localUnitNonce\":\"The local nonce of the unit for calculating the target hash\",\"unitId\":\"Compute unit id which linked to the proof\"}},\"RewardWithdrawn(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a reward is withdrawn\",\"params\":{\"ccRewardsAmount\":\"The amount withdrawn from the CC rewards -- divided between provider abd staker\",\"commitmentId\":\"Commitment id\",\"dealStakerRewardsAmount\":\"The amount of the withdrawn reward from deal staker rewards\"}},\"UnitActivated(bytes32,bytes32,uint256)\":{\"details\":\"Emitted when a unit activated. Unit is activated when it returned from deal\",\"params\":{\"commitmentId\":\"Commitment id\",\"unitId\":\"Compute unit id which activated\"}},\"UnitDeactivated(bytes32,bytes32)\":{\"details\":\"Emitted when a unit deactivated. Unit is deactivated when it moved to deal\",\"params\":{\"commitmentId\":\"Commitment id\",\"unitId\":\"Compute unit id which deactivated\"}}},\"kind\":\"dev\",\"methods\":{\"createCommitment(bytes32,uint256,address,uint256)\":{\"details\":\"Creates a new commitment\",\"params\":{\"delegator\":\"The delegator address. If address is zero, the commitment has no delegator\",\"duration\":\"The duration of the commitment in Epochs\",\"peerId\":\"Peer id which linked to the commitment\",\"rewardDelegationRate\":\"The reward delegation rate in precision\"}},\"depositCollateral(bytes32[])\":{\"details\":\"Deposits collateral for commitments. It makes commitments activeNote: this method consists of indirect potential delegator address update(set delegator to msg.sender if 0x0 before).\",\"params\":{\"commitmentIds\":\"Commitment ids\"}},\"diamondReceive()\":{\"details\":\"to add reward balance by msg.value\"},\"finishCommitment(bytes32)\":{\"details\":\"Finishes the commitment if it is in Failed or Ended status\",\"params\":{\"commitmentId\":\"Commitment id\"}},\"getCommitment(bytes32)\":{\"details\":\"Returns the commitment info\",\"params\":{\"commitmentId\":\"Commitment id\"},\"returns\":{\"_0\":\"info commitment info\"}},\"getProofCounts(bytes32)\":{\"details\":\"Returns proof counts for each CU in current epoch\",\"params\":{\"commitmentId\":\"Commitment id\"},\"returns\":{\"counts\":\"proof numbers sent in current epoch\",\"unitIds\":\"unit ids\"}},\"getStatus(bytes32)\":{\"details\":\"Returns the commitment status\",\"params\":{\"commitmentId\":\"Commitment id\"},\"returns\":{\"_0\":\"status commitment status\"}},\"removeCUFromCC(bytes32,bytes32[])\":{\"details\":\"Remove CU from Ended or Failed CC. Need to call this function before finish the commitment\",\"params\":{\"commitmentId\":\"Commitment id\",\"unitIds\":\"Compute unit ids which will be removed from the commitment\"}},\"removeCommitment(bytes32)\":{\"details\":\"Removes the commitment if it is in WaitDelegation status\",\"params\":{\"commitmentId\":\"Commitment id\"}},\"submitProof(bytes32,bytes32,bytes32)\":{\"details\":\"Submits a proof for the commitment\",\"params\":{\"localUnitNonce\":\"Local nonce of the unit for calculating the target hash. It's the proof\",\"resultHash\":\"Target hash of this proof\",\"unitId\":\"Compute unit id which provide the proof\"}},\"submitProofs(bytes32[],bytes32[],bytes32[])\":{\"details\":\"Submits proofs for the commitment\",\"params\":{\"localUnitNonces\":\"Local nonces of the units for calculating the target hashes. It's the proof\",\"resultHashes\":\"Target hashes of this proof\",\"unitIds\":\"Compute unit ids which provide the proof\"}},\"totalRewards(bytes32)\":{\"details\":\"Returns the total rewards of the commitment.\",\"params\":{\"commitmentId\":\"Commitment id\"},\"returns\":{\"_0\":\"CCRewardsView Returns the total rewards of the commitment minus withdrawn rewards.\"}},\"unlockedRewards(bytes32)\":{\"details\":\"Returns the unlocked rewards of the commitment\",\"params\":{\"commitmentId\":\"Commitment id\"},\"returns\":{\"_0\":\"CCRewardsView the unlocked rewards of the commitment minus withdrawn rewards.\"}},\"withdrawCollateral(bytes32)\":{\"details\":\"Withdraws the collateral from the commitment. Commitment must be Failed or Inactive.\",\"params\":{\"commitmentId\":\"Commitment id\"}},\"withdrawReward(bytes32)\":{\"details\":\"Withdraws the reward from the commitment\",\"params\":{\"commitmentId\":\"Commitment id\"}},\"withdrawnRewards(bytes32)\":{\"details\":\"Returns rewards withdrawn from the commitment\",\"params\":{\"commitmentId\":\"Commitment id\"},\"returns\":{\"_0\":\"CCRewardsView rewards withdrawn from the commitment\"}}},\"title\":\"Capacity contract interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/interfaces/ICapacity.sol\":\"ICapacity\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[\":@ensdomains/buffer/=lib/filecoin-solidity/lib/buffer/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":buffer/=lib/filecoin-solidity/lib/buffer/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":filecoin-solidity/=lib/filecoin-solidity/contracts/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/filecoin-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-BigNumber/=lib/filecoin-solidity/contracts/vendor/solidity-BigNumber/src/\",\":solidity-cborutils/=lib/solidity-cborutils/contracts/\",\":solidity-cborutils/contracts/=lib/filecoin-solidity/lib/solidity-cborutils/contracts/\"],\"viaIR\":true},\"sources\":{\"src/core/DealStakerRewards.sol\":{\"keccak256\":\"0x2f2b5c5371c26452f6a9216652e3d71d5fa2261e247eb348f425ad55f69c3b13\",\"urls\":[\"bzz-raw://09997c66a02f87caedf5ddbb2ffff2ae07f2edc3ae0bfa11e922674340e86f09\",\"dweb:/ipfs/QmfZLuDJawL9tQ9iqCh99Ebm1hizrZMXpgtr2khj17D2Jw\"]},\"src/core/Vesting.sol\":{\"keccak256\":\"0x41b1172dae292db06a24bed2b8f5b605a6f1d3c2f6bf5729c02e39045210f06f\",\"urls\":[\"bzz-raw://78eeaf5c48f281b83f979d42fdc1f17004c7a856167f1d12babfaee599218fb1\",\"dweb:/ipfs/QmRpBc4j89kjdBJCj33EuCVLuHHd8LDH6Po6SzciLu9THP\"]},\"src/core/interfaces/ICapacity.sol\":{\"keccak256\":\"0x59332471619df4a8f4f0f53903eb2caa2602f4476cdf2b394788e60c8075bacd\",\"urls\":[\"bzz-raw://dceafa036f0afad4f11b2b518457a76892cf428f3cfef6cba22c4841f2ccbf12\",\"dweb:/ipfs/QmWydgEToL2Y49YmHe52H53uV7Tjkub3fjk75SESFs56Ma\"]},\"src/lib/LibCapacityConst.sol\":{\"keccak256\":\"0xa48b5a2b9faed4e3fda995af6d00f1e24043e473b67e26a0a5c75e1f90d9d25f\",\"urls\":[\"bzz-raw://913b212a215421accbfed6ffec20774deb52a45c18dbfbfe4fa7ced5afca63d0\",\"dweb:/ipfs/QmRe6jbsCLNusG3GHxacNzGNdtT7Qr4akVFiumVNLf3rn4\"]},\"src/lib/LibEpochController.sol\":{\"keccak256\":\"0x9ec3cc1629fd372eb13414bd72fd5bcbefc5cd750481a36a02a4ac238ec1ac27\",\"urls\":[\"bzz-raw://7853c5d97803412369707e2ce6d6b61dbafdfc1a7484416d7794ede472d3ec04\",\"dweb:/ipfs/QmaUJ9oxDn1YSb3W3UknHS55vJv8LSEE2ZvcRG3aJX3kzz\"]},\"src/lib/LibOraclePrice.sol\":{\"keccak256\":\"0xc419eb784ceb4cd0071faae3fa0888ccdc12f245d390852110f4a53cd40335b5\",\"urls\":[\"bzz-raw://96df716b09277c634dd861d5959945e7c0e92d64bd8c680a6725d178c4e9bfe4\",\"dweb:/ipfs/QmV5EKpBRh1qKKxi4bTq3Hrn6HuV4USnP64Vj1dvX79Vbp\"]},\"src/utils/Common.sol\":{\"keccak256\":\"0x825b67051bb6656367c807d479fbcb3acfc05ddd40c2f808f53c56cc7df65241\",\"urls\":[\"bzz-raw://5ee9f171a17bd35b1970b84dc7c964a326694af177bda0531bc7fd2252029ecb\",\"dweb:/ipfs/QmXdMNVRuKhMdn5AT8BE8oZCo3X4QmRtZAE5Cw2CSHsrA9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"enum ICapacity.CCStatus","name":"status","type":"uint8"}],"type":"error","name":"CapacityCommitmentIsActive"},{"inputs":[{"internalType":"enum ICapacity.CCStatus","name":"status","type":"uint8"}],"type":"error","name":"CapacityCommitmentIsNotActive"},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"totalCollateral","type":"uint256","indexed":false}],"type":"event","name":"CollateralDeposited","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":false},{"internalType":"uint256","name":"amountWithdrawn","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountSlashed","type":"uint256","indexed":false}],"type":"event","name":"CollateralWithdrawn","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"startEpoch","type":"uint256","indexed":false},{"internalType":"uint256","name":"endEpoch","type":"uint256","indexed":false},{"internalType":"bytes32[]","name":"unitIds","type":"bytes32[]","indexed":false}],"type":"event","name":"CommitmentActivated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":false},{"internalType":"uint256","name":"duration","type":"uint256","indexed":false},{"internalType":"address","name":"delegator","type":"address","indexed":false},{"internalType":"uint256","name":"rewardDelegationRate","type":"uint256","indexed":false},{"internalType":"uint256","name":"fltCollateralPerUnit","type":"uint256","indexed":false}],"type":"event","name":"CommitmentCreated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"failedEpoch","type":"uint256","indexed":false}],"type":"event","name":"CommitmentFailed","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":true}],"type":"event","name":"CommitmentFinished","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":true}],"type":"event","name":"CommitmentRemoved","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":false},{"internalType":"uint256","name":"totalFailCount","type":"uint256","indexed":false},{"internalType":"uint256","name":"exitedUnitCount","type":"uint256","indexed":false},{"internalType":"uint256","name":"activeUnitCount","type":"uint256","indexed":false},{"internalType":"uint256","name":"nextAdditionalActiveUnitCount","type":"uint256","indexed":false},{"internalType":"uint256","name":"changedEpoch","type":"uint256","indexed":false}],"type":"event","name":"CommitmentStatsUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"unitId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"localUnitNonce","type":"bytes32","indexed":false}],"type":"event","name":"ProofSubmitted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"ccRewardsAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"dealStakerRewardsAmount","type":"uint256","indexed":false}],"type":"event","name":"RewardWithdrawn","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"unitId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"startEpoch","type":"uint256","indexed":false}],"type":"event","name":"UnitActivated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"unitId","type":"bytes32","indexed":true}],"type":"event","name":"UnitDeactivated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"address","name":"delegator","type":"address"},{"internalType":"uint256","name":"rewardDelegationRate","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createCommitment","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32[]","name":"commitmentIds","type":"bytes32[]"}],"stateMutability":"payable","type":"function","name":"depositCollateral"},{"inputs":[],"stateMutability":"payable","type":"function","name":"diamondReceive"},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"finishCommitment"},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getCommitment","outputs":[{"internalType":"struct ICapacity.CommitmentView","name":"","type":"tuple","components":[{"internalType":"enum ICapacity.CCStatus","name":"status","type":"uint8"},{"internalType":"bytes32","name":"peerId","type":"bytes32"},{"internalType":"uint256","name":"collateralPerUnit","type":"uint256"},{"internalType":"uint256","name":"unitCount","type":"uint256"},{"internalType":"uint256","name":"startEpoch","type":"uint256"},{"internalType":"uint256","name":"endEpoch","type":"uint256"},{"internalType":"uint256","name":"rewardDelegatorRate","type":"uint256"},{"internalType":"address","name":"delegator","type":"address"},{"internalType":"uint256","name":"totalFailCount","type":"uint256"},{"internalType":"uint256","name":"failedEpoch","type":"uint256"},{"internalType":"uint256","name":"exitedUnitCount","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getGlobalNonce","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getProofCounts","outputs":[{"internalType":"bytes32[]","name":"unitIds","type":"bytes32[]"},{"internalType":"uint256[]","name":"counts","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"epoch","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRewardInfo","outputs":[{"internalType":"struct ICapacity.RewardInfo","name":"","type":"tuple","components":[{"internalType":"uint256","name":"minProofsPerEpoch","type":"uint256"},{"internalType":"uint256","name":"maxProofsPerEpoch","type":"uint256"},{"internalType":"uint256","name":"totalSuccessProofs","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getStatus","outputs":[{"internalType":"enum ICapacity.CCStatus","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"},{"internalType":"bytes32[]","name":"unitIds","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"removeCUFromCC"},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"removeCommitment"},{"inputs":[{"internalType":"bytes32","name":"unitId","type":"bytes32"},{"internalType":"bytes32","name":"localUnitNonce","type":"bytes32"},{"internalType":"bytes32","name":"resultHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"submitProof"},{"inputs":[{"internalType":"bytes32[]","name":"unitIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"localUnitNonces","type":"bytes32[]"},{"internalType":"bytes32[]","name":"resultHashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"submitProofs"},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"totalRewards","outputs":[{"internalType":"struct ICapacity.CCRewardsView","name":"","type":"tuple","components":[{"internalType":"uint256","name":"ccRewards","type":"uint256"},{"internalType":"uint256","name":"dealStakerRewards","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"unlockedRewards","outputs":[{"internalType":"struct ICapacity.CCRewardsView","name":"","type":"tuple","components":[{"internalType":"uint256","name":"ccRewards","type":"uint256"},{"internalType":"uint256","name":"dealStakerRewards","type":"uint256"}]}]},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"withdrawCollateral"},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"withdrawReward"},{"inputs":[{"internalType":"bytes32","name":"commitmentId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"withdrawnRewards","outputs":[{"internalType":"struct ICapacity.CCRewardsView","name":"","type":"tuple","components":[{"internalType":"uint256","name":"ccRewards","type":"uint256"},{"internalType":"uint256","name":"dealStakerRewards","type":"uint256"}]}]}],"devdoc":{"kind":"dev","methods":{"createCommitment(bytes32,uint256,address,uint256)":{"details":"Creates a new commitment","params":{"delegator":"The delegator address. If address is zero, the commitment has no delegator","duration":"The duration of the commitment in Epochs","peerId":"Peer id which linked to the commitment","rewardDelegationRate":"The reward delegation rate in precision"}},"depositCollateral(bytes32[])":{"details":"Deposits collateral for commitments. It makes commitments activeNote: this method consists of indirect potential delegator address update(set delegator to msg.sender if 0x0 before).","params":{"commitmentIds":"Commitment ids"}},"diamondReceive()":{"details":"to add reward balance by msg.value"},"finishCommitment(bytes32)":{"details":"Finishes the commitment if it is in Failed or Ended status","params":{"commitmentId":"Commitment id"}},"getCommitment(bytes32)":{"details":"Returns the commitment info","params":{"commitmentId":"Commitment id"},"returns":{"_0":"info commitment info"}},"getProofCounts(bytes32)":{"details":"Returns proof counts for each CU in current epoch","params":{"commitmentId":"Commitment id"},"returns":{"counts":"proof numbers sent in current epoch","unitIds":"unit ids"}},"getStatus(bytes32)":{"details":"Returns the commitment status","params":{"commitmentId":"Commitment id"},"returns":{"_0":"status commitment status"}},"removeCUFromCC(bytes32,bytes32[])":{"details":"Remove CU from Ended or Failed CC. Need to call this function before finish the commitment","params":{"commitmentId":"Commitment id","unitIds":"Compute unit ids which will be removed from the commitment"}},"removeCommitment(bytes32)":{"details":"Removes the commitment if it is in WaitDelegation status","params":{"commitmentId":"Commitment id"}},"submitProof(bytes32,bytes32,bytes32)":{"details":"Submits a proof for the commitment","params":{"localUnitNonce":"Local nonce of the unit for calculating the target hash. It's the proof","resultHash":"Target hash of this proof","unitId":"Compute unit id which provide the proof"}},"submitProofs(bytes32[],bytes32[],bytes32[])":{"details":"Submits proofs for the commitment","params":{"localUnitNonces":"Local nonces of the units for calculating the target hashes. It's the proof","resultHashes":"Target hashes of this proof","unitIds":"Compute unit ids which provide the proof"}},"totalRewards(bytes32)":{"details":"Returns the total rewards of the commitment.","params":{"commitmentId":"Commitment id"},"returns":{"_0":"CCRewardsView Returns the total rewards of the commitment minus withdrawn rewards."}},"unlockedRewards(bytes32)":{"details":"Returns the unlocked rewards of the commitment","params":{"commitmentId":"Commitment id"},"returns":{"_0":"CCRewardsView the unlocked rewards of the commitment minus withdrawn rewards."}},"withdrawCollateral(bytes32)":{"details":"Withdraws the collateral from the commitment. Commitment must be Failed or Inactive.","params":{"commitmentId":"Commitment id"}},"withdrawReward(bytes32)":{"details":"Withdraws the reward from the commitment","params":{"commitmentId":"Commitment id"}},"withdrawnRewards(bytes32)":{"details":"Returns rewards withdrawn from the commitment","params":{"commitmentId":"Commitment id"},"returns":{"_0":"CCRewardsView rewards withdrawn from the commitment"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/filecoin-solidity/lib/buffer/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","buffer/=lib/filecoin-solidity/lib/buffer/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","filecoin-solidity/=lib/filecoin-solidity/contracts/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/filecoin-solidity/lib/openzeppelin-contracts-upgradeable/contracts/","solidity-BigNumber/=lib/filecoin-solidity/contracts/vendor/solidity-BigNumber/src/","solidity-cborutils/=lib/solidity-cborutils/contracts/","solidity-cborutils/contracts/=lib/filecoin-solidity/lib/solidity-cborutils/contracts/"],"optimizer":{"enabled":true,"runs":0},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/core/interfaces/ICapacity.sol":"ICapacity"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/core/DealStakerRewards.sol":{"keccak256":"0x2f2b5c5371c26452f6a9216652e3d71d5fa2261e247eb348f425ad55f69c3b13","urls":["bzz-raw://09997c66a02f87caedf5ddbb2ffff2ae07f2edc3ae0bfa11e922674340e86f09","dweb:/ipfs/QmfZLuDJawL9tQ9iqCh99Ebm1hizrZMXpgtr2khj17D2Jw"],"license":null},"src/core/Vesting.sol":{"keccak256":"0x41b1172dae292db06a24bed2b8f5b605a6f1d3c2f6bf5729c02e39045210f06f","urls":["bzz-raw://78eeaf5c48f281b83f979d42fdc1f17004c7a856167f1d12babfaee599218fb1","dweb:/ipfs/QmRpBc4j89kjdBJCj33EuCVLuHHd8LDH6Po6SzciLu9THP"],"license":null},"src/core/interfaces/ICapacity.sol":{"keccak256":"0x59332471619df4a8f4f0f53903eb2caa2602f4476cdf2b394788e60c8075bacd","urls":["bzz-raw://dceafa036f0afad4f11b2b518457a76892cf428f3cfef6cba22c4841f2ccbf12","dweb:/ipfs/QmWydgEToL2Y49YmHe52H53uV7Tjkub3fjk75SESFs56Ma"],"license":null},"src/lib/LibCapacityConst.sol":{"keccak256":"0xa48b5a2b9faed4e3fda995af6d00f1e24043e473b67e26a0a5c75e1f90d9d25f","urls":["bzz-raw://913b212a215421accbfed6ffec20774deb52a45c18dbfbfe4fa7ced5afca63d0","dweb:/ipfs/QmRe6jbsCLNusG3GHxacNzGNdtT7Qr4akVFiumVNLf3rn4"],"license":null},"src/lib/LibEpochController.sol":{"keccak256":"0x9ec3cc1629fd372eb13414bd72fd5bcbefc5cd750481a36a02a4ac238ec1ac27","urls":["bzz-raw://7853c5d97803412369707e2ce6d6b61dbafdfc1a7484416d7794ede472d3ec04","dweb:/ipfs/QmaUJ9oxDn1YSb3W3UknHS55vJv8LSEE2ZvcRG3aJX3kzz"],"license":null},"src/lib/LibOraclePrice.sol":{"keccak256":"0xc419eb784ceb4cd0071faae3fa0888ccdc12f245d390852110f4a53cd40335b5","urls":["bzz-raw://96df716b09277c634dd861d5959945e7c0e92d64bd8c680a6725d178c4e9bfe4","dweb:/ipfs/QmV5EKpBRh1qKKxi4bTq3Hrn6HuV4USnP64Vj1dvX79Vbp"],"license":null},"src/utils/Common.sol":{"keccak256":"0x825b67051bb6656367c807d479fbcb3acfc05ddd40c2f808f53c56cc7df65241","urls":["bzz-raw://5ee9f171a17bd35b1970b84dc7c964a326694af177bda0531bc7fd2252029ecb","dweb:/ipfs/QmXdMNVRuKhMdn5AT8BE8oZCo3X4QmRtZAE5Cw2CSHsrA9"],"license":null}},"version":1},"storageLayout":{"storage":[],"types":{}},"devdoc":{"version":1,"kind":"dev","details":"Capacity contract is responsible for managing the commitments","methods":{"createCommitment(bytes32,uint256,address,uint256)":{"details":"Creates a new commitment","params":{"delegator":"The delegator address. If address is zero, the commitment has no delegator","duration":"The duration of the commitment in Epochs","peerId":"Peer id which linked to the commitment","rewardDelegationRate":"The reward delegation rate in precision"}},"depositCollateral(bytes32[])":{"details":"Deposits collateral for commitments. It makes commitments activeNote: this method consists of indirect potential delegator address update(set delegator to msg.sender if 0x0 before).","params":{"commitmentIds":"Commitment ids"}},"diamondReceive()":{"details":"to add reward balance by msg.value"},"finishCommitment(bytes32)":{"details":"Finishes the commitment if it is in Failed or Ended status","params":{"commitmentId":"Commitment id"}},"getCommitment(bytes32)":{"details":"Returns the commitment info","params":{"commitmentId":"Commitment id"},"returns":{"_0":"info commitment info"}},"getProofCounts(bytes32)":{"details":"Returns proof counts for each CU in current epoch","params":{"commitmentId":"Commitment id"},"returns":{"counts":"proof numbers sent in current epoch","unitIds":"unit ids"}},"getStatus(bytes32)":{"details":"Returns the commitment status","params":{"commitmentId":"Commitment id"},"returns":{"_0":"status commitment status"}},"removeCUFromCC(bytes32,bytes32[])":{"details":"Remove CU from Ended or Failed CC. Need to call this function before finish the commitment","params":{"commitmentId":"Commitment id","unitIds":"Compute unit ids which will be removed from the commitment"}},"removeCommitment(bytes32)":{"details":"Removes the commitment if it is in WaitDelegation status","params":{"commitmentId":"Commitment id"}},"submitProof(bytes32,bytes32,bytes32)":{"details":"Submits a proof for the commitment","params":{"localUnitNonce":"Local nonce of the unit for calculating the target hash. It's the proof","resultHash":"Target hash of this proof","unitId":"Compute unit id which provide the proof"}},"submitProofs(bytes32[],bytes32[],bytes32[])":{"details":"Submits proofs for the commitment","params":{"localUnitNonces":"Local nonces of the units for calculating the target hashes. It's the proof","resultHashes":"Target hashes of this proof","unitIds":"Compute unit ids which provide the proof"}},"totalRewards(bytes32)":{"details":"Returns the total rewards of the commitment.","params":{"commitmentId":"Commitment id"},"returns":{"_0":"CCRewardsView Returns the total rewards of the commitment minus withdrawn rewards."}},"unlockedRewards(bytes32)":{"details":"Returns the unlocked rewards of the commitment","params":{"commitmentId":"Commitment id"},"returns":{"_0":"CCRewardsView the unlocked rewards of the commitment minus withdrawn rewards."}},"withdrawCollateral(bytes32)":{"details":"Withdraws the collateral from the commitment. Commitment must be Failed or Inactive.","params":{"commitmentId":"Commitment id"}},"withdrawReward(bytes32)":{"details":"Withdraws the reward from the commitment","params":{"commitmentId":"Commitment id"}},"withdrawnRewards(bytes32)":{"details":"Returns rewards withdrawn from the commitment","params":{"commitmentId":"Commitment id"},"returns":{"_0":"CCRewardsView rewards withdrawn from the commitment"}}},"events":{"CollateralDeposited(bytes32,uint256)":{"details":"Emitted when a delegator deposited collateral to commitment","params":{"commitmentId":"Commitment id","totalCollateral":"The total collateral deposited to commitment"}},"CollateralWithdrawn(bytes32,uint256,uint256)":{"details":"Emitted when a someone withdraws deposited collateral from commitment","params":{"amountSlashed":"The slashed part of the collateral","amountWithdrawn":"The returned part of the collateral after slashing","commitmentId":"Commitment id"}},"CommitmentActivated(bytes32,bytes32,uint256,uint256,bytes32[])":{"details":"Emitted when a commitment is activated. Commitment can be activated only if delegator deposited collateral.","params":{"commitmentId":"Commitment id which activated","endEpoch":"The end epoch of the commitment","peerId":"Peer id which linked to the commitment","startEpoch":"The start epoch of the commitment","unitIds":"Compute unit ids which linked to the commitment"}},"CommitmentCreated(bytes32,bytes32,uint256,address,uint256,uint256)":{"details":"Emitted when a new commitment is created","params":{"commitmentId":"Commitment id","delegator":"The delegator address. If address is zero, the commitment has no delegator","duration":"The duration of the commitment in Epochs","fltCollateralPerUnit":"The flt collateral per compute unit","peerId":"Peer id which linked to the commitment","rewardDelegationRate":"The reward delegation rate in precision"}},"CommitmentFinished(bytes32)":{"details":"Emitted when a commitment is finished. Commitment can be finished only if it is in Failed or Ended","params":{"commitmentId":"Commitment id which finished"}},"CommitmentRemoved(bytes32)":{"details":"Emitted when a commitment is removed. Commitment can be removed only if it is in WaitDelegation status","params":{"commitmentId":"Commitment id"}},"ProofSubmitted(bytes32,bytes32,bytes32)":{"details":"Emitted when a proof is submitted","params":{"commitmentId":"Commitment id","localUnitNonce":"The local nonce of the unit for calculating the target hash","unitId":"Compute unit id which linked to the proof"}},"RewardWithdrawn(bytes32,uint256,uint256)":{"details":"Emitted when a reward is withdrawn","params":{"ccRewardsAmount":"The amount withdrawn from the CC rewards -- divided between provider abd staker","commitmentId":"Commitment id","dealStakerRewardsAmount":"The amount of the withdrawn reward from deal staker rewards"}},"UnitActivated(bytes32,bytes32,uint256)":{"details":"Emitted when a unit activated. Unit is activated when it returned from deal","params":{"commitmentId":"Commitment id","unitId":"Compute unit id which activated"}},"UnitDeactivated(bytes32,bytes32)":{"details":"Emitted when a unit deactivated. Unit is deactivated when it moved to deal","params":{"commitmentId":"Commitment id","unitId":"Compute unit id which deactivated"}}},"errors":{"CapacityCommitmentIsActive(uint8)":[{"details":"Capacity commitment is active"}],"CapacityCommitmentIsNotActive(uint8)":[{"details":"Capacity commitment is not active"}]},"title":"Capacity contract interface"},"id":66}