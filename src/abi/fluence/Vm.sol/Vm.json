{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","randomAddress()":"d5bee9f5","randomUint()":"25124730","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uin256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[\":@ensdomains/buffer/=lib/filecoin-solidity/lib/buffer/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":buffer/=lib/filecoin-solidity/lib/buffer/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":filecoin-solidity/=lib/filecoin-solidity/contracts/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/filecoin-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-BigNumber/=lib/filecoin-solidity/contracts/vendor/solidity-BigNumber/src/\",\":solidity-cborutils/=lib/solidity-cborutils/contracts/\",\":solidity-cborutils/contracts/=lib/filecoin-solidity/lib/solidity-cborutils/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x18e223717d9fd7c71e60c3fc3209ff49ee774365b6294039e2f6c17b8250c7a6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c4a8457a84ddb1e753c8634876065f5d12691fac78675dcc7a405f511827015b\",\"dweb:/ipfs/QmRagGCM8bZXGjCwxt8tmNf79yb1SuCqNfiDr8WvakEPxo\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"randomAddress()":{"notice":"Returns a random `address`."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256,uint256)":{"notice":"Returns random uin256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/filecoin-solidity/lib/buffer/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","buffer/=lib/filecoin-solidity/lib/buffer/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","filecoin-solidity/=lib/filecoin-solidity/contracts/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/filecoin-solidity/lib/openzeppelin-contracts-upgradeable/contracts/","solidity-BigNumber/=lib/filecoin-solidity/contracts/vendor/solidity-BigNumber/src/","solidity-cborutils/=lib/solidity-cborutils/contracts/","solidity-cborutils/contracts/=lib/filecoin-solidity/lib/solidity-cborutils/contracts/"],"optimizer":{"enabled":true,"runs":0},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x18e223717d9fd7c71e60c3fc3209ff49ee774365b6294039e2f6c17b8250c7a6","urls":["bzz-raw://c4a8457a84ddb1e753c8634876065f5d12691fac78675dcc7a405f511827015b","dweb:/ipfs/QmRagGCM8bZXGjCwxt8tmNf79yb1SuCqNfiDr8WvakEPxo"],"license":"MIT OR Apache-2.0"}},"version":1},"storageLayout":{"storage":[],"types":{}},"devdoc":{"version":1,"kind":"dev"},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":14949,"exportedSymbols":{"Vm":[14948],"VmSafe":[14299]},"nodeType":"SourceUnit","src":"117:94988:14","nodes":[{"id":10971,"nodeType":"PragmaDirective","src":"117:31:14","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":10972,"nodeType":"PragmaDirective","src":"149:33:14","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":14299,"nodeType":"ContractDefinition","src":"409:78634:14","nodes":[{"id":10980,"nodeType":"EnumDefinition","src":"529:533:14","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":10974,"nodeType":"StructuredDocumentation","src":"432:92:14","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":10975,"name":"None","nameLocation":"610:4:14","nodeType":"EnumValue","src":"610:4:14"},{"id":10976,"name":"Broadcast","nameLocation":"714:9:14","nodeType":"EnumValue","src":"714:9:14"},{"id":10977,"name":"RecurrentBroadcast","nameLocation":"829:18:14","nodeType":"EnumValue","src":"829:18:14"},{"id":10978,"name":"Prank","nameLocation":"939:5:14","nodeType":"EnumValue","src":"939:5:14"},{"id":10979,"name":"RecurrentPrank","nameLocation":"1042:14:14","nodeType":"EnumValue","src":"1042:14:14"}],"name":"CallerMode","nameLocation":"534:10:14"},{"id":10993,"nodeType":"EnumDefinition","src":"1118:791:14","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":10981,"nodeType":"StructuredDocumentation","src":"1068:45:14","text":"The kind of account access that occurred."},"members":[{"id":10982,"name":"Call","nameLocation":"1186:4:14","nodeType":"EnumValue","src":"1186:4:14"},{"id":10983,"name":"DelegateCall","nameLocation":"1252:12:14","nodeType":"EnumValue","src":"1252:12:14"},{"id":10984,"name":"CallCode","nameLocation":"1322:8:14","nodeType":"EnumValue","src":"1322:8:14"},{"id":10985,"name":"StaticCall","nameLocation":"1390:10:14","nodeType":"EnumValue","src":"1390:10:14"},{"id":10986,"name":"Create","nameLocation":"1446:6:14","nodeType":"EnumValue","src":"1446:6:14"},{"id":10987,"name":"SelfDestruct","nameLocation":"1505:12:14","nodeType":"EnumValue","src":"1505:12:14"},{"id":10988,"name":"Resume","nameLocation":"1644:6:14","nodeType":"EnumValue","src":"1644:6:14"},{"id":10989,"name":"Balance","nameLocation":"1703:7:14","nodeType":"EnumValue","src":"1703:7:14"},{"id":10990,"name":"Extcodesize","nameLocation":"1764:11:14","nodeType":"EnumValue","src":"1764:11:14"},{"id":10991,"name":"Extcodehash","nameLocation":"1829:11:14","nodeType":"EnumValue","src":"1829:11:14"},{"id":10992,"name":"Extcodecopy","nameLocation":"1892:11:14","nodeType":"EnumValue","src":"1892:11:14"}],"name":"AccountAccessKind","nameLocation":"1123:17:14"},{"id":11004,"nodeType":"EnumDefinition","src":"1949:683:14","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":10994,"nodeType":"StructuredDocumentation","src":"1915:29:14","text":"Forge execution contexts."},"members":[{"id":10995,"name":"TestGroup","nameLocation":"2047:9:14","nodeType":"EnumValue","src":"2047:9:14"},{"id":10996,"name":"Test","nameLocation":"2109:4:14","nodeType":"EnumValue","src":"2109:4:14"},{"id":10997,"name":"Coverage","nameLocation":"2170:8:14","nodeType":"EnumValue","src":"2170:8:14"},{"id":10998,"name":"Snapshot","nameLocation":"2235:8:14","nodeType":"EnumValue","src":"2235:8:14"},{"id":10999,"name":"ScriptGroup","nameLocation":"2327:11:14","nodeType":"EnumValue","src":"2327:11:14"},{"id":11000,"name":"ScriptDryRun","nameLocation":"2393:12:14","nodeType":"EnumValue","src":"2393:12:14"},{"id":11001,"name":"ScriptBroadcast","nameLocation":"2472:15:14","nodeType":"EnumValue","src":"2472:15:14"},{"id":11002,"name":"ScriptResume","nameLocation":"2551:12:14","nodeType":"EnumValue","src":"2551:12:14"},{"id":11003,"name":"Unknown","nameLocation":"2619:7:14","nodeType":"EnumValue","src":"2619:7:14"}],"name":"ForgeContext","nameLocation":"1954:12:14"},{"id":11013,"nodeType":"StructDefinition","src":"2694:237:14","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":11005,"nodeType":"StructuredDocumentation","src":"2638:51:14","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":11008,"mutability":"mutable","name":"topics","nameLocation":"2792:6:14","nodeType":"VariableDeclaration","scope":11013,"src":"2782:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11007,"nodeType":"ArrayTypeName","src":"2782:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":11010,"mutability":"mutable","name":"data","nameLocation":"2850:4:14","nodeType":"VariableDeclaration","scope":11013,"src":"2844:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11009,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11012,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:14","nodeType":"VariableDeclaration","scope":11013,"src":"2909:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11011,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:14","scope":14299,"visibility":"public"},{"id":11019,"nodeType":"StructDefinition","src":"3000:119:14","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":11014,"nodeType":"StructuredDocumentation","src":"2937:58:14","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":11016,"mutability":"mutable","name":"key","nameLocation":"3065:3:14","nodeType":"VariableDeclaration","scope":11019,"src":"3058:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11015,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11018,"mutability":"mutable","name":"url","nameLocation":"3109:3:14","nodeType":"VariableDeclaration","scope":11019,"src":"3102:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11017,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:14","scope":14299,"visibility":"public"},{"id":11040,"nodeType":"StructDefinition","src":"3179:615:14","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":11020,"nodeType":"StructuredDocumentation","src":"3125:49:14","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":11022,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:14","nodeType":"VariableDeclaration","scope":11040,"src":"3252:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11021,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11025,"mutability":"mutable","name":"topics","nameLocation":"3354:6:14","nodeType":"VariableDeclaration","scope":11040,"src":"3344:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11024,"nodeType":"ArrayTypeName","src":"3344:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":11027,"mutability":"mutable","name":"data","nameLocation":"3412:4:14","nodeType":"VariableDeclaration","scope":11040,"src":"3406:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11026,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11029,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:14","nodeType":"VariableDeclaration","scope":11040,"src":"3453:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11031,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:14","nodeType":"VariableDeclaration","scope":11040,"src":"3509:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11030,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11033,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:14","nodeType":"VariableDeclaration","scope":11040,"src":"3570:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11035,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:14","nodeType":"VariableDeclaration","scope":11040,"src":"3650:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11034,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11037,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:14","nodeType":"VariableDeclaration","scope":11040,"src":"3709:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11036,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11039,"mutability":"mutable","name":"removed","nameLocation":"3780:7:14","nodeType":"VariableDeclaration","scope":11040,"src":"3775:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11038,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:14","scope":14299,"visibility":"public"},{"id":11052,"nodeType":"StructDefinition","src":"3870:334:14","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":11041,"nodeType":"StructuredDocumentation","src":"3800:65:14","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":11043,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:14","nodeType":"VariableDeclaration","scope":11052,"src":"3934:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11042,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11045,"mutability":"mutable","name":"path","nameLocation":"4004:4:14","nodeType":"VariableDeclaration","scope":11052,"src":"3997:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":11044,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11047,"mutability":"mutable","name":"depth","nameLocation":"4060:5:14","nodeType":"VariableDeclaration","scope":11052,"src":"4053:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11046,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11049,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:14","nodeType":"VariableDeclaration","scope":11052,"src":"4120:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11048,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11051,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:14","nodeType":"VariableDeclaration","scope":11052,"src":"4183:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11050,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:14","scope":14299,"visibility":"public"},{"id":11068,"nodeType":"StructDefinition","src":"4434:599:14","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":11053,"nodeType":"StructuredDocumentation","src":"4210:219:14","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":11055,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:14","nodeType":"VariableDeclaration","scope":11068,"src":"4515:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11054,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11057,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:14","nodeType":"VariableDeclaration","scope":11068,"src":"4586:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11056,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11059,"mutability":"mutable","name":"length","nameLocation":"4683:6:14","nodeType":"VariableDeclaration","scope":11068,"src":"4675:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11061,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:14","nodeType":"VariableDeclaration","scope":11068,"src":"4769:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11060,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11063,"mutability":"mutable","name":"modified","nameLocation":"4863:8:14","nodeType":"VariableDeclaration","scope":11068,"src":"4855:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11062,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11065,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:14","nodeType":"VariableDeclaration","scope":11068,"src":"4931:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11064,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11067,"mutability":"mutable","name":"created","nameLocation":"5019:7:14","nodeType":"VariableDeclaration","scope":11068,"src":"5011:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11066,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:14","scope":14299,"visibility":"public"},{"id":11078,"nodeType":"StructDefinition","src":"5087:277:14","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":11069,"nodeType":"StructuredDocumentation","src":"5039:43:14","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":11071,"mutability":"mutable","name":"addr","nameLocation":"5152:4:14","nodeType":"VariableDeclaration","scope":11078,"src":"5144:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11070,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11073,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:14","nodeType":"VariableDeclaration","scope":11078,"src":"5206:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11072,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11075,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:14","nodeType":"VariableDeclaration","scope":11078,"src":"5274:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11074,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11077,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:14","nodeType":"VariableDeclaration","scope":11078,"src":"5339:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11076,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:14","scope":14299,"visibility":"public"},{"id":11086,"nodeType":"StructDefinition","src":"5409:213:14","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":11079,"nodeType":"StructuredDocumentation","src":"5370:34:14","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":11081,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:14","nodeType":"VariableDeclaration","scope":11086,"src":"5474:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":11080,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":11083,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:14","nodeType":"VariableDeclaration","scope":11086,"src":"5551:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11082,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11085,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:14","nodeType":"VariableDeclaration","scope":11086,"src":"5603:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11084,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:14","scope":14299,"visibility":"public"},{"id":11092,"nodeType":"StructDefinition","src":"5671:184:14","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":11087,"nodeType":"StructuredDocumentation","src":"5628:38:14","text":"Information on the chain and fork."},"members":[{"constant":false,"id":11089,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:14","nodeType":"VariableDeclaration","scope":11092,"src":"5764:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11088,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11091,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:14","nodeType":"VariableDeclaration","scope":11092,"src":"5833:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11090,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:14","scope":14299,"visibility":"public"},{"id":11124,"nodeType":"StructDefinition","src":"5916:1837:14","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":11093,"nodeType":"StructuredDocumentation","src":"5861:50:14","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":11096,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:14","nodeType":"VariableDeclaration","scope":11124,"src":"5998:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$11092_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":11095,"nodeType":"UserDefinedTypeName","pathNode":{"id":11094,"name":"ChainInfo","nameLocations":["5998:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":11092,"src":"5998:9:14"},"referencedDeclaration":11092,"src":"5998:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$11092_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":11099,"mutability":"mutable","name":"kind","nameLocation":"6471:4:14","nodeType":"VariableDeclaration","scope":11124,"src":"6453:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$10993","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":11098,"nodeType":"UserDefinedTypeName","pathNode":{"id":11097,"name":"AccountAccessKind","nameLocations":["6453:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":10993,"src":"6453:17:14"},"referencedDeclaration":10993,"src":"6453:17:14","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$10993","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":11101,"mutability":"mutable","name":"account","nameLocation":"6648:7:14","nodeType":"VariableDeclaration","scope":11124,"src":"6640:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11100,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11103,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:14","nodeType":"VariableDeclaration","scope":11124,"src":"6703:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11102,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11105,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:14","nodeType":"VariableDeclaration","scope":11124,"src":"6917:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11104,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11107,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:14","nodeType":"VariableDeclaration","scope":11124,"src":"7000:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11106,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11109,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:14","nodeType":"VariableDeclaration","scope":11124,"src":"7175:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11108,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11111,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:14","nodeType":"VariableDeclaration","scope":11124,"src":"7254:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11110,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11113,"mutability":"mutable","name":"value","nameLocation":"7344:5:14","nodeType":"VariableDeclaration","scope":11124,"src":"7336:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11112,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11115,"mutability":"mutable","name":"data","nameLocation":"7418:4:14","nodeType":"VariableDeclaration","scope":11124,"src":"7412:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":11114,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":11117,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:14","nodeType":"VariableDeclaration","scope":11124,"src":"7508:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11116,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11121,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:14","nodeType":"VariableDeclaration","scope":11124,"src":"7619:31:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$11138_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":11119,"nodeType":"UserDefinedTypeName","pathNode":{"id":11118,"name":"StorageAccess","nameLocations":["7619:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":11138,"src":"7619:13:14"},"referencedDeclaration":11138,"src":"7619:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$11138_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":11120,"nodeType":"ArrayTypeName","src":"7619:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$11138_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":11123,"mutability":"mutable","name":"depth","nameLocation":"7741:5:14","nodeType":"VariableDeclaration","scope":11124,"src":"7734:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11122,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:14","scope":14299,"visibility":"public"},{"id":11138,"nodeType":"StructDefinition","src":"7815:425:14","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":11125,"nodeType":"StructuredDocumentation","src":"7759:51:14","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":11127,"mutability":"mutable","name":"account","nameLocation":"7905:7:14","nodeType":"VariableDeclaration","scope":11138,"src":"7897:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11126,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11129,"mutability":"mutable","name":"slot","nameLocation":"7969:4:14","nodeType":"VariableDeclaration","scope":11138,"src":"7961:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11131,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:14","nodeType":"VariableDeclaration","scope":11138,"src":"8021:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11130,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11133,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:14","nodeType":"VariableDeclaration","scope":11138,"src":"8086:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11135,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:14","nodeType":"VariableDeclaration","scope":11138,"src":"8155:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11137,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:14","nodeType":"VariableDeclaration","scope":11138,"src":"8220:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11136,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:14","scope":14299,"visibility":"public"},{"id":11150,"nodeType":"StructDefinition","src":"8291:458:14","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":11139,"nodeType":"StructuredDocumentation","src":"8246:40:14","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":11141,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:14","nodeType":"VariableDeclaration","scope":11150,"src":"8350:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11140,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11143,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:14","nodeType":"VariableDeclaration","scope":11150,"src":"8406:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11142,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11145,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:14","nodeType":"VariableDeclaration","scope":11150,"src":"8587:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11144,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11147,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:14","nodeType":"VariableDeclaration","scope":11150,"src":"8656:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":11146,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":11149,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:14","nodeType":"VariableDeclaration","scope":11150,"src":"8723:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11148,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:14","scope":14299,"visibility":"public"},{"id":11158,"nodeType":"FunctionDefinition","src":"8936:80:14","nodes":[],"documentation":{"id":11151,"nodeType":"StructuredDocumentation","src":"8793:138:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"8945:10:14","parameters":{"id":11154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11153,"mutability":"mutable","name":"name","nameLocation":"8972:4:14","nodeType":"VariableDeclaration","scope":11158,"src":"8956:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11152,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8955:22:14"},"returnParameters":{"id":11157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11156,"mutability":"mutable","name":"value","nameLocation":"9009:5:14","nodeType":"VariableDeclaration","scope":11158,"src":"9001:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11155,"name":"address","nodeType":"ElementaryTypeName","src":"9001:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9000:15:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11169,"nodeType":"FunctionDefinition","src":"9199:112:14","nodes":[],"documentation":{"id":11159,"nodeType":"StructuredDocumentation","src":"9022:172:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"9208:10:14","parameters":{"id":11164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11161,"mutability":"mutable","name":"name","nameLocation":"9235:4:14","nodeType":"VariableDeclaration","scope":11169,"src":"9219:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11160,"name":"string","nodeType":"ElementaryTypeName","src":"9219:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11163,"mutability":"mutable","name":"delim","nameLocation":"9257:5:14","nodeType":"VariableDeclaration","scope":11169,"src":"9241:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11162,"name":"string","nodeType":"ElementaryTypeName","src":"9241:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9218:45:14"},"returnParameters":{"id":11168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11167,"mutability":"mutable","name":"value","nameLocation":"9304:5:14","nodeType":"VariableDeclaration","scope":11169,"src":"9287:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11165,"name":"address","nodeType":"ElementaryTypeName","src":"9287:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11166,"nodeType":"ArrayTypeName","src":"9287:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9286:24:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11177,"nodeType":"FunctionDefinition","src":"9457:74:14","nodes":[],"documentation":{"id":11170,"nodeType":"StructuredDocumentation","src":"9317:135:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9466:7:14","parameters":{"id":11173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11172,"mutability":"mutable","name":"name","nameLocation":"9490:4:14","nodeType":"VariableDeclaration","scope":11177,"src":"9474:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11171,"name":"string","nodeType":"ElementaryTypeName","src":"9474:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9473:22:14"},"returnParameters":{"id":11176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11175,"mutability":"mutable","name":"value","nameLocation":"9524:5:14","nodeType":"VariableDeclaration","scope":11177,"src":"9519:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11174,"name":"bool","nodeType":"ElementaryTypeName","src":"9519:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9518:12:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11188,"nodeType":"FunctionDefinition","src":"9711:106:14","nodes":[],"documentation":{"id":11178,"nodeType":"StructuredDocumentation","src":"9537:169:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9720:7:14","parameters":{"id":11183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11180,"mutability":"mutable","name":"name","nameLocation":"9744:4:14","nodeType":"VariableDeclaration","scope":11188,"src":"9728:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11179,"name":"string","nodeType":"ElementaryTypeName","src":"9728:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11182,"mutability":"mutable","name":"delim","nameLocation":"9766:5:14","nodeType":"VariableDeclaration","scope":11188,"src":"9750:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11181,"name":"string","nodeType":"ElementaryTypeName","src":"9750:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9727:45:14"},"returnParameters":{"id":11187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11186,"mutability":"mutable","name":"value","nameLocation":"9810:5:14","nodeType":"VariableDeclaration","scope":11188,"src":"9796:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":11184,"name":"bool","nodeType":"ElementaryTypeName","src":"9796:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11185,"nodeType":"ArrayTypeName","src":"9796:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"9795:21:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11196,"nodeType":"FunctionDefinition","src":"9966:80:14","nodes":[],"documentation":{"id":11189,"nodeType":"StructuredDocumentation","src":"9823:138:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9975:10:14","parameters":{"id":11192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11191,"mutability":"mutable","name":"name","nameLocation":"10002:4:14","nodeType":"VariableDeclaration","scope":11196,"src":"9986:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11190,"name":"string","nodeType":"ElementaryTypeName","src":"9986:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9985:22:14"},"returnParameters":{"id":11195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11194,"mutability":"mutable","name":"value","nameLocation":"10039:5:14","nodeType":"VariableDeclaration","scope":11196,"src":"10031:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10031:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10030:15:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11207,"nodeType":"FunctionDefinition","src":"10229:112:14","nodes":[],"documentation":{"id":11197,"nodeType":"StructuredDocumentation","src":"10052:172:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"10238:10:14","parameters":{"id":11202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11199,"mutability":"mutable","name":"name","nameLocation":"10265:4:14","nodeType":"VariableDeclaration","scope":11207,"src":"10249:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11198,"name":"string","nodeType":"ElementaryTypeName","src":"10249:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11201,"mutability":"mutable","name":"delim","nameLocation":"10287:5:14","nodeType":"VariableDeclaration","scope":11207,"src":"10271:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11200,"name":"string","nodeType":"ElementaryTypeName","src":"10271:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10248:45:14"},"returnParameters":{"id":11206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11205,"mutability":"mutable","name":"value","nameLocation":"10334:5:14","nodeType":"VariableDeclaration","scope":11207,"src":"10317:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10317:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11204,"nodeType":"ArrayTypeName","src":"10317:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10316:24:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11215,"nodeType":"FunctionDefinition","src":"10488:83:14","nodes":[],"documentation":{"id":11208,"nodeType":"StructuredDocumentation","src":"10347:136:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10497:8:14","parameters":{"id":11211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11210,"mutability":"mutable","name":"name","nameLocation":"10522:4:14","nodeType":"VariableDeclaration","scope":11215,"src":"10506:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11209,"name":"string","nodeType":"ElementaryTypeName","src":"10506:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10505:22:14"},"returnParameters":{"id":11214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11213,"mutability":"mutable","name":"value","nameLocation":"10564:5:14","nodeType":"VariableDeclaration","scope":11215,"src":"10551:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11212,"name":"bytes","nodeType":"ElementaryTypeName","src":"10551:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10550:20:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11226,"nodeType":"FunctionDefinition","src":"10752:108:14","nodes":[],"documentation":{"id":11216,"nodeType":"StructuredDocumentation","src":"10577:170:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10761:8:14","parameters":{"id":11221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11218,"mutability":"mutable","name":"name","nameLocation":"10786:4:14","nodeType":"VariableDeclaration","scope":11226,"src":"10770:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11217,"name":"string","nodeType":"ElementaryTypeName","src":"10770:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11220,"mutability":"mutable","name":"delim","nameLocation":"10808:5:14","nodeType":"VariableDeclaration","scope":11226,"src":"10792:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11219,"name":"string","nodeType":"ElementaryTypeName","src":"10792:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10769:45:14"},"returnParameters":{"id":11225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11224,"mutability":"mutable","name":"value","nameLocation":"10853:5:14","nodeType":"VariableDeclaration","scope":11226,"src":"10838:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11222,"name":"bytes","nodeType":"ElementaryTypeName","src":"10838:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11223,"nodeType":"ArrayTypeName","src":"10838:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10837:22:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11234,"nodeType":"FunctionDefinition","src":"10962:77:14","nodes":[],"documentation":{"id":11227,"nodeType":"StructuredDocumentation","src":"10866:91:14","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"10971:9:14","parameters":{"id":11230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11229,"mutability":"mutable","name":"name","nameLocation":"10997:4:14","nodeType":"VariableDeclaration","scope":11234,"src":"10981:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11228,"name":"string","nodeType":"ElementaryTypeName","src":"10981:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10980:22:14"},"returnParameters":{"id":11233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11232,"mutability":"mutable","name":"result","nameLocation":"11031:6:14","nodeType":"VariableDeclaration","scope":11234,"src":"11026:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11231,"name":"bool","nodeType":"ElementaryTypeName","src":"11026:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11025:13:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11242,"nodeType":"FunctionDefinition","src":"11187:75:14","nodes":[],"documentation":{"id":11235,"nodeType":"StructuredDocumentation","src":"11045:137:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11196:6:14","parameters":{"id":11238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11237,"mutability":"mutable","name":"name","nameLocation":"11219:4:14","nodeType":"VariableDeclaration","scope":11242,"src":"11203:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11236,"name":"string","nodeType":"ElementaryTypeName","src":"11203:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11202:22:14"},"returnParameters":{"id":11241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11240,"mutability":"mutable","name":"value","nameLocation":"11255:5:14","nodeType":"VariableDeclaration","scope":11242,"src":"11248:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11239,"name":"int256","nodeType":"ElementaryTypeName","src":"11248:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11247:14:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11253,"nodeType":"FunctionDefinition","src":"11444:107:14","nodes":[],"documentation":{"id":11243,"nodeType":"StructuredDocumentation","src":"11268:171:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11453:6:14","parameters":{"id":11248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11245,"mutability":"mutable","name":"name","nameLocation":"11476:4:14","nodeType":"VariableDeclaration","scope":11253,"src":"11460:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11244,"name":"string","nodeType":"ElementaryTypeName","src":"11460:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11247,"mutability":"mutable","name":"delim","nameLocation":"11498:5:14","nodeType":"VariableDeclaration","scope":11253,"src":"11482:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11246,"name":"string","nodeType":"ElementaryTypeName","src":"11482:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11459:45:14"},"returnParameters":{"id":11252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11251,"mutability":"mutable","name":"value","nameLocation":"11544:5:14","nodeType":"VariableDeclaration","scope":11253,"src":"11528:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":11249,"name":"int256","nodeType":"ElementaryTypeName","src":"11528:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11250,"nodeType":"ArrayTypeName","src":"11528:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"11527:23:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11263,"nodeType":"FunctionDefinition","src":"11742:91:14","nodes":[],"documentation":{"id":11254,"nodeType":"StructuredDocumentation","src":"11557:180:14","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11751:5:14","parameters":{"id":11259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11256,"mutability":"mutable","name":"name","nameLocation":"11773:4:14","nodeType":"VariableDeclaration","scope":11263,"src":"11757:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11255,"name":"string","nodeType":"ElementaryTypeName","src":"11757:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11258,"mutability":"mutable","name":"defaultValue","nameLocation":"11784:12:14","nodeType":"VariableDeclaration","scope":11263,"src":"11779:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11257,"name":"bool","nodeType":"ElementaryTypeName","src":"11779:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11756:41:14"},"returnParameters":{"id":11262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11261,"mutability":"mutable","name":"value","nameLocation":"11826:5:14","nodeType":"VariableDeclaration","scope":11263,"src":"11821:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11260,"name":"bool","nodeType":"ElementaryTypeName","src":"11821:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11820:12:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11273,"nodeType":"FunctionDefinition","src":"12027:97:14","nodes":[],"documentation":{"id":11264,"nodeType":"StructuredDocumentation","src":"11839:183:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12036:5:14","parameters":{"id":11269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11266,"mutability":"mutable","name":"name","nameLocation":"12058:4:14","nodeType":"VariableDeclaration","scope":11273,"src":"12042:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11265,"name":"string","nodeType":"ElementaryTypeName","src":"12042:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11268,"mutability":"mutable","name":"defaultValue","nameLocation":"12072:12:14","nodeType":"VariableDeclaration","scope":11273,"src":"12064:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11267,"name":"uint256","nodeType":"ElementaryTypeName","src":"12064:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12041:44:14"},"returnParameters":{"id":11272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11271,"mutability":"mutable","name":"value","nameLocation":"12117:5:14","nodeType":"VariableDeclaration","scope":11273,"src":"12109:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11270,"name":"uint256","nodeType":"ElementaryTypeName","src":"12109:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12108:15:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11287,"nodeType":"FunctionDefinition","src":"12352:164:14","nodes":[],"documentation":{"id":11274,"nodeType":"StructuredDocumentation","src":"12130:217:14","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12361:5:14","parameters":{"id":11282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11276,"mutability":"mutable","name":"name","nameLocation":"12383:4:14","nodeType":"VariableDeclaration","scope":11287,"src":"12367:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11275,"name":"string","nodeType":"ElementaryTypeName","src":"12367:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11278,"mutability":"mutable","name":"delim","nameLocation":"12405:5:14","nodeType":"VariableDeclaration","scope":11287,"src":"12389:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11277,"name":"string","nodeType":"ElementaryTypeName","src":"12389:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11281,"mutability":"mutable","name":"defaultValue","nameLocation":"12431:12:14","nodeType":"VariableDeclaration","scope":11287,"src":"12412:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11279,"name":"address","nodeType":"ElementaryTypeName","src":"12412:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11280,"nodeType":"ArrayTypeName","src":"12412:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12366:78:14"},"returnParameters":{"id":11286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11285,"mutability":"mutable","name":"value","nameLocation":"12509:5:14","nodeType":"VariableDeclaration","scope":11287,"src":"12492:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11283,"name":"address","nodeType":"ElementaryTypeName","src":"12492:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11284,"nodeType":"ArrayTypeName","src":"12492:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12491:24:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11301,"nodeType":"FunctionDefinition","src":"12744:164:14","nodes":[],"documentation":{"id":11288,"nodeType":"StructuredDocumentation","src":"12522:217:14","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12753:5:14","parameters":{"id":11296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11290,"mutability":"mutable","name":"name","nameLocation":"12775:4:14","nodeType":"VariableDeclaration","scope":11301,"src":"12759:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11289,"name":"string","nodeType":"ElementaryTypeName","src":"12759:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11292,"mutability":"mutable","name":"delim","nameLocation":"12797:5:14","nodeType":"VariableDeclaration","scope":11301,"src":"12781:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11291,"name":"string","nodeType":"ElementaryTypeName","src":"12781:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11295,"mutability":"mutable","name":"defaultValue","nameLocation":"12823:12:14","nodeType":"VariableDeclaration","scope":11301,"src":"12804:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12804:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11294,"nodeType":"ArrayTypeName","src":"12804:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12758:78:14"},"returnParameters":{"id":11300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11299,"mutability":"mutable","name":"value","nameLocation":"12901:5:14","nodeType":"VariableDeclaration","scope":11301,"src":"12884:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12884:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11298,"nodeType":"ArrayTypeName","src":"12884:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12883:24:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11315,"nodeType":"FunctionDefinition","src":"13135:162:14","nodes":[],"documentation":{"id":11302,"nodeType":"StructuredDocumentation","src":"12914:216:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13144:5:14","parameters":{"id":11310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11304,"mutability":"mutable","name":"name","nameLocation":"13166:4:14","nodeType":"VariableDeclaration","scope":11315,"src":"13150:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11303,"name":"string","nodeType":"ElementaryTypeName","src":"13150:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11306,"mutability":"mutable","name":"delim","nameLocation":"13188:5:14","nodeType":"VariableDeclaration","scope":11315,"src":"13172:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11305,"name":"string","nodeType":"ElementaryTypeName","src":"13172:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11309,"mutability":"mutable","name":"defaultValue","nameLocation":"13213:12:14","nodeType":"VariableDeclaration","scope":11315,"src":"13195:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11307,"name":"string","nodeType":"ElementaryTypeName","src":"13195:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11308,"nodeType":"ArrayTypeName","src":"13195:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13149:77:14"},"returnParameters":{"id":11314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11313,"mutability":"mutable","name":"value","nameLocation":"13290:5:14","nodeType":"VariableDeclaration","scope":11315,"src":"13274:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11311,"name":"string","nodeType":"ElementaryTypeName","src":"13274:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11312,"nodeType":"ArrayTypeName","src":"13274:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13273:23:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11329,"nodeType":"FunctionDefinition","src":"13523:160:14","nodes":[],"documentation":{"id":11316,"nodeType":"StructuredDocumentation","src":"13303:215:14","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13532:5:14","parameters":{"id":11324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11318,"mutability":"mutable","name":"name","nameLocation":"13554:4:14","nodeType":"VariableDeclaration","scope":11329,"src":"13538:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11317,"name":"string","nodeType":"ElementaryTypeName","src":"13538:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11320,"mutability":"mutable","name":"delim","nameLocation":"13576:5:14","nodeType":"VariableDeclaration","scope":11329,"src":"13560:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11319,"name":"string","nodeType":"ElementaryTypeName","src":"13560:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11323,"mutability":"mutable","name":"defaultValue","nameLocation":"13600:12:14","nodeType":"VariableDeclaration","scope":11329,"src":"13583:29:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11321,"name":"bytes","nodeType":"ElementaryTypeName","src":"13583:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11322,"nodeType":"ArrayTypeName","src":"13583:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13537:76:14"},"returnParameters":{"id":11328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11327,"mutability":"mutable","name":"value","nameLocation":"13676:5:14","nodeType":"VariableDeclaration","scope":11329,"src":"13661:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":11325,"name":"bytes","nodeType":"ElementaryTypeName","src":"13661:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":11326,"nodeType":"ArrayTypeName","src":"13661:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13660:22:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11339,"nodeType":"FunctionDefinition","src":"13876:95:14","nodes":[],"documentation":{"id":11330,"nodeType":"StructuredDocumentation","src":"13689:182:14","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13885:5:14","parameters":{"id":11335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11332,"mutability":"mutable","name":"name","nameLocation":"13907:4:14","nodeType":"VariableDeclaration","scope":11339,"src":"13891:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11331,"name":"string","nodeType":"ElementaryTypeName","src":"13891:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11334,"mutability":"mutable","name":"defaultValue","nameLocation":"13920:12:14","nodeType":"VariableDeclaration","scope":11339,"src":"13913:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11333,"name":"int256","nodeType":"ElementaryTypeName","src":"13913:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13890:43:14"},"returnParameters":{"id":11338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11337,"mutability":"mutable","name":"value","nameLocation":"13964:5:14","nodeType":"VariableDeclaration","scope":11339,"src":"13957:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":11336,"name":"int256","nodeType":"ElementaryTypeName","src":"13957:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13956:14:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11349,"nodeType":"FunctionDefinition","src":"14165:97:14","nodes":[],"documentation":{"id":11340,"nodeType":"StructuredDocumentation","src":"13977:183:14","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14174:5:14","parameters":{"id":11345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11342,"mutability":"mutable","name":"name","nameLocation":"14196:4:14","nodeType":"VariableDeclaration","scope":11349,"src":"14180:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11341,"name":"string","nodeType":"ElementaryTypeName","src":"14180:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11344,"mutability":"mutable","name":"defaultValue","nameLocation":"14210:12:14","nodeType":"VariableDeclaration","scope":11349,"src":"14202:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11343,"name":"address","nodeType":"ElementaryTypeName","src":"14202:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14179:44:14"},"returnParameters":{"id":11348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11347,"mutability":"mutable","name":"value","nameLocation":"14255:5:14","nodeType":"VariableDeclaration","scope":11349,"src":"14247:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11346,"name":"address","nodeType":"ElementaryTypeName","src":"14247:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14246:15:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11359,"nodeType":"FunctionDefinition","src":"14456:97:14","nodes":[],"documentation":{"id":11350,"nodeType":"StructuredDocumentation","src":"14268:183:14","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14465:5:14","parameters":{"id":11355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11352,"mutability":"mutable","name":"name","nameLocation":"14487:4:14","nodeType":"VariableDeclaration","scope":11359,"src":"14471:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11351,"name":"string","nodeType":"ElementaryTypeName","src":"14471:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11354,"mutability":"mutable","name":"defaultValue","nameLocation":"14501:12:14","nodeType":"VariableDeclaration","scope":11359,"src":"14493:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14493:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14470:44:14"},"returnParameters":{"id":11358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11357,"mutability":"mutable","name":"value","nameLocation":"14546:5:14","nodeType":"VariableDeclaration","scope":11359,"src":"14538:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14538:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14537:15:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11369,"nodeType":"FunctionDefinition","src":"14746:111:14","nodes":[],"documentation":{"id":11360,"nodeType":"StructuredDocumentation","src":"14559:182:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14755:5:14","parameters":{"id":11365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11362,"mutability":"mutable","name":"name","nameLocation":"14777:4:14","nodeType":"VariableDeclaration","scope":11369,"src":"14761:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11361,"name":"string","nodeType":"ElementaryTypeName","src":"14761:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11364,"mutability":"mutable","name":"defaultValue","nameLocation":"14799:12:14","nodeType":"VariableDeclaration","scope":11369,"src":"14783:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11363,"name":"string","nodeType":"ElementaryTypeName","src":"14783:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14760:52:14"},"returnParameters":{"id":11368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11367,"mutability":"mutable","name":"value","nameLocation":"14850:5:14","nodeType":"VariableDeclaration","scope":11369,"src":"14836:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11366,"name":"string","nodeType":"ElementaryTypeName","src":"14836:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14835:21:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11379,"nodeType":"FunctionDefinition","src":"15049:109:14","nodes":[],"documentation":{"id":11370,"nodeType":"StructuredDocumentation","src":"14863:181:14","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15058:5:14","parameters":{"id":11375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11372,"mutability":"mutable","name":"name","nameLocation":"15080:4:14","nodeType":"VariableDeclaration","scope":11379,"src":"15064:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11371,"name":"string","nodeType":"ElementaryTypeName","src":"15064:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11374,"mutability":"mutable","name":"defaultValue","nameLocation":"15101:12:14","nodeType":"VariableDeclaration","scope":11379,"src":"15086:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":11373,"name":"bytes","nodeType":"ElementaryTypeName","src":"15086:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15063:51:14"},"returnParameters":{"id":11378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11377,"mutability":"mutable","name":"value","nameLocation":"15151:5:14","nodeType":"VariableDeclaration","scope":11379,"src":"15138:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11376,"name":"bytes","nodeType":"ElementaryTypeName","src":"15138:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15137:20:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11393,"nodeType":"FunctionDefinition","src":"15383:158:14","nodes":[],"documentation":{"id":11380,"nodeType":"StructuredDocumentation","src":"15164:214:14","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15392:5:14","parameters":{"id":11388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11382,"mutability":"mutable","name":"name","nameLocation":"15414:4:14","nodeType":"VariableDeclaration","scope":11393,"src":"15398:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11381,"name":"string","nodeType":"ElementaryTypeName","src":"15398:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11384,"mutability":"mutable","name":"delim","nameLocation":"15436:5:14","nodeType":"VariableDeclaration","scope":11393,"src":"15420:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11383,"name":"string","nodeType":"ElementaryTypeName","src":"15420:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11387,"mutability":"mutable","name":"defaultValue","nameLocation":"15459:12:14","nodeType":"VariableDeclaration","scope":11393,"src":"15443:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":11385,"name":"bool","nodeType":"ElementaryTypeName","src":"15443:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11386,"nodeType":"ArrayTypeName","src":"15443:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15397:75:14"},"returnParameters":{"id":11392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11391,"mutability":"mutable","name":"value","nameLocation":"15534:5:14","nodeType":"VariableDeclaration","scope":11393,"src":"15520:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":11389,"name":"bool","nodeType":"ElementaryTypeName","src":"15520:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11390,"nodeType":"ArrayTypeName","src":"15520:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15519:21:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11407,"nodeType":"FunctionDefinition","src":"15769:164:14","nodes":[],"documentation":{"id":11394,"nodeType":"StructuredDocumentation","src":"15547:217:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15778:5:14","parameters":{"id":11402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11396,"mutability":"mutable","name":"name","nameLocation":"15800:4:14","nodeType":"VariableDeclaration","scope":11407,"src":"15784:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11395,"name":"string","nodeType":"ElementaryTypeName","src":"15784:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11398,"mutability":"mutable","name":"delim","nameLocation":"15822:5:14","nodeType":"VariableDeclaration","scope":11407,"src":"15806:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11397,"name":"string","nodeType":"ElementaryTypeName","src":"15806:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11401,"mutability":"mutable","name":"defaultValue","nameLocation":"15848:12:14","nodeType":"VariableDeclaration","scope":11407,"src":"15829:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":11399,"name":"uint256","nodeType":"ElementaryTypeName","src":"15829:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11400,"nodeType":"ArrayTypeName","src":"15829:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15783:78:14"},"returnParameters":{"id":11406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11405,"mutability":"mutable","name":"value","nameLocation":"15926:5:14","nodeType":"VariableDeclaration","scope":11407,"src":"15909:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":11403,"name":"uint256","nodeType":"ElementaryTypeName","src":"15909:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11404,"nodeType":"ArrayTypeName","src":"15909:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15908:24:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11421,"nodeType":"FunctionDefinition","src":"16160:162:14","nodes":[],"documentation":{"id":11408,"nodeType":"StructuredDocumentation","src":"15939:216:14","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"16169:5:14","parameters":{"id":11416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11410,"mutability":"mutable","name":"name","nameLocation":"16191:4:14","nodeType":"VariableDeclaration","scope":11421,"src":"16175:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11409,"name":"string","nodeType":"ElementaryTypeName","src":"16175:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11412,"mutability":"mutable","name":"delim","nameLocation":"16213:5:14","nodeType":"VariableDeclaration","scope":11421,"src":"16197:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11411,"name":"string","nodeType":"ElementaryTypeName","src":"16197:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11415,"mutability":"mutable","name":"defaultValue","nameLocation":"16238:12:14","nodeType":"VariableDeclaration","scope":11421,"src":"16220:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":11413,"name":"int256","nodeType":"ElementaryTypeName","src":"16220:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11414,"nodeType":"ArrayTypeName","src":"16220:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16174:77:14"},"returnParameters":{"id":11420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11419,"mutability":"mutable","name":"value","nameLocation":"16315:5:14","nodeType":"VariableDeclaration","scope":11421,"src":"16299:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":11417,"name":"int256","nodeType":"ElementaryTypeName","src":"16299:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":11418,"nodeType":"ArrayTypeName","src":"16299:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16298:23:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11429,"nodeType":"FunctionDefinition","src":"16470:85:14","nodes":[],"documentation":{"id":11422,"nodeType":"StructuredDocumentation","src":"16328:137:14","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16479:9:14","parameters":{"id":11425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11424,"mutability":"mutable","name":"name","nameLocation":"16505:4:14","nodeType":"VariableDeclaration","scope":11429,"src":"16489:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11423,"name":"string","nodeType":"ElementaryTypeName","src":"16489:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16488:22:14"},"returnParameters":{"id":11428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11427,"mutability":"mutable","name":"value","nameLocation":"16548:5:14","nodeType":"VariableDeclaration","scope":11429,"src":"16534:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11426,"name":"string","nodeType":"ElementaryTypeName","src":"16534:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16533:21:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11440,"nodeType":"FunctionDefinition","src":"16737:110:14","nodes":[],"documentation":{"id":11430,"nodeType":"StructuredDocumentation","src":"16561:171:14","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16746:9:14","parameters":{"id":11435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11432,"mutability":"mutable","name":"name","nameLocation":"16772:4:14","nodeType":"VariableDeclaration","scope":11440,"src":"16756:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11431,"name":"string","nodeType":"ElementaryTypeName","src":"16756:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11434,"mutability":"mutable","name":"delim","nameLocation":"16794:5:14","nodeType":"VariableDeclaration","scope":11440,"src":"16778:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11433,"name":"string","nodeType":"ElementaryTypeName","src":"16778:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16755:45:14"},"returnParameters":{"id":11439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11438,"mutability":"mutable","name":"value","nameLocation":"16840:5:14","nodeType":"VariableDeclaration","scope":11440,"src":"16824:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11436,"name":"string","nodeType":"ElementaryTypeName","src":"16824:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11437,"nodeType":"ArrayTypeName","src":"16824:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"16823:23:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11448,"nodeType":"FunctionDefinition","src":"16996:77:14","nodes":[],"documentation":{"id":11441,"nodeType":"StructuredDocumentation","src":"16853:138:14","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17005:7:14","parameters":{"id":11444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11443,"mutability":"mutable","name":"name","nameLocation":"17029:4:14","nodeType":"VariableDeclaration","scope":11448,"src":"17013:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11442,"name":"string","nodeType":"ElementaryTypeName","src":"17013:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17012:22:14"},"returnParameters":{"id":11447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11446,"mutability":"mutable","name":"value","nameLocation":"17066:5:14","nodeType":"VariableDeclaration","scope":11448,"src":"17058:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11445,"name":"uint256","nodeType":"ElementaryTypeName","src":"17058:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17057:15:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11459,"nodeType":"FunctionDefinition","src":"17256:109:14","nodes":[],"documentation":{"id":11449,"nodeType":"StructuredDocumentation","src":"17079:172:14","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17265:7:14","parameters":{"id":11454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11451,"mutability":"mutable","name":"name","nameLocation":"17289:4:14","nodeType":"VariableDeclaration","scope":11459,"src":"17273:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11450,"name":"string","nodeType":"ElementaryTypeName","src":"17273:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11453,"mutability":"mutable","name":"delim","nameLocation":"17311:5:14","nodeType":"VariableDeclaration","scope":11459,"src":"17295:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11452,"name":"string","nodeType":"ElementaryTypeName","src":"17295:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17272:45:14"},"returnParameters":{"id":11458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11457,"mutability":"mutable","name":"value","nameLocation":"17358:5:14","nodeType":"VariableDeclaration","scope":11459,"src":"17341:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":11455,"name":"uint256","nodeType":"ElementaryTypeName","src":"17341:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11456,"nodeType":"ArrayTypeName","src":"17341:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17340:24:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11468,"nodeType":"FunctionDefinition","src":"17442:77:14","nodes":[],"documentation":{"id":11460,"nodeType":"StructuredDocumentation","src":"17371:66:14","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"17451:9:14","parameters":{"id":11464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11463,"mutability":"mutable","name":"context","nameLocation":"17474:7:14","nodeType":"VariableDeclaration","scope":11468,"src":"17461:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$11004","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":11462,"nodeType":"UserDefinedTypeName","pathNode":{"id":11461,"name":"ForgeContext","nameLocations":["17461:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":11004,"src":"17461:12:14"},"referencedDeclaration":11004,"src":"17461:12:14","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$11004","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"17460:22:14"},"returnParameters":{"id":11467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11466,"mutability":"mutable","name":"result","nameLocation":"17511:6:14","nodeType":"VariableDeclaration","scope":11468,"src":"17506:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11465,"name":"bool","nodeType":"ElementaryTypeName","src":"17506:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17505:13:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11476,"nodeType":"FunctionDefinition","src":"17561:70:14","nodes":[],"documentation":{"id":11469,"nodeType":"StructuredDocumentation","src":"17525:31:14","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"17570:6:14","parameters":{"id":11474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11471,"mutability":"mutable","name":"name","nameLocation":"17593:4:14","nodeType":"VariableDeclaration","scope":11476,"src":"17577:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11470,"name":"string","nodeType":"ElementaryTypeName","src":"17577:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11473,"mutability":"mutable","name":"value","nameLocation":"17615:5:14","nodeType":"VariableDeclaration","scope":11476,"src":"17599:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11472,"name":"string","nodeType":"ElementaryTypeName","src":"17599:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17576:45:14"},"returnParameters":{"id":11475,"nodeType":"ParameterList","parameters":[],"src":"17630:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11488,"nodeType":"FunctionDefinition","src":"17763:109:14","nodes":[],"documentation":{"id":11477,"nodeType":"StructuredDocumentation","src":"17667:91:14","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"17772:8:14","parameters":{"id":11480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11479,"mutability":"mutable","name":"target","nameLocation":"17789:6:14","nodeType":"VariableDeclaration","scope":11488,"src":"17781:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11478,"name":"address","nodeType":"ElementaryTypeName","src":"17781:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17780:16:14"},"returnParameters":{"id":11487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11483,"mutability":"mutable","name":"readSlots","nameLocation":"17832:9:14","nodeType":"VariableDeclaration","scope":11488,"src":"17815:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17815:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11482,"nodeType":"ArrayTypeName","src":"17815:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":11486,"mutability":"mutable","name":"writeSlots","nameLocation":"17860:10:14","nodeType":"VariableDeclaration","scope":11488,"src":"17843:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17843:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11485,"nodeType":"ArrayTypeName","src":"17843:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17814:57:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11496,"nodeType":"FunctionDefinition","src":"17928:74:14","nodes":[],"documentation":{"id":11489,"nodeType":"StructuredDocumentation","src":"17878:45:14","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"17937:4:14","parameters":{"id":11492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11491,"mutability":"mutable","name":"privateKey","nameLocation":"17950:10:14","nodeType":"VariableDeclaration","scope":11496,"src":"17942:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11490,"name":"uint256","nodeType":"ElementaryTypeName","src":"17942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17941:20:14"},"returnParameters":{"id":11495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11494,"mutability":"mutable","name":"keyAddr","nameLocation":"17993:7:14","nodeType":"VariableDeclaration","scope":11496,"src":"17985:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11493,"name":"address","nodeType":"ElementaryTypeName","src":"17985:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17984:17:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11513,"nodeType":"FunctionDefinition","src":"18065:160:14","nodes":[],"documentation":{"id":11497,"nodeType":"StructuredDocumentation","src":"18008:52:14","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"18074:11:14","parameters":{"id":11507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11499,"mutability":"mutable","name":"fromBlock","nameLocation":"18094:9:14","nodeType":"VariableDeclaration","scope":11513,"src":"18086:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11498,"name":"uint256","nodeType":"ElementaryTypeName","src":"18086:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11501,"mutability":"mutable","name":"toBlock","nameLocation":"18113:7:14","nodeType":"VariableDeclaration","scope":11513,"src":"18105:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11500,"name":"uint256","nodeType":"ElementaryTypeName","src":"18105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11503,"mutability":"mutable","name":"target","nameLocation":"18130:6:14","nodeType":"VariableDeclaration","scope":11513,"src":"18122:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11502,"name":"address","nodeType":"ElementaryTypeName","src":"18122:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11506,"mutability":"mutable","name":"topics","nameLocation":"18157:6:14","nodeType":"VariableDeclaration","scope":11513,"src":"18138:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":11504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18138:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":11505,"nodeType":"ArrayTypeName","src":"18138:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18085:79:14"},"returnParameters":{"id":11512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11511,"mutability":"mutable","name":"logs","nameLocation":"18219:4:14","nodeType":"VariableDeclaration","scope":11513,"src":"18199:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$11040_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":11509,"nodeType":"UserDefinedTypeName","pathNode":{"id":11508,"name":"EthGetLogs","nameLocations":["18199:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":11040,"src":"18199:10:14"},"referencedDeclaration":11040,"src":"18199:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$11040_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":11510,"nodeType":"ArrayTypeName","src":"18199:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$11040_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"18198:26:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11519,"nodeType":"FunctionDefinition","src":"18562:70:14","nodes":[],"documentation":{"id":11514,"nodeType":"StructuredDocumentation","src":"18231:326:14","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"18571:14:14","parameters":{"id":11515,"nodeType":"ParameterList","parameters":[],"src":"18585:2:14"},"returnParameters":{"id":11518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11517,"mutability":"mutable","name":"blobBaseFee","nameLocation":"18619:11:14","nodeType":"VariableDeclaration","scope":11519,"src":"18611:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11516,"name":"uint256","nodeType":"ElementaryTypeName","src":"18611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18610:21:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11525,"nodeType":"FunctionDefinition","src":"18947:65:14","nodes":[],"documentation":{"id":11520,"nodeType":"StructuredDocumentation","src":"18638:304:14","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"18956:14:14","parameters":{"id":11521,"nodeType":"ParameterList","parameters":[],"src":"18970:2:14"},"returnParameters":{"id":11524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11523,"mutability":"mutable","name":"height","nameLocation":"19004:6:14","nodeType":"VariableDeclaration","scope":11525,"src":"18996:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11522,"name":"uint256","nodeType":"ElementaryTypeName","src":"18996:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18995:16:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11531,"nodeType":"FunctionDefinition","src":"19336:71:14","nodes":[],"documentation":{"id":11526,"nodeType":"StructuredDocumentation","src":"19018:313:14","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"19345:17:14","parameters":{"id":11527,"nodeType":"ParameterList","parameters":[],"src":"19362:2:14"},"returnParameters":{"id":11530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11529,"mutability":"mutable","name":"timestamp","nameLocation":"19396:9:14","nodeType":"VariableDeclaration","scope":11531,"src":"19388:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11528,"name":"uint256","nodeType":"ElementaryTypeName","src":"19388:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19387:19:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11545,"nodeType":"FunctionDefinition","src":"19500:146:14","nodes":[],"documentation":{"id":11532,"nodeType":"StructuredDocumentation","src":"19413:82:14","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"19509:24:14","parameters":{"id":11537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11534,"mutability":"mutable","name":"target","nameLocation":"19542:6:14","nodeType":"VariableDeclaration","scope":11545,"src":"19534:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11533,"name":"address","nodeType":"ElementaryTypeName","src":"19534:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11536,"mutability":"mutable","name":"elementSlot","nameLocation":"19558:11:14","nodeType":"VariableDeclaration","scope":11545,"src":"19550:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19550:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19533:37:14"},"returnParameters":{"id":11544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11539,"mutability":"mutable","name":"found","nameLocation":"19610:5:14","nodeType":"VariableDeclaration","scope":11545,"src":"19605:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11538,"name":"bool","nodeType":"ElementaryTypeName","src":"19605:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11541,"mutability":"mutable","name":"key","nameLocation":"19625:3:14","nodeType":"VariableDeclaration","scope":11545,"src":"19617:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19617:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11543,"mutability":"mutable","name":"parent","nameLocation":"19638:6:14","nodeType":"VariableDeclaration","scope":11545,"src":"19630:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19630:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19604:41:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11555,"nodeType":"FunctionDefinition","src":"19743:97:14","nodes":[],"documentation":{"id":11546,"nodeType":"StructuredDocumentation","src":"19652:86:14","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"19752:16:14","parameters":{"id":11551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11548,"mutability":"mutable","name":"target","nameLocation":"19777:6:14","nodeType":"VariableDeclaration","scope":11555,"src":"19769:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11547,"name":"address","nodeType":"ElementaryTypeName","src":"19769:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11550,"mutability":"mutable","name":"mappingSlot","nameLocation":"19793:11:14","nodeType":"VariableDeclaration","scope":11555,"src":"19785:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19785:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19768:37:14"},"returnParameters":{"id":11554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11553,"mutability":"mutable","name":"length","nameLocation":"19832:6:14","nodeType":"VariableDeclaration","scope":11555,"src":"19824:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11552,"name":"uint256","nodeType":"ElementaryTypeName","src":"19824:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19823:16:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11567,"nodeType":"FunctionDefinition","src":"20044:109:14","nodes":[],"documentation":{"id":11556,"nodeType":"StructuredDocumentation","src":"19846:193:14","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"20053:16:14","parameters":{"id":11563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11558,"mutability":"mutable","name":"target","nameLocation":"20078:6:14","nodeType":"VariableDeclaration","scope":11567,"src":"20070:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11557,"name":"address","nodeType":"ElementaryTypeName","src":"20070:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11560,"mutability":"mutable","name":"mappingSlot","nameLocation":"20094:11:14","nodeType":"VariableDeclaration","scope":11567,"src":"20086:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20086:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11562,"mutability":"mutable","name":"idx","nameLocation":"20115:3:14","nodeType":"VariableDeclaration","scope":11567,"src":"20107:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11561,"name":"uint256","nodeType":"ElementaryTypeName","src":"20107:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20069:50:14"},"returnParameters":{"id":11566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11565,"mutability":"mutable","name":"value","nameLocation":"20146:5:14","nodeType":"VariableDeclaration","scope":11567,"src":"20138:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20138:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20137:15:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11575,"nodeType":"FunctionDefinition","src":"20197:72:14","nodes":[],"documentation":{"id":11568,"nodeType":"StructuredDocumentation","src":"20159:33:14","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"20206:8:14","parameters":{"id":11571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11570,"mutability":"mutable","name":"account","nameLocation":"20223:7:14","nodeType":"VariableDeclaration","scope":11575,"src":"20215:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11569,"name":"address","nodeType":"ElementaryTypeName","src":"20215:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20214:17:14"},"returnParameters":{"id":11574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11573,"mutability":"mutable","name":"nonce","nameLocation":"20262:5:14","nodeType":"VariableDeclaration","scope":11575,"src":"20255:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11572,"name":"uint64","nodeType":"ElementaryTypeName","src":"20255:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20254:14:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11583,"nodeType":"FunctionDefinition","src":"20311:64:14","nodes":[],"documentation":{"id":11576,"nodeType":"StructuredDocumentation","src":"20275:31:14","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"20320:15:14","parameters":{"id":11577,"nodeType":"ParameterList","parameters":[],"src":"20335:2:14"},"returnParameters":{"id":11582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11581,"mutability":"mutable","name":"logs","nameLocation":"20369:4:14","nodeType":"VariableDeclaration","scope":11583,"src":"20356:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$11013_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":11579,"nodeType":"UserDefinedTypeName","pathNode":{"id":11578,"name":"Log","nameLocations":["20356:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":11013,"src":"20356:3:14"},"referencedDeclaration":11013,"src":"20356:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$11013_storage_ptr","typeString":"struct VmSafe.Log"}},"id":11580,"nodeType":"ArrayTypeName","src":"20356:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$11013_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"20355:19:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11590,"nodeType":"FunctionDefinition","src":"20425:62:14","nodes":[],"documentation":{"id":11584,"nodeType":"StructuredDocumentation","src":"20381:39:14","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"20434:11:14","parameters":{"id":11585,"nodeType":"ParameterList","parameters":[],"src":"20445:2:14"},"returnParameters":{"id":11589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11588,"mutability":"mutable","name":"gas","nameLocation":"20482:3:14","nodeType":"VariableDeclaration","scope":11590,"src":"20471:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$11150_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":11587,"nodeType":"UserDefinedTypeName","pathNode":{"id":11586,"name":"Gas","nameLocations":["20471:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":11150,"src":"20471:3:14"},"referencedDeclaration":11150,"src":"20471:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$11150_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"20470:16:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11600,"nodeType":"FunctionDefinition","src":"20539:81:14","nodes":[],"documentation":{"id":11591,"nodeType":"StructuredDocumentation","src":"20493:41:14","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"20548:4:14","parameters":{"id":11596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11593,"mutability":"mutable","name":"target","nameLocation":"20561:6:14","nodeType":"VariableDeclaration","scope":11600,"src":"20553:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11592,"name":"address","nodeType":"ElementaryTypeName","src":"20553:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11595,"mutability":"mutable","name":"slot","nameLocation":"20577:4:14","nodeType":"VariableDeclaration","scope":11600,"src":"20569:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20569:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20552:30:14"},"returnParameters":{"id":11599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11598,"mutability":"mutable","name":"data","nameLocation":"20614:4:14","nodeType":"VariableDeclaration","scope":11600,"src":"20606:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20606:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20605:14:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11604,"nodeType":"FunctionDefinition","src":"20711:37:14","nodes":[],"documentation":{"id":11601,"nodeType":"StructuredDocumentation","src":"20626:80:14","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"20720:16:14","parameters":{"id":11602,"nodeType":"ParameterList","parameters":[],"src":"20736:2:14"},"returnParameters":{"id":11603,"nodeType":"ParameterList","parameters":[],"src":"20747:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11608,"nodeType":"FunctionDefinition","src":"20800:27:14","nodes":[],"documentation":{"id":11605,"nodeType":"StructuredDocumentation","src":"20754:41:14","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"20809:6:14","parameters":{"id":11606,"nodeType":"ParameterList","parameters":[],"src":"20815:2:14"},"returnParameters":{"id":11607,"nodeType":"ParameterList","parameters":[],"src":"20826:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11612,"nodeType":"FunctionDefinition","src":"20874:31:14","nodes":[],"documentation":{"id":11609,"nodeType":"StructuredDocumentation","src":"20833:36:14","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"20883:10:14","parameters":{"id":11610,"nodeType":"ParameterList","parameters":[],"src":"20893:2:14"},"returnParameters":{"id":11611,"nodeType":"ParameterList","parameters":[],"src":"20904:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11616,"nodeType":"FunctionDefinition","src":"20995:38:14","nodes":[],"documentation":{"id":11613,"nodeType":"StructuredDocumentation","src":"20911:79:14","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"21004:17:14","parameters":{"id":11614,"nodeType":"ParameterList","parameters":[],"src":"21021:2:14"},"returnParameters":{"id":11615,"nodeType":"ParameterList","parameters":[],"src":"21032:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11626,"nodeType":"FunctionDefinition","src":"21110:98:14","nodes":[],"documentation":{"id":11617,"nodeType":"StructuredDocumentation","src":"21039:66:14","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21119:3:14","parameters":{"id":11622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11619,"mutability":"mutable","name":"method","nameLocation":"21139:6:14","nodeType":"VariableDeclaration","scope":11626,"src":"21123:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11618,"name":"string","nodeType":"ElementaryTypeName","src":"21123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11621,"mutability":"mutable","name":"params","nameLocation":"21163:6:14","nodeType":"VariableDeclaration","scope":11626,"src":"21147:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11620,"name":"string","nodeType":"ElementaryTypeName","src":"21147:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21122:48:14"},"returnParameters":{"id":11625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11624,"mutability":"mutable","name":"data","nameLocation":"21202:4:14","nodeType":"VariableDeclaration","scope":11626,"src":"21189:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11623,"name":"bytes","nodeType":"ElementaryTypeName","src":"21189:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21188:19:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11638,"nodeType":"FunctionDefinition","src":"21283:142:14","nodes":[],"documentation":{"id":11627,"nodeType":"StructuredDocumentation","src":"21214:64:14","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21292:3:14","parameters":{"id":11634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11629,"mutability":"mutable","name":"urlOrAlias","nameLocation":"21312:10:14","nodeType":"VariableDeclaration","scope":11638,"src":"21296:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11628,"name":"string","nodeType":"ElementaryTypeName","src":"21296:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11631,"mutability":"mutable","name":"method","nameLocation":"21340:6:14","nodeType":"VariableDeclaration","scope":11638,"src":"21324:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11630,"name":"string","nodeType":"ElementaryTypeName","src":"21324:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11633,"mutability":"mutable","name":"params","nameLocation":"21364:6:14","nodeType":"VariableDeclaration","scope":11638,"src":"21348:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11632,"name":"string","nodeType":"ElementaryTypeName","src":"21348:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21295:76:14"},"returnParameters":{"id":11637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11636,"mutability":"mutable","name":"data","nameLocation":"21419:4:14","nodeType":"VariableDeclaration","scope":11638,"src":"21406:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11635,"name":"bytes","nodeType":"ElementaryTypeName","src":"21406:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21405:19:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11650,"nodeType":"FunctionDefinition","src":"21499:99:14","nodes":[],"documentation":{"id":11639,"nodeType":"StructuredDocumentation","src":"21431:63:14","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"21508:8:14","parameters":{"id":11644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11641,"mutability":"mutable","name":"privateKey","nameLocation":"21525:10:14","nodeType":"VariableDeclaration","scope":11650,"src":"21517:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11640,"name":"uint256","nodeType":"ElementaryTypeName","src":"21517:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11643,"mutability":"mutable","name":"digest","nameLocation":"21545:6:14","nodeType":"VariableDeclaration","scope":11650,"src":"21537:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21537:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21516:36:14"},"returnParameters":{"id":11649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11646,"mutability":"mutable","name":"r","nameLocation":"21584:1:14","nodeType":"VariableDeclaration","scope":11650,"src":"21576:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21576:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11648,"mutability":"mutable","name":"s","nameLocation":"21595:1:14","nodeType":"VariableDeclaration","scope":11650,"src":"21587:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21587:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21575:22:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11664,"nodeType":"FunctionDefinition","src":"21672:104:14","nodes":[],"documentation":{"id":11651,"nodeType":"StructuredDocumentation","src":"21604:63:14","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21681:4:14","parameters":{"id":11656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11653,"mutability":"mutable","name":"privateKey","nameLocation":"21694:10:14","nodeType":"VariableDeclaration","scope":11664,"src":"21686:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11652,"name":"uint256","nodeType":"ElementaryTypeName","src":"21686:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11655,"mutability":"mutable","name":"digest","nameLocation":"21714:6:14","nodeType":"VariableDeclaration","scope":11664,"src":"21706:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21706:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21685:36:14"},"returnParameters":{"id":11663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11658,"mutability":"mutable","name":"v","nameLocation":"21751:1:14","nodeType":"VariableDeclaration","scope":11664,"src":"21745:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11657,"name":"uint8","nodeType":"ElementaryTypeName","src":"21745:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":11660,"mutability":"mutable","name":"r","nameLocation":"21762:1:14","nodeType":"VariableDeclaration","scope":11664,"src":"21754:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21754:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11662,"mutability":"mutable","name":"s","nameLocation":"21773:1:14","nodeType":"VariableDeclaration","scope":11664,"src":"21765:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21765:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21744:31:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11676,"nodeType":"FunctionDefinition","src":"22215:84:14","nodes":[],"documentation":{"id":11665,"nodeType":"StructuredDocumentation","src":"21782:428:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22224:4:14","parameters":{"id":11668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11667,"mutability":"mutable","name":"digest","nameLocation":"22237:6:14","nodeType":"VariableDeclaration","scope":11676,"src":"22229:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22229:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22228:16:14"},"returnParameters":{"id":11675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11670,"mutability":"mutable","name":"v","nameLocation":"22274:1:14","nodeType":"VariableDeclaration","scope":11676,"src":"22268:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11669,"name":"uint8","nodeType":"ElementaryTypeName","src":"22268:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":11672,"mutability":"mutable","name":"r","nameLocation":"22285:1:14","nodeType":"VariableDeclaration","scope":11676,"src":"22277:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22277:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11674,"mutability":"mutable","name":"s","nameLocation":"22296:1:14","nodeType":"VariableDeclaration","scope":11676,"src":"22288:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11673,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22288:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22267:31:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11690,"nodeType":"FunctionDefinition","src":"22476:100:14","nodes":[],"documentation":{"id":11677,"nodeType":"StructuredDocumentation","src":"22305:166:14","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22485:4:14","parameters":{"id":11682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11679,"mutability":"mutable","name":"signer","nameLocation":"22498:6:14","nodeType":"VariableDeclaration","scope":11690,"src":"22490:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11678,"name":"address","nodeType":"ElementaryTypeName","src":"22490:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11681,"mutability":"mutable","name":"digest","nameLocation":"22514:6:14","nodeType":"VariableDeclaration","scope":11690,"src":"22506:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22506:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22489:32:14"},"returnParameters":{"id":11689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11684,"mutability":"mutable","name":"v","nameLocation":"22551:1:14","nodeType":"VariableDeclaration","scope":11690,"src":"22545:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11683,"name":"uint8","nodeType":"ElementaryTypeName","src":"22545:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":11686,"mutability":"mutable","name":"r","nameLocation":"22562:1:14","nodeType":"VariableDeclaration","scope":11690,"src":"22554:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22554:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":11688,"mutability":"mutable","name":"s","nameLocation":"22573:1:14","nodeType":"VariableDeclaration","scope":11690,"src":"22565:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":11687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22565:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22544:31:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":11694,"nodeType":"FunctionDefinition","src":"22644:42:14","nodes":[],"documentation":{"id":11691,"nodeType":"StructuredDocumentation","src":"22582:57:14","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"22653:21:14","parameters":{"id":11692,"nodeType":"ParameterList","parameters":[],"src":"22674:2:14"},"returnParameters":{"id":11693,"nodeType":"ParameterList","parameters":[],"src":"22685:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11698,"nodeType":"FunctionDefinition","src":"22830:44:14","nodes":[],"documentation":{"id":11695,"nodeType":"StructuredDocumentation","src":"22692:133:14","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"22839:23:14","parameters":{"id":11696,"nodeType":"ParameterList","parameters":[],"src":"22862:2:14"},"returnParameters":{"id":11697,"nodeType":"ParameterList","parameters":[],"src":"22873:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11706,"nodeType":"FunctionDefinition","src":"22982:92:14","nodes":[],"documentation":{"id":11699,"nodeType":"StructuredDocumentation","src":"22880:97:14","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"22991:22:14","parameters":{"id":11700,"nodeType":"ParameterList","parameters":[],"src":"23013:2:14"},"returnParameters":{"id":11705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11704,"mutability":"mutable","name":"accountAccesses","nameLocation":"23057:15:14","nodeType":"VariableDeclaration","scope":11706,"src":"23034:38:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$11124_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":11702,"nodeType":"UserDefinedTypeName","pathNode":{"id":11701,"name":"AccountAccess","nameLocations":["23034:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":11124,"src":"23034:13:14"},"referencedDeclaration":11124,"src":"23034:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$11124_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":11703,"nodeType":"ArrayTypeName","src":"23034:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$11124_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"23033:40:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11710,"nodeType":"FunctionDefinition","src":"23170:41:14","nodes":[],"documentation":{"id":11707,"nodeType":"StructuredDocumentation","src":"23080:85:14","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"23179:20:14","parameters":{"id":11708,"nodeType":"ParameterList","parameters":[],"src":"23199:2:14"},"returnParameters":{"id":11709,"nodeType":"ParameterList","parameters":[],"src":"23210:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11716,"nodeType":"FunctionDefinition","src":"23410:50:14","nodes":[],"documentation":{"id":11711,"nodeType":"StructuredDocumentation","src":"23254:151:14","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"23419:9:14","parameters":{"id":11714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11713,"mutability":"mutable","name":"path","nameLocation":"23445:4:14","nodeType":"VariableDeclaration","scope":11716,"src":"23429:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11712,"name":"string","nodeType":"ElementaryTypeName","src":"23429:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23428:22:14"},"returnParameters":{"id":11715,"nodeType":"ParameterList","parameters":[],"src":"23459:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11726,"nodeType":"FunctionDefinition","src":"23775:93:14","nodes":[],"documentation":{"id":11717,"nodeType":"StructuredDocumentation","src":"23466:304:14","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"23784:8:14","parameters":{"id":11722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11719,"mutability":"mutable","name":"from","nameLocation":"23809:4:14","nodeType":"VariableDeclaration","scope":11726,"src":"23793:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11718,"name":"string","nodeType":"ElementaryTypeName","src":"23793:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11721,"mutability":"mutable","name":"to","nameLocation":"23831:2:14","nodeType":"VariableDeclaration","scope":11726,"src":"23815:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11720,"name":"string","nodeType":"ElementaryTypeName","src":"23815:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23792:42:14"},"returnParameters":{"id":11725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11724,"mutability":"mutable","name":"copied","nameLocation":"23860:6:14","nodeType":"VariableDeclaration","scope":11726,"src":"23853:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11723,"name":"uint64","nodeType":"ElementaryTypeName","src":"23853:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23852:15:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11734,"nodeType":"FunctionDefinition","src":"24273:66:14","nodes":[],"documentation":{"id":11727,"nodeType":"StructuredDocumentation","src":"23874:394:14","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"24282:9:14","parameters":{"id":11732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11729,"mutability":"mutable","name":"path","nameLocation":"24308:4:14","nodeType":"VariableDeclaration","scope":11734,"src":"24292:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11728,"name":"string","nodeType":"ElementaryTypeName","src":"24292:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11731,"mutability":"mutable","name":"recursive","nameLocation":"24319:9:14","nodeType":"VariableDeclaration","scope":11734,"src":"24314:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11730,"name":"bool","nodeType":"ElementaryTypeName","src":"24314:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24291:38:14"},"returnParameters":{"id":11733,"nodeType":"ParameterList","parameters":[],"src":"24338:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11742,"nodeType":"FunctionDefinition","src":"24569:93:14","nodes":[],"documentation":{"id":11735,"nodeType":"StructuredDocumentation","src":"24345:219:14","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"24578:10:14","parameters":{"id":11738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11737,"mutability":"mutable","name":"artifactPath","nameLocation":"24605:12:14","nodeType":"VariableDeclaration","scope":11742,"src":"24589:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11736,"name":"string","nodeType":"ElementaryTypeName","src":"24589:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24588:30:14"},"returnParameters":{"id":11741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11740,"mutability":"mutable","name":"deployedAddress","nameLocation":"24645:15:14","nodeType":"VariableDeclaration","scope":11742,"src":"24637:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11739,"name":"address","nodeType":"ElementaryTypeName","src":"24637:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24636:25:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11752,"nodeType":"FunctionDefinition","src":"24955:141:14","nodes":[],"documentation":{"id":11743,"nodeType":"StructuredDocumentation","src":"24668:282:14","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionaly accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"24964:10:14","parameters":{"id":11748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11745,"mutability":"mutable","name":"artifactPath","nameLocation":"24991:12:14","nodeType":"VariableDeclaration","scope":11752,"src":"24975:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11744,"name":"string","nodeType":"ElementaryTypeName","src":"24975:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11747,"mutability":"mutable","name":"constructorArgs","nameLocation":"25020:15:14","nodeType":"VariableDeclaration","scope":11752,"src":"25005:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":11746,"name":"bytes","nodeType":"ElementaryTypeName","src":"25005:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24974:62:14"},"returnParameters":{"id":11751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11750,"mutability":"mutable","name":"deployedAddress","nameLocation":"25079:15:14","nodeType":"VariableDeclaration","scope":11752,"src":"25071:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11749,"name":"address","nodeType":"ElementaryTypeName","src":"25071:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25070:25:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11760,"nodeType":"FunctionDefinition","src":"25191:69:14","nodes":[],"documentation":{"id":11753,"nodeType":"StructuredDocumentation","src":"25102:84:14","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"25200:6:14","parameters":{"id":11756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11755,"mutability":"mutable","name":"path","nameLocation":"25223:4:14","nodeType":"VariableDeclaration","scope":11760,"src":"25207:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11754,"name":"string","nodeType":"ElementaryTypeName","src":"25207:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25206:22:14"},"returnParameters":{"id":11759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11758,"mutability":"mutable","name":"result","nameLocation":"25252:6:14","nodeType":"VariableDeclaration","scope":11760,"src":"25247:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11757,"name":"bool","nodeType":"ElementaryTypeName","src":"25247:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25246:13:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11769,"nodeType":"FunctionDefinition","src":"25325:84:14","nodes":[],"documentation":{"id":11761,"nodeType":"StructuredDocumentation","src":"25266:54:14","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"25334:3:14","parameters":{"id":11765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11764,"mutability":"mutable","name":"commandInput","nameLocation":"25356:12:14","nodeType":"VariableDeclaration","scope":11769,"src":"25338:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11762,"name":"string","nodeType":"ElementaryTypeName","src":"25338:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11763,"nodeType":"ArrayTypeName","src":"25338:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"25337:32:14"},"returnParameters":{"id":11768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11767,"mutability":"mutable","name":"result","nameLocation":"25401:6:14","nodeType":"VariableDeclaration","scope":11769,"src":"25388:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11766,"name":"bytes","nodeType":"ElementaryTypeName","src":"25388:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25387:21:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11778,"nodeType":"FunctionDefinition","src":"25508:93:14","nodes":[],"documentation":{"id":11770,"nodeType":"StructuredDocumentation","src":"25415:88:14","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"25517:10:14","parameters":{"id":11773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11772,"mutability":"mutable","name":"path","nameLocation":"25544:4:14","nodeType":"VariableDeclaration","scope":11778,"src":"25528:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11771,"name":"string","nodeType":"ElementaryTypeName","src":"25528:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25527:22:14"},"returnParameters":{"id":11777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11776,"mutability":"mutable","name":"metadata","nameLocation":"25591:8:14","nodeType":"VariableDeclaration","scope":11778,"src":"25573:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$11068_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":11775,"nodeType":"UserDefinedTypeName","pathNode":{"id":11774,"name":"FsMetadata","nameLocations":["25573:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":11068,"src":"25573:10:14"},"referencedDeclaration":11068,"src":"25573:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$11068_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"25572:28:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11786,"nodeType":"FunctionDefinition","src":"25839:101:14","nodes":[],"documentation":{"id":11779,"nodeType":"StructuredDocumentation","src":"25607:227:14","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"25848:7:14","parameters":{"id":11782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11781,"mutability":"mutable","name":"artifactPath","nameLocation":"25872:12:14","nodeType":"VariableDeclaration","scope":11786,"src":"25856:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11780,"name":"string","nodeType":"ElementaryTypeName","src":"25856:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25855:30:14"},"returnParameters":{"id":11785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11784,"mutability":"mutable","name":"creationBytecode","nameLocation":"25922:16:14","nodeType":"VariableDeclaration","scope":11786,"src":"25909:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11783,"name":"bytes","nodeType":"ElementaryTypeName","src":"25909:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25908:31:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11794,"nodeType":"FunctionDefinition","src":"26178:108:14","nodes":[],"documentation":{"id":11787,"nodeType":"StructuredDocumentation","src":"25946:227:14","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"26187:15:14","parameters":{"id":11790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11789,"mutability":"mutable","name":"artifactPath","nameLocation":"26219:12:14","nodeType":"VariableDeclaration","scope":11794,"src":"26203:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11788,"name":"string","nodeType":"ElementaryTypeName","src":"26203:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26202:30:14"},"returnParameters":{"id":11793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11792,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"26269:15:14","nodeType":"VariableDeclaration","scope":11794,"src":"26256:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11791,"name":"bytes","nodeType":"ElementaryTypeName","src":"26256:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26255:30:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11802,"nodeType":"FunctionDefinition","src":"26392:68:14","nodes":[],"documentation":{"id":11795,"nodeType":"StructuredDocumentation","src":"26292:95:14","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"26401:5:14","parameters":{"id":11798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11797,"mutability":"mutable","name":"path","nameLocation":"26423:4:14","nodeType":"VariableDeclaration","scope":11802,"src":"26407:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11796,"name":"string","nodeType":"ElementaryTypeName","src":"26407:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26406:22:14"},"returnParameters":{"id":11801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11800,"mutability":"mutable","name":"result","nameLocation":"26452:6:14","nodeType":"VariableDeclaration","scope":11802,"src":"26447:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11799,"name":"bool","nodeType":"ElementaryTypeName","src":"26447:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26446:13:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11810,"nodeType":"FunctionDefinition","src":"26569:69:14","nodes":[],"documentation":{"id":11803,"nodeType":"StructuredDocumentation","src":"26466:98:14","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"26578:6:14","parameters":{"id":11806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11805,"mutability":"mutable","name":"path","nameLocation":"26601:4:14","nodeType":"VariableDeclaration","scope":11810,"src":"26585:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11804,"name":"string","nodeType":"ElementaryTypeName","src":"26585:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26584:22:14"},"returnParameters":{"id":11809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11808,"mutability":"mutable","name":"result","nameLocation":"26630:6:14","nodeType":"VariableDeclaration","scope":11810,"src":"26625:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11807,"name":"bool","nodeType":"ElementaryTypeName","src":"26625:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26624:13:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11816,"nodeType":"FunctionDefinition","src":"26694:66:14","nodes":[],"documentation":{"id":11811,"nodeType":"StructuredDocumentation","src":"26644:45:14","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"26703:11:14","parameters":{"id":11812,"nodeType":"ParameterList","parameters":[],"src":"26714:2:14"},"returnParameters":{"id":11815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11814,"mutability":"mutable","name":"path","nameLocation":"26754:4:14","nodeType":"VariableDeclaration","scope":11816,"src":"26740:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11813,"name":"string","nodeType":"ElementaryTypeName","src":"26740:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26739:20:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11824,"nodeType":"FunctionDefinition","src":"26827:83:14","nodes":[],"documentation":{"id":11817,"nodeType":"StructuredDocumentation","src":"26766:56:14","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"26836:6:14","parameters":{"id":11820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11819,"mutability":"mutable","name":"promptText","nameLocation":"26859:10:14","nodeType":"VariableDeclaration","scope":11824,"src":"26843:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11818,"name":"string","nodeType":"ElementaryTypeName","src":"26843:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26842:28:14"},"returnParameters":{"id":11823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11822,"mutability":"mutable","name":"input","nameLocation":"26903:5:14","nodeType":"VariableDeclaration","scope":11824,"src":"26889:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11821,"name":"string","nodeType":"ElementaryTypeName","src":"26889:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26888:21:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11832,"nodeType":"FunctionDefinition","src":"26973:78:14","nodes":[],"documentation":{"id":11825,"nodeType":"StructuredDocumentation","src":"26916:52:14","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"26982:13:14","parameters":{"id":11828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11827,"mutability":"mutable","name":"promptText","nameLocation":"27012:10:14","nodeType":"VariableDeclaration","scope":11832,"src":"26996:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11826,"name":"string","nodeType":"ElementaryTypeName","src":"26996:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26995:28:14"},"returnParameters":{"id":11831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11832,"src":"27042:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11829,"name":"address","nodeType":"ElementaryTypeName","src":"27042:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27041:9:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11840,"nodeType":"FunctionDefinition","src":"27125:89:14","nodes":[],"documentation":{"id":11833,"nodeType":"StructuredDocumentation","src":"27057:63:14","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"27134:12:14","parameters":{"id":11836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11835,"mutability":"mutable","name":"promptText","nameLocation":"27163:10:14","nodeType":"VariableDeclaration","scope":11840,"src":"27147:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11834,"name":"string","nodeType":"ElementaryTypeName","src":"27147:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27146:28:14"},"returnParameters":{"id":11839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11838,"mutability":"mutable","name":"input","nameLocation":"27207:5:14","nodeType":"VariableDeclaration","scope":11840,"src":"27193:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11837,"name":"string","nodeType":"ElementaryTypeName","src":"27193:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27192:21:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11848,"nodeType":"FunctionDefinition","src":"27294:81:14","nodes":[],"documentation":{"id":11841,"nodeType":"StructuredDocumentation","src":"27220:69:14","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"27303:16:14","parameters":{"id":11844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11843,"mutability":"mutable","name":"promptText","nameLocation":"27336:10:14","nodeType":"VariableDeclaration","scope":11848,"src":"27320:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11842,"name":"string","nodeType":"ElementaryTypeName","src":"27320:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27319:28:14"},"returnParameters":{"id":11847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11848,"src":"27366:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11845,"name":"uint256","nodeType":"ElementaryTypeName","src":"27366:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27365:9:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11856,"nodeType":"FunctionDefinition","src":"27435:75:14","nodes":[],"documentation":{"id":11849,"nodeType":"StructuredDocumentation","src":"27381:49:14","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"27444:10:14","parameters":{"id":11852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11851,"mutability":"mutable","name":"promptText","nameLocation":"27471:10:14","nodeType":"VariableDeclaration","scope":11856,"src":"27455:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11850,"name":"string","nodeType":"ElementaryTypeName","src":"27455:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27454:28:14"},"returnParameters":{"id":11855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11856,"src":"27501:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11853,"name":"uint256","nodeType":"ElementaryTypeName","src":"27501:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27500:9:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11866,"nodeType":"FunctionDefinition","src":"27758:89:14","nodes":[],"documentation":{"id":11857,"nodeType":"StructuredDocumentation","src":"27516:237:14","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"27767:7:14","parameters":{"id":11860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11859,"mutability":"mutable","name":"path","nameLocation":"27791:4:14","nodeType":"VariableDeclaration","scope":11866,"src":"27775:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11858,"name":"string","nodeType":"ElementaryTypeName","src":"27775:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27774:22:14"},"returnParameters":{"id":11865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11864,"mutability":"mutable","name":"entries","nameLocation":"27838:7:14","nodeType":"VariableDeclaration","scope":11866,"src":"27820:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11052_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":11862,"nodeType":"UserDefinedTypeName","pathNode":{"id":11861,"name":"DirEntry","nameLocations":["27820:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":11052,"src":"27820:8:14"},"referencedDeclaration":11052,"src":"27820:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$11052_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":11863,"nodeType":"ArrayTypeName","src":"27820:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11052_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"27819:27:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11878,"nodeType":"FunctionDefinition","src":"27884:106:14","nodes":[],"documentation":{"id":11867,"nodeType":"StructuredDocumentation","src":"27853:26:14","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"27893:7:14","parameters":{"id":11872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11869,"mutability":"mutable","name":"path","nameLocation":"27917:4:14","nodeType":"VariableDeclaration","scope":11878,"src":"27901:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11868,"name":"string","nodeType":"ElementaryTypeName","src":"27901:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11871,"mutability":"mutable","name":"maxDepth","nameLocation":"27930:8:14","nodeType":"VariableDeclaration","scope":11878,"src":"27923:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11870,"name":"uint64","nodeType":"ElementaryTypeName","src":"27923:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"27900:39:14"},"returnParameters":{"id":11877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11876,"mutability":"mutable","name":"entries","nameLocation":"27981:7:14","nodeType":"VariableDeclaration","scope":11878,"src":"27963:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11052_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":11874,"nodeType":"UserDefinedTypeName","pathNode":{"id":11873,"name":"DirEntry","nameLocations":["27963:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":11052,"src":"27963:8:14"},"referencedDeclaration":11052,"src":"27963:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$11052_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":11875,"nodeType":"ArrayTypeName","src":"27963:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11052_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"27962:27:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11892,"nodeType":"FunctionDefinition","src":"28027:148:14","nodes":[],"documentation":{"id":11879,"nodeType":"StructuredDocumentation","src":"27996:26:14","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"28036:7:14","parameters":{"id":11886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11881,"mutability":"mutable","name":"path","nameLocation":"28060:4:14","nodeType":"VariableDeclaration","scope":11892,"src":"28044:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11880,"name":"string","nodeType":"ElementaryTypeName","src":"28044:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11883,"mutability":"mutable","name":"maxDepth","nameLocation":"28073:8:14","nodeType":"VariableDeclaration","scope":11892,"src":"28066:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11882,"name":"uint64","nodeType":"ElementaryTypeName","src":"28066:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11885,"mutability":"mutable","name":"followLinks","nameLocation":"28088:11:14","nodeType":"VariableDeclaration","scope":11892,"src":"28083:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11884,"name":"bool","nodeType":"ElementaryTypeName","src":"28083:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28043:57:14"},"returnParameters":{"id":11891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11890,"mutability":"mutable","name":"entries","nameLocation":"28166:7:14","nodeType":"VariableDeclaration","scope":11892,"src":"28148:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11052_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":11888,"nodeType":"UserDefinedTypeName","pathNode":{"id":11887,"name":"DirEntry","nameLocations":["28148:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":11052,"src":"28148:8:14"},"referencedDeclaration":11052,"src":"28148:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$11052_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":11889,"nodeType":"ArrayTypeName","src":"28148:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$11052_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"28147:27:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11900,"nodeType":"FunctionDefinition","src":"28273:83:14","nodes":[],"documentation":{"id":11893,"nodeType":"StructuredDocumentation","src":"28181:87:14","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"28282:8:14","parameters":{"id":11896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11895,"mutability":"mutable","name":"path","nameLocation":"28307:4:14","nodeType":"VariableDeclaration","scope":11900,"src":"28291:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11894,"name":"string","nodeType":"ElementaryTypeName","src":"28291:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28290:22:14"},"returnParameters":{"id":11899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11898,"mutability":"mutable","name":"data","nameLocation":"28350:4:14","nodeType":"VariableDeclaration","scope":11900,"src":"28336:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11897,"name":"string","nodeType":"ElementaryTypeName","src":"28336:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28335:20:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11908,"nodeType":"FunctionDefinition","src":"28454:88:14","nodes":[],"documentation":{"id":11901,"nodeType":"StructuredDocumentation","src":"28362:87:14","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"28463:14:14","parameters":{"id":11904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11903,"mutability":"mutable","name":"path","nameLocation":"28494:4:14","nodeType":"VariableDeclaration","scope":11908,"src":"28478:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11902,"name":"string","nodeType":"ElementaryTypeName","src":"28478:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28477:22:14"},"returnParameters":{"id":11907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11906,"mutability":"mutable","name":"data","nameLocation":"28536:4:14","nodeType":"VariableDeclaration","scope":11908,"src":"28523:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":11905,"name":"bytes","nodeType":"ElementaryTypeName","src":"28523:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28522:19:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11916,"nodeType":"FunctionDefinition","src":"28591:83:14","nodes":[],"documentation":{"id":11909,"nodeType":"StructuredDocumentation","src":"28548:38:14","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"28600:8:14","parameters":{"id":11912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11911,"mutability":"mutable","name":"path","nameLocation":"28625:4:14","nodeType":"VariableDeclaration","scope":11916,"src":"28609:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11910,"name":"string","nodeType":"ElementaryTypeName","src":"28609:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28608:22:14"},"returnParameters":{"id":11915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11914,"mutability":"mutable","name":"line","nameLocation":"28668:4:14","nodeType":"VariableDeclaration","scope":11916,"src":"28654:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11913,"name":"string","nodeType":"ElementaryTypeName","src":"28654:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28653:20:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11924,"nodeType":"FunctionDefinition","src":"28933:93:14","nodes":[],"documentation":{"id":11917,"nodeType":"StructuredDocumentation","src":"28680:248:14","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"28942:8:14","parameters":{"id":11920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11919,"mutability":"mutable","name":"linkPath","nameLocation":"28967:8:14","nodeType":"VariableDeclaration","scope":11924,"src":"28951:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11918,"name":"string","nodeType":"ElementaryTypeName","src":"28951:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28950:26:14"},"returnParameters":{"id":11923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11922,"mutability":"mutable","name":"targetPath","nameLocation":"29014:10:14","nodeType":"VariableDeclaration","scope":11924,"src":"29000:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11921,"name":"string","nodeType":"ElementaryTypeName","src":"29000:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28999:26:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11932,"nodeType":"FunctionDefinition","src":"29416:66:14","nodes":[],"documentation":{"id":11925,"nodeType":"StructuredDocumentation","src":"29032:379:14","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"29425:9:14","parameters":{"id":11930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11927,"mutability":"mutable","name":"path","nameLocation":"29451:4:14","nodeType":"VariableDeclaration","scope":11932,"src":"29435:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11926,"name":"string","nodeType":"ElementaryTypeName","src":"29435:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11929,"mutability":"mutable","name":"recursive","nameLocation":"29462:9:14","nodeType":"VariableDeclaration","scope":11932,"src":"29457:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11928,"name":"bool","nodeType":"ElementaryTypeName","src":"29457:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29434:38:14"},"returnParameters":{"id":11931,"nodeType":"ParameterList","parameters":[],"src":"29481:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11938,"nodeType":"FunctionDefinition","src":"29815:51:14","nodes":[],"documentation":{"id":11933,"nodeType":"StructuredDocumentation","src":"29488:322:14","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"29824:10:14","parameters":{"id":11936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11935,"mutability":"mutable","name":"path","nameLocation":"29851:4:14","nodeType":"VariableDeclaration","scope":11938,"src":"29835:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11934,"name":"string","nodeType":"ElementaryTypeName","src":"29835:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29834:22:14"},"returnParameters":{"id":11937,"nodeType":"ParameterList","parameters":[],"src":"29865:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11948,"nodeType":"FunctionDefinition","src":"29973:91:14","nodes":[],"documentation":{"id":11939,"nodeType":"StructuredDocumentation","src":"29872:96:14","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"29982:6:14","parameters":{"id":11943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11942,"mutability":"mutable","name":"commandInput","nameLocation":"30007:12:14","nodeType":"VariableDeclaration","scope":11948,"src":"29989:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":11940,"name":"string","nodeType":"ElementaryTypeName","src":"29989:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":11941,"nodeType":"ArrayTypeName","src":"29989:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"29988:32:14"},"returnParameters":{"id":11947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11946,"mutability":"mutable","name":"result","nameLocation":"30056:6:14","nodeType":"VariableDeclaration","scope":11948,"src":"30039:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$11086_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":11945,"nodeType":"UserDefinedTypeName","pathNode":{"id":11944,"name":"FfiResult","nameLocations":["30039:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":11086,"src":"30039:9:14"},"referencedDeclaration":11086,"src":"30039:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$11086_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"30038:25:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11954,"nodeType":"FunctionDefinition","src":"30129:60:14","nodes":[],"documentation":{"id":11949,"nodeType":"StructuredDocumentation","src":"30070:54:14","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"30138:8:14","parameters":{"id":11950,"nodeType":"ParameterList","parameters":[],"src":"30146:2:14"},"returnParameters":{"id":11953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11952,"mutability":"mutable","name":"milliseconds","nameLocation":"30175:12:14","nodeType":"VariableDeclaration","scope":11954,"src":"30167:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11951,"name":"uint256","nodeType":"ElementaryTypeName","src":"30167:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30166:22:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11962,"nodeType":"FunctionDefinition","src":"30358:72:14","nodes":[],"documentation":{"id":11955,"nodeType":"StructuredDocumentation","src":"30195:158:14","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"30367:9:14","parameters":{"id":11960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11957,"mutability":"mutable","name":"path","nameLocation":"30393:4:14","nodeType":"VariableDeclaration","scope":11962,"src":"30377:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11956,"name":"string","nodeType":"ElementaryTypeName","src":"30377:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11959,"mutability":"mutable","name":"data","nameLocation":"30415:4:14","nodeType":"VariableDeclaration","scope":11962,"src":"30399:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11958,"name":"string","nodeType":"ElementaryTypeName","src":"30399:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30376:44:14"},"returnParameters":{"id":11961,"nodeType":"ParameterList","parameters":[],"src":"30429:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11970,"nodeType":"FunctionDefinition","src":"30608:77:14","nodes":[],"documentation":{"id":11963,"nodeType":"StructuredDocumentation","src":"30436:167:14","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"30617:15:14","parameters":{"id":11968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11965,"mutability":"mutable","name":"path","nameLocation":"30649:4:14","nodeType":"VariableDeclaration","scope":11970,"src":"30633:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11964,"name":"string","nodeType":"ElementaryTypeName","src":"30633:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11967,"mutability":"mutable","name":"data","nameLocation":"30670:4:14","nodeType":"VariableDeclaration","scope":11970,"src":"30655:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":11966,"name":"bytes","nodeType":"ElementaryTypeName","src":"30655:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30632:43:14"},"returnParameters":{"id":11969,"nodeType":"ParameterList","parameters":[],"src":"30684:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11978,"nodeType":"FunctionDefinition","src":"30806:72:14","nodes":[],"documentation":{"id":11971,"nodeType":"StructuredDocumentation","src":"30691:110:14","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"30815:9:14","parameters":{"id":11976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11973,"mutability":"mutable","name":"path","nameLocation":"30841:4:14","nodeType":"VariableDeclaration","scope":11978,"src":"30825:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11972,"name":"string","nodeType":"ElementaryTypeName","src":"30825:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11975,"mutability":"mutable","name":"data","nameLocation":"30863:4:14","nodeType":"VariableDeclaration","scope":11978,"src":"30847:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11974,"name":"string","nodeType":"ElementaryTypeName","src":"30847:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30824:44:14"},"returnParameters":{"id":11977,"nodeType":"ParameterList","parameters":[],"src":"30877:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":11988,"nodeType":"FunctionDefinition","src":"31071:91:14","nodes":[],"documentation":{"id":11979,"nodeType":"StructuredDocumentation","src":"30915:151:14","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"31080:9:14","parameters":{"id":11984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11981,"mutability":"mutable","name":"json","nameLocation":"31106:4:14","nodeType":"VariableDeclaration","scope":11988,"src":"31090:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11980,"name":"string","nodeType":"ElementaryTypeName","src":"31090:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11983,"mutability":"mutable","name":"key","nameLocation":"31128:3:14","nodeType":"VariableDeclaration","scope":11988,"src":"31112:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11982,"name":"string","nodeType":"ElementaryTypeName","src":"31112:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31089:43:14"},"returnParameters":{"id":11987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11988,"src":"31156:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11985,"name":"bool","nodeType":"ElementaryTypeName","src":"31156:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31155:6:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":11998,"nodeType":"FunctionDefinition","src":"31217:95:14","nodes":[],"documentation":{"id":11989,"nodeType":"StructuredDocumentation","src":"31168:44:14","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"31226:13:14","parameters":{"id":11994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11991,"mutability":"mutable","name":"json","nameLocation":"31256:4:14","nodeType":"VariableDeclaration","scope":11998,"src":"31240:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11990,"name":"string","nodeType":"ElementaryTypeName","src":"31240:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11993,"mutability":"mutable","name":"key","nameLocation":"31278:3:14","nodeType":"VariableDeclaration","scope":11998,"src":"31262:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":11992,"name":"string","nodeType":"ElementaryTypeName","src":"31262:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31239:43:14"},"returnParameters":{"id":11997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11998,"src":"31306:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11995,"name":"bool","nodeType":"ElementaryTypeName","src":"31306:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31305:6:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12008,"nodeType":"FunctionDefinition","src":"31393:101:14","nodes":[],"documentation":{"id":11999,"nodeType":"StructuredDocumentation","src":"31318:70:14","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"31402:16:14","parameters":{"id":12004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12001,"mutability":"mutable","name":"json","nameLocation":"31435:4:14","nodeType":"VariableDeclaration","scope":12008,"src":"31419:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12000,"name":"string","nodeType":"ElementaryTypeName","src":"31419:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12003,"mutability":"mutable","name":"key","nameLocation":"31457:3:14","nodeType":"VariableDeclaration","scope":12008,"src":"31441:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12002,"name":"string","nodeType":"ElementaryTypeName","src":"31441:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31418:43:14"},"returnParameters":{"id":12007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12008,"src":"31485:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12005,"name":"address","nodeType":"ElementaryTypeName","src":"31485:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31484:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12019,"nodeType":"FunctionDefinition","src":"31577:139:14","nodes":[],"documentation":{"id":12009,"nodeType":"StructuredDocumentation","src":"31500:72:14","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"31586:21:14","parameters":{"id":12014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12011,"mutability":"mutable","name":"json","nameLocation":"31624:4:14","nodeType":"VariableDeclaration","scope":12019,"src":"31608:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12010,"name":"string","nodeType":"ElementaryTypeName","src":"31608:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12013,"mutability":"mutable","name":"key","nameLocation":"31646:3:14","nodeType":"VariableDeclaration","scope":12019,"src":"31630:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12012,"name":"string","nodeType":"ElementaryTypeName","src":"31630:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31607:43:14"},"returnParameters":{"id":12018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12019,"src":"31698:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12015,"name":"address","nodeType":"ElementaryTypeName","src":"31698:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12016,"nodeType":"ArrayTypeName","src":"31698:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"31697:18:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12029,"nodeType":"FunctionDefinition","src":"31794:95:14","nodes":[],"documentation":{"id":12020,"nodeType":"StructuredDocumentation","src":"31722:67:14","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"31803:13:14","parameters":{"id":12025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12022,"mutability":"mutable","name":"json","nameLocation":"31833:4:14","nodeType":"VariableDeclaration","scope":12029,"src":"31817:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12021,"name":"string","nodeType":"ElementaryTypeName","src":"31817:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12024,"mutability":"mutable","name":"key","nameLocation":"31855:3:14","nodeType":"VariableDeclaration","scope":12029,"src":"31839:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12023,"name":"string","nodeType":"ElementaryTypeName","src":"31839:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31816:43:14"},"returnParameters":{"id":12028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12029,"src":"31883:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12026,"name":"bool","nodeType":"ElementaryTypeName","src":"31883:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31882:6:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12040,"nodeType":"FunctionDefinition","src":"31969:109:14","nodes":[],"documentation":{"id":12030,"nodeType":"StructuredDocumentation","src":"31895:69:14","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"31978:18:14","parameters":{"id":12035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12032,"mutability":"mutable","name":"json","nameLocation":"32013:4:14","nodeType":"VariableDeclaration","scope":12040,"src":"31997:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12031,"name":"string","nodeType":"ElementaryTypeName","src":"31997:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12034,"mutability":"mutable","name":"key","nameLocation":"32035:3:14","nodeType":"VariableDeclaration","scope":12040,"src":"32019:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12033,"name":"string","nodeType":"ElementaryTypeName","src":"32019:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31996:43:14"},"returnParameters":{"id":12039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12040,"src":"32063:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12036,"name":"bool","nodeType":"ElementaryTypeName","src":"32063:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12037,"nodeType":"ArrayTypeName","src":"32063:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"32062:15:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12050,"nodeType":"FunctionDefinition","src":"32157:104:14","nodes":[],"documentation":{"id":12041,"nodeType":"StructuredDocumentation","src":"32084:68:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"32166:14:14","parameters":{"id":12046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12043,"mutability":"mutable","name":"json","nameLocation":"32197:4:14","nodeType":"VariableDeclaration","scope":12050,"src":"32181:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12042,"name":"string","nodeType":"ElementaryTypeName","src":"32181:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12045,"mutability":"mutable","name":"key","nameLocation":"32219:3:14","nodeType":"VariableDeclaration","scope":12050,"src":"32203:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12044,"name":"string","nodeType":"ElementaryTypeName","src":"32203:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32180:43:14"},"returnParameters":{"id":12049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12050,"src":"32247:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12047,"name":"bytes","nodeType":"ElementaryTypeName","src":"32247:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32246:14:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12060,"nodeType":"FunctionDefinition","src":"32342:101:14","nodes":[],"documentation":{"id":12051,"nodeType":"StructuredDocumentation","src":"32267:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"32351:16:14","parameters":{"id":12056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12053,"mutability":"mutable","name":"json","nameLocation":"32384:4:14","nodeType":"VariableDeclaration","scope":12060,"src":"32368:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12052,"name":"string","nodeType":"ElementaryTypeName","src":"32368:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12055,"mutability":"mutable","name":"key","nameLocation":"32406:3:14","nodeType":"VariableDeclaration","scope":12060,"src":"32390:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12054,"name":"string","nodeType":"ElementaryTypeName","src":"32390:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32367:43:14"},"returnParameters":{"id":12059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12060,"src":"32434:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32434:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"32433:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12071,"nodeType":"FunctionDefinition","src":"32526:139:14","nodes":[],"documentation":{"id":12061,"nodeType":"StructuredDocumentation","src":"32449:72:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"32535:21:14","parameters":{"id":12066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12063,"mutability":"mutable","name":"json","nameLocation":"32573:4:14","nodeType":"VariableDeclaration","scope":12071,"src":"32557:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12062,"name":"string","nodeType":"ElementaryTypeName","src":"32557:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12065,"mutability":"mutable","name":"key","nameLocation":"32595:3:14","nodeType":"VariableDeclaration","scope":12071,"src":"32579:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12064,"name":"string","nodeType":"ElementaryTypeName","src":"32579:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32556:43:14"},"returnParameters":{"id":12070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12071,"src":"32647:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32647:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12068,"nodeType":"ArrayTypeName","src":"32647:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"32646:18:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12082,"nodeType":"FunctionDefinition","src":"32746:111:14","nodes":[],"documentation":{"id":12072,"nodeType":"StructuredDocumentation","src":"32671:70:14","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"32755:19:14","parameters":{"id":12077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12074,"mutability":"mutable","name":"json","nameLocation":"32791:4:14","nodeType":"VariableDeclaration","scope":12082,"src":"32775:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12073,"name":"string","nodeType":"ElementaryTypeName","src":"32775:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12076,"mutability":"mutable","name":"key","nameLocation":"32813:3:14","nodeType":"VariableDeclaration","scope":12082,"src":"32797:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12075,"name":"string","nodeType":"ElementaryTypeName","src":"32797:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32774:43:14"},"returnParameters":{"id":12081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12082,"src":"32841:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12078,"name":"bytes","nodeType":"ElementaryTypeName","src":"32841:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12079,"nodeType":"ArrayTypeName","src":"32841:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"32840:16:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12092,"nodeType":"FunctionDefinition","src":"32937:96:14","nodes":[],"documentation":{"id":12083,"nodeType":"StructuredDocumentation","src":"32863:69:14","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"32946:12:14","parameters":{"id":12088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12085,"mutability":"mutable","name":"json","nameLocation":"32975:4:14","nodeType":"VariableDeclaration","scope":12092,"src":"32959:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12084,"name":"string","nodeType":"ElementaryTypeName","src":"32959:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12087,"mutability":"mutable","name":"key","nameLocation":"32997:3:14","nodeType":"VariableDeclaration","scope":12092,"src":"32981:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12086,"name":"string","nodeType":"ElementaryTypeName","src":"32981:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32958:43:14"},"returnParameters":{"id":12091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12092,"src":"33025:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12089,"name":"int256","nodeType":"ElementaryTypeName","src":"33025:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33024:8:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12103,"nodeType":"FunctionDefinition","src":"33115:110:14","nodes":[],"documentation":{"id":12093,"nodeType":"StructuredDocumentation","src":"33039:71:14","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"33124:17:14","parameters":{"id":12098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12095,"mutability":"mutable","name":"json","nameLocation":"33158:4:14","nodeType":"VariableDeclaration","scope":12103,"src":"33142:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12094,"name":"string","nodeType":"ElementaryTypeName","src":"33142:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12097,"mutability":"mutable","name":"key","nameLocation":"33180:3:14","nodeType":"VariableDeclaration","scope":12103,"src":"33164:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12096,"name":"string","nodeType":"ElementaryTypeName","src":"33164:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33141:43:14"},"returnParameters":{"id":12102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12103,"src":"33208:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12099,"name":"int256","nodeType":"ElementaryTypeName","src":"33208:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12100,"nodeType":"ArrayTypeName","src":"33208:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"33207:17:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12114,"nodeType":"FunctionDefinition","src":"33290:111:14","nodes":[],"documentation":{"id":12104,"nodeType":"StructuredDocumentation","src":"33231:54:14","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"33299:13:14","parameters":{"id":12109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12106,"mutability":"mutable","name":"json","nameLocation":"33329:4:14","nodeType":"VariableDeclaration","scope":12114,"src":"33313:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12105,"name":"string","nodeType":"ElementaryTypeName","src":"33313:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12108,"mutability":"mutable","name":"key","nameLocation":"33351:3:14","nodeType":"VariableDeclaration","scope":12114,"src":"33335:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12107,"name":"string","nodeType":"ElementaryTypeName","src":"33335:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33312:43:14"},"returnParameters":{"id":12113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12112,"mutability":"mutable","name":"keys","nameLocation":"33395:4:14","nodeType":"VariableDeclaration","scope":12114,"src":"33379:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12110,"name":"string","nodeType":"ElementaryTypeName","src":"33379:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12111,"nodeType":"ArrayTypeName","src":"33379:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"33378:22:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12124,"nodeType":"FunctionDefinition","src":"33481:106:14","nodes":[],"documentation":{"id":12115,"nodeType":"StructuredDocumentation","src":"33407:69:14","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"33490:15:14","parameters":{"id":12120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12117,"mutability":"mutable","name":"json","nameLocation":"33522:4:14","nodeType":"VariableDeclaration","scope":12124,"src":"33506:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12116,"name":"string","nodeType":"ElementaryTypeName","src":"33506:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12119,"mutability":"mutable","name":"key","nameLocation":"33544:3:14","nodeType":"VariableDeclaration","scope":12124,"src":"33528:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12118,"name":"string","nodeType":"ElementaryTypeName","src":"33528:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33505:43:14"},"returnParameters":{"id":12123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12124,"src":"33572:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12121,"name":"string","nodeType":"ElementaryTypeName","src":"33572:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33571:15:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12135,"nodeType":"FunctionDefinition","src":"33669:113:14","nodes":[],"documentation":{"id":12125,"nodeType":"StructuredDocumentation","src":"33593:71:14","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"33678:20:14","parameters":{"id":12130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12127,"mutability":"mutable","name":"json","nameLocation":"33715:4:14","nodeType":"VariableDeclaration","scope":12135,"src":"33699:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12126,"name":"string","nodeType":"ElementaryTypeName","src":"33699:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12129,"mutability":"mutable","name":"key","nameLocation":"33737:3:14","nodeType":"VariableDeclaration","scope":12135,"src":"33721:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12128,"name":"string","nodeType":"ElementaryTypeName","src":"33721:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33698:43:14"},"returnParameters":{"id":12134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12135,"src":"33765:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12131,"name":"string","nodeType":"ElementaryTypeName","src":"33765:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12132,"nodeType":"ArrayTypeName","src":"33765:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"33764:17:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12147,"nodeType":"FunctionDefinition","src":"33899:165:14","nodes":[],"documentation":{"id":12136,"nodeType":"StructuredDocumentation","src":"33788:106:14","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"33908:18:14","parameters":{"id":12143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12138,"mutability":"mutable","name":"json","nameLocation":"33943:4:14","nodeType":"VariableDeclaration","scope":12147,"src":"33927:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12137,"name":"string","nodeType":"ElementaryTypeName","src":"33927:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12140,"mutability":"mutable","name":"key","nameLocation":"33965:3:14","nodeType":"VariableDeclaration","scope":12147,"src":"33949:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12139,"name":"string","nodeType":"ElementaryTypeName","src":"33949:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12142,"mutability":"mutable","name":"typeDescription","nameLocation":"33986:15:14","nodeType":"VariableDeclaration","scope":12147,"src":"33970:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12141,"name":"string","nodeType":"ElementaryTypeName","src":"33970:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33926:76:14"},"returnParameters":{"id":12146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12147,"src":"34050:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12144,"name":"bytes","nodeType":"ElementaryTypeName","src":"34050:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34049:14:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12157,"nodeType":"FunctionDefinition","src":"34166:139:14","nodes":[],"documentation":{"id":12148,"nodeType":"StructuredDocumentation","src":"34070:91:14","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"34175:13:14","parameters":{"id":12153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12150,"mutability":"mutable","name":"json","nameLocation":"34205:4:14","nodeType":"VariableDeclaration","scope":12157,"src":"34189:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12149,"name":"string","nodeType":"ElementaryTypeName","src":"34189:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12152,"mutability":"mutable","name":"typeDescription","nameLocation":"34227:15:14","nodeType":"VariableDeclaration","scope":12157,"src":"34211:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12151,"name":"string","nodeType":"ElementaryTypeName","src":"34211:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34188:55:14"},"returnParameters":{"id":12156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12157,"src":"34291:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12154,"name":"bytes","nodeType":"ElementaryTypeName","src":"34291:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34290:14:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12169,"nodeType":"FunctionDefinition","src":"34416:160:14","nodes":[],"documentation":{"id":12158,"nodeType":"StructuredDocumentation","src":"34311:100:14","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"34425:13:14","parameters":{"id":12165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12160,"mutability":"mutable","name":"json","nameLocation":"34455:4:14","nodeType":"VariableDeclaration","scope":12169,"src":"34439:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12159,"name":"string","nodeType":"ElementaryTypeName","src":"34439:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12162,"mutability":"mutable","name":"key","nameLocation":"34477:3:14","nodeType":"VariableDeclaration","scope":12169,"src":"34461:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12161,"name":"string","nodeType":"ElementaryTypeName","src":"34461:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12164,"mutability":"mutable","name":"typeDescription","nameLocation":"34498:15:14","nodeType":"VariableDeclaration","scope":12169,"src":"34482:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12163,"name":"string","nodeType":"ElementaryTypeName","src":"34482:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34438:76:14"},"returnParameters":{"id":12168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12169,"src":"34562:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12166,"name":"bytes","nodeType":"ElementaryTypeName","src":"34562:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34561:14:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12179,"nodeType":"FunctionDefinition","src":"34657:98:14","nodes":[],"documentation":{"id":12170,"nodeType":"StructuredDocumentation","src":"34582:70:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"34666:13:14","parameters":{"id":12175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12172,"mutability":"mutable","name":"json","nameLocation":"34696:4:14","nodeType":"VariableDeclaration","scope":12179,"src":"34680:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12171,"name":"string","nodeType":"ElementaryTypeName","src":"34680:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12174,"mutability":"mutable","name":"key","nameLocation":"34718:3:14","nodeType":"VariableDeclaration","scope":12179,"src":"34702:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12173,"name":"string","nodeType":"ElementaryTypeName","src":"34702:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34679:43:14"},"returnParameters":{"id":12178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12179,"src":"34746:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12176,"name":"uint256","nodeType":"ElementaryTypeName","src":"34746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34745:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12190,"nodeType":"FunctionDefinition","src":"34838:112:14","nodes":[],"documentation":{"id":12180,"nodeType":"StructuredDocumentation","src":"34761:72:14","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"34847:18:14","parameters":{"id":12185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12182,"mutability":"mutable","name":"json","nameLocation":"34882:4:14","nodeType":"VariableDeclaration","scope":12190,"src":"34866:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12181,"name":"string","nodeType":"ElementaryTypeName","src":"34866:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12184,"mutability":"mutable","name":"key","nameLocation":"34904:3:14","nodeType":"VariableDeclaration","scope":12190,"src":"34888:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12183,"name":"string","nodeType":"ElementaryTypeName","src":"34888:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34865:43:14"},"returnParameters":{"id":12189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12190,"src":"34932:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12186,"name":"uint256","nodeType":"ElementaryTypeName","src":"34932:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12187,"nodeType":"ArrayTypeName","src":"34932:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"34931:18:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12198,"nodeType":"FunctionDefinition","src":"34991:93:14","nodes":[],"documentation":{"id":12191,"nodeType":"StructuredDocumentation","src":"34956:30:14","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"35000:9:14","parameters":{"id":12194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12193,"mutability":"mutable","name":"json","nameLocation":"35026:4:14","nodeType":"VariableDeclaration","scope":12198,"src":"35010:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12192,"name":"string","nodeType":"ElementaryTypeName","src":"35010:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35009:22:14"},"returnParameters":{"id":12197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12196,"mutability":"mutable","name":"abiEncodedData","nameLocation":"35068:14:14","nodeType":"VariableDeclaration","scope":12198,"src":"35055:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12195,"name":"bytes","nodeType":"ElementaryTypeName","src":"35055:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35054:29:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12208,"nodeType":"FunctionDefinition","src":"35134:114:14","nodes":[],"documentation":{"id":12199,"nodeType":"StructuredDocumentation","src":"35090:39:14","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"35143:9:14","parameters":{"id":12204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12201,"mutability":"mutable","name":"json","nameLocation":"35169:4:14","nodeType":"VariableDeclaration","scope":12208,"src":"35153:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12200,"name":"string","nodeType":"ElementaryTypeName","src":"35153:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12203,"mutability":"mutable","name":"key","nameLocation":"35191:3:14","nodeType":"VariableDeclaration","scope":12208,"src":"35175:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12202,"name":"string","nodeType":"ElementaryTypeName","src":"35175:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35152:43:14"},"returnParameters":{"id":12207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12206,"mutability":"mutable","name":"abiEncodedData","nameLocation":"35232:14:14","nodeType":"VariableDeclaration","scope":12208,"src":"35219:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12205,"name":"bytes","nodeType":"ElementaryTypeName","src":"35219:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35218:29:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12220,"nodeType":"FunctionDefinition","src":"35283:148:14","nodes":[],"documentation":{"id":12209,"nodeType":"StructuredDocumentation","src":"35254:24:14","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"35292:16:14","parameters":{"id":12216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12211,"mutability":"mutable","name":"objectKey","nameLocation":"35325:9:14","nodeType":"VariableDeclaration","scope":12220,"src":"35309:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12210,"name":"string","nodeType":"ElementaryTypeName","src":"35309:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12213,"mutability":"mutable","name":"valueKey","nameLocation":"35352:8:14","nodeType":"VariableDeclaration","scope":12220,"src":"35336:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12212,"name":"string","nodeType":"ElementaryTypeName","src":"35336:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12215,"mutability":"mutable","name":"value","nameLocation":"35370:5:14","nodeType":"VariableDeclaration","scope":12220,"src":"35362:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12214,"name":"address","nodeType":"ElementaryTypeName","src":"35362:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35308:68:14"},"returnParameters":{"id":12219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12218,"mutability":"mutable","name":"json","nameLocation":"35425:4:14","nodeType":"VariableDeclaration","scope":12220,"src":"35411:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12217,"name":"string","nodeType":"ElementaryTypeName","src":"35411:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35410:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12233,"nodeType":"FunctionDefinition","src":"35466:160:14","nodes":[],"documentation":{"id":12221,"nodeType":"StructuredDocumentation","src":"35437:24:14","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"35475:16:14","parameters":{"id":12229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12223,"mutability":"mutable","name":"objectKey","nameLocation":"35508:9:14","nodeType":"VariableDeclaration","scope":12233,"src":"35492:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12222,"name":"string","nodeType":"ElementaryTypeName","src":"35492:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12225,"mutability":"mutable","name":"valueKey","nameLocation":"35535:8:14","nodeType":"VariableDeclaration","scope":12233,"src":"35519:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12224,"name":"string","nodeType":"ElementaryTypeName","src":"35519:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12228,"mutability":"mutable","name":"values","nameLocation":"35564:6:14","nodeType":"VariableDeclaration","scope":12233,"src":"35545:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12226,"name":"address","nodeType":"ElementaryTypeName","src":"35545:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12227,"nodeType":"ArrayTypeName","src":"35545:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"35491:80:14"},"returnParameters":{"id":12232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12231,"mutability":"mutable","name":"json","nameLocation":"35620:4:14","nodeType":"VariableDeclaration","scope":12233,"src":"35606:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12230,"name":"string","nodeType":"ElementaryTypeName","src":"35606:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35605:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12245,"nodeType":"FunctionDefinition","src":"35661:142:14","nodes":[],"documentation":{"id":12234,"nodeType":"StructuredDocumentation","src":"35632:24:14","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"35670:13:14","parameters":{"id":12241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12236,"mutability":"mutable","name":"objectKey","nameLocation":"35700:9:14","nodeType":"VariableDeclaration","scope":12245,"src":"35684:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12235,"name":"string","nodeType":"ElementaryTypeName","src":"35684:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12238,"mutability":"mutable","name":"valueKey","nameLocation":"35727:8:14","nodeType":"VariableDeclaration","scope":12245,"src":"35711:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12237,"name":"string","nodeType":"ElementaryTypeName","src":"35711:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12240,"mutability":"mutable","name":"value","nameLocation":"35742:5:14","nodeType":"VariableDeclaration","scope":12245,"src":"35737:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12239,"name":"bool","nodeType":"ElementaryTypeName","src":"35737:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35683:65:14"},"returnParameters":{"id":12244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12243,"mutability":"mutable","name":"json","nameLocation":"35797:4:14","nodeType":"VariableDeclaration","scope":12245,"src":"35783:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12242,"name":"string","nodeType":"ElementaryTypeName","src":"35783:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35782:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12258,"nodeType":"FunctionDefinition","src":"35838:154:14","nodes":[],"documentation":{"id":12246,"nodeType":"StructuredDocumentation","src":"35809:24:14","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"35847:13:14","parameters":{"id":12254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12248,"mutability":"mutable","name":"objectKey","nameLocation":"35877:9:14","nodeType":"VariableDeclaration","scope":12258,"src":"35861:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12247,"name":"string","nodeType":"ElementaryTypeName","src":"35861:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12250,"mutability":"mutable","name":"valueKey","nameLocation":"35904:8:14","nodeType":"VariableDeclaration","scope":12258,"src":"35888:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12249,"name":"string","nodeType":"ElementaryTypeName","src":"35888:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12253,"mutability":"mutable","name":"values","nameLocation":"35930:6:14","nodeType":"VariableDeclaration","scope":12258,"src":"35914:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12251,"name":"bool","nodeType":"ElementaryTypeName","src":"35914:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12252,"nodeType":"ArrayTypeName","src":"35914:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"35860:77:14"},"returnParameters":{"id":12257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12256,"mutability":"mutable","name":"json","nameLocation":"35986:4:14","nodeType":"VariableDeclaration","scope":12258,"src":"35972:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12255,"name":"string","nodeType":"ElementaryTypeName","src":"35972:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35971:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12270,"nodeType":"FunctionDefinition","src":"36027:148:14","nodes":[],"documentation":{"id":12259,"nodeType":"StructuredDocumentation","src":"35998:24:14","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"36036:16:14","parameters":{"id":12266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12261,"mutability":"mutable","name":"objectKey","nameLocation":"36069:9:14","nodeType":"VariableDeclaration","scope":12270,"src":"36053:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12260,"name":"string","nodeType":"ElementaryTypeName","src":"36053:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12263,"mutability":"mutable","name":"valueKey","nameLocation":"36096:8:14","nodeType":"VariableDeclaration","scope":12270,"src":"36080:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12262,"name":"string","nodeType":"ElementaryTypeName","src":"36080:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12265,"mutability":"mutable","name":"value","nameLocation":"36114:5:14","nodeType":"VariableDeclaration","scope":12270,"src":"36106:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36106:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36052:68:14"},"returnParameters":{"id":12269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12268,"mutability":"mutable","name":"json","nameLocation":"36169:4:14","nodeType":"VariableDeclaration","scope":12270,"src":"36155:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12267,"name":"string","nodeType":"ElementaryTypeName","src":"36155:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36154:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12283,"nodeType":"FunctionDefinition","src":"36210:160:14","nodes":[],"documentation":{"id":12271,"nodeType":"StructuredDocumentation","src":"36181:24:14","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"36219:16:14","parameters":{"id":12279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12273,"mutability":"mutable","name":"objectKey","nameLocation":"36252:9:14","nodeType":"VariableDeclaration","scope":12283,"src":"36236:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12272,"name":"string","nodeType":"ElementaryTypeName","src":"36236:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12275,"mutability":"mutable","name":"valueKey","nameLocation":"36279:8:14","nodeType":"VariableDeclaration","scope":12283,"src":"36263:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12274,"name":"string","nodeType":"ElementaryTypeName","src":"36263:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12278,"mutability":"mutable","name":"values","nameLocation":"36308:6:14","nodeType":"VariableDeclaration","scope":12283,"src":"36289:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36289:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12277,"nodeType":"ArrayTypeName","src":"36289:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"36235:80:14"},"returnParameters":{"id":12282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12281,"mutability":"mutable","name":"json","nameLocation":"36364:4:14","nodeType":"VariableDeclaration","scope":12283,"src":"36350:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12280,"name":"string","nodeType":"ElementaryTypeName","src":"36350:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36349:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12295,"nodeType":"FunctionDefinition","src":"36405:153:14","nodes":[],"documentation":{"id":12284,"nodeType":"StructuredDocumentation","src":"36376:24:14","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"36414:14:14","parameters":{"id":12291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12286,"mutability":"mutable","name":"objectKey","nameLocation":"36445:9:14","nodeType":"VariableDeclaration","scope":12295,"src":"36429:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12285,"name":"string","nodeType":"ElementaryTypeName","src":"36429:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12288,"mutability":"mutable","name":"valueKey","nameLocation":"36472:8:14","nodeType":"VariableDeclaration","scope":12295,"src":"36456:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12287,"name":"string","nodeType":"ElementaryTypeName","src":"36456:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12290,"mutability":"mutable","name":"value","nameLocation":"36497:5:14","nodeType":"VariableDeclaration","scope":12295,"src":"36482:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12289,"name":"bytes","nodeType":"ElementaryTypeName","src":"36482:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36428:75:14"},"returnParameters":{"id":12294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12293,"mutability":"mutable","name":"json","nameLocation":"36552:4:14","nodeType":"VariableDeclaration","scope":12295,"src":"36538:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12292,"name":"string","nodeType":"ElementaryTypeName","src":"36538:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36537:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12308,"nodeType":"FunctionDefinition","src":"36593:156:14","nodes":[],"documentation":{"id":12296,"nodeType":"StructuredDocumentation","src":"36564:24:14","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"36602:14:14","parameters":{"id":12304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12298,"mutability":"mutable","name":"objectKey","nameLocation":"36633:9:14","nodeType":"VariableDeclaration","scope":12308,"src":"36617:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12297,"name":"string","nodeType":"ElementaryTypeName","src":"36617:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12300,"mutability":"mutable","name":"valueKey","nameLocation":"36660:8:14","nodeType":"VariableDeclaration","scope":12308,"src":"36644:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12299,"name":"string","nodeType":"ElementaryTypeName","src":"36644:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12303,"mutability":"mutable","name":"values","nameLocation":"36687:6:14","nodeType":"VariableDeclaration","scope":12308,"src":"36670:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12301,"name":"bytes","nodeType":"ElementaryTypeName","src":"36670:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12302,"nodeType":"ArrayTypeName","src":"36670:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"36616:78:14"},"returnParameters":{"id":12307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12306,"mutability":"mutable","name":"json","nameLocation":"36743:4:14","nodeType":"VariableDeclaration","scope":12308,"src":"36729:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12305,"name":"string","nodeType":"ElementaryTypeName","src":"36729:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36728:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12320,"nodeType":"FunctionDefinition","src":"36784:143:14","nodes":[],"documentation":{"id":12309,"nodeType":"StructuredDocumentation","src":"36755:24:14","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"36793:12:14","parameters":{"id":12316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12311,"mutability":"mutable","name":"objectKey","nameLocation":"36822:9:14","nodeType":"VariableDeclaration","scope":12320,"src":"36806:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12310,"name":"string","nodeType":"ElementaryTypeName","src":"36806:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12313,"mutability":"mutable","name":"valueKey","nameLocation":"36849:8:14","nodeType":"VariableDeclaration","scope":12320,"src":"36833:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12312,"name":"string","nodeType":"ElementaryTypeName","src":"36833:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12315,"mutability":"mutable","name":"value","nameLocation":"36866:5:14","nodeType":"VariableDeclaration","scope":12320,"src":"36859:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12314,"name":"int256","nodeType":"ElementaryTypeName","src":"36859:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36805:67:14"},"returnParameters":{"id":12319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12318,"mutability":"mutable","name":"json","nameLocation":"36921:4:14","nodeType":"VariableDeclaration","scope":12320,"src":"36907:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12317,"name":"string","nodeType":"ElementaryTypeName","src":"36907:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36906:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12333,"nodeType":"FunctionDefinition","src":"36962:155:14","nodes":[],"documentation":{"id":12321,"nodeType":"StructuredDocumentation","src":"36933:24:14","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"36971:12:14","parameters":{"id":12329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12323,"mutability":"mutable","name":"objectKey","nameLocation":"37000:9:14","nodeType":"VariableDeclaration","scope":12333,"src":"36984:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12322,"name":"string","nodeType":"ElementaryTypeName","src":"36984:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12325,"mutability":"mutable","name":"valueKey","nameLocation":"37027:8:14","nodeType":"VariableDeclaration","scope":12333,"src":"37011:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12324,"name":"string","nodeType":"ElementaryTypeName","src":"37011:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12328,"mutability":"mutable","name":"values","nameLocation":"37055:6:14","nodeType":"VariableDeclaration","scope":12333,"src":"37037:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12326,"name":"int256","nodeType":"ElementaryTypeName","src":"37037:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12327,"nodeType":"ArrayTypeName","src":"37037:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"36983:79:14"},"returnParameters":{"id":12332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12331,"mutability":"mutable","name":"json","nameLocation":"37111:4:14","nodeType":"VariableDeclaration","scope":12333,"src":"37097:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12330,"name":"string","nodeType":"ElementaryTypeName","src":"37097:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37096:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12343,"nodeType":"FunctionDefinition","src":"37314:111:14","nodes":[],"documentation":{"id":12334,"nodeType":"StructuredDocumentation","src":"37123:186:14","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"37323:13:14","parameters":{"id":12339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12336,"mutability":"mutable","name":"objectKey","nameLocation":"37353:9:14","nodeType":"VariableDeclaration","scope":12343,"src":"37337:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12335,"name":"string","nodeType":"ElementaryTypeName","src":"37337:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12338,"mutability":"mutable","name":"value","nameLocation":"37380:5:14","nodeType":"VariableDeclaration","scope":12343,"src":"37364:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12337,"name":"string","nodeType":"ElementaryTypeName","src":"37364:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37336:50:14"},"returnParameters":{"id":12342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12341,"mutability":"mutable","name":"json","nameLocation":"37419:4:14","nodeType":"VariableDeclaration","scope":12343,"src":"37405:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12340,"name":"string","nodeType":"ElementaryTypeName","src":"37405:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37404:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12353,"nodeType":"FunctionDefinition","src":"37460:149:14","nodes":[],"documentation":{"id":12344,"nodeType":"StructuredDocumentation","src":"37431:24:14","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"37469:17:14","parameters":{"id":12349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12346,"mutability":"mutable","name":"typeDescription","nameLocation":"37503:15:14","nodeType":"VariableDeclaration","scope":12353,"src":"37487:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12345,"name":"string","nodeType":"ElementaryTypeName","src":"37487:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12348,"mutability":"mutable","name":"value","nameLocation":"37535:5:14","nodeType":"VariableDeclaration","scope":12353,"src":"37520:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12347,"name":"bytes","nodeType":"ElementaryTypeName","src":"37520:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37486:55:14"},"returnParameters":{"id":12352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12351,"mutability":"mutable","name":"json","nameLocation":"37603:4:14","nodeType":"VariableDeclaration","scope":12353,"src":"37589:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12350,"name":"string","nodeType":"ElementaryTypeName","src":"37589:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37588:20:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12367,"nodeType":"FunctionDefinition","src":"37644:211:14","nodes":[],"documentation":{"id":12354,"nodeType":"StructuredDocumentation","src":"37615:24:14","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"37653:17:14","parameters":{"id":12363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12356,"mutability":"mutable","name":"objectKey","nameLocation":"37696:9:14","nodeType":"VariableDeclaration","scope":12367,"src":"37680:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12355,"name":"string","nodeType":"ElementaryTypeName","src":"37680:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12358,"mutability":"mutable","name":"valueKey","nameLocation":"37731:8:14","nodeType":"VariableDeclaration","scope":12367,"src":"37715:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12357,"name":"string","nodeType":"ElementaryTypeName","src":"37715:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12360,"mutability":"mutable","name":"typeDescription","nameLocation":"37765:15:14","nodeType":"VariableDeclaration","scope":12367,"src":"37749:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12359,"name":"string","nodeType":"ElementaryTypeName","src":"37749:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12362,"mutability":"mutable","name":"value","nameLocation":"37805:5:14","nodeType":"VariableDeclaration","scope":12367,"src":"37790:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12361,"name":"bytes","nodeType":"ElementaryTypeName","src":"37790:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37670:146:14"},"returnParameters":{"id":12366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12365,"mutability":"mutable","name":"json","nameLocation":"37849:4:14","nodeType":"VariableDeclaration","scope":12367,"src":"37835:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12364,"name":"string","nodeType":"ElementaryTypeName","src":"37835:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37834:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12379,"nodeType":"FunctionDefinition","src":"37890:155:14","nodes":[],"documentation":{"id":12368,"nodeType":"StructuredDocumentation","src":"37861:24:14","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"37899:15:14","parameters":{"id":12375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12370,"mutability":"mutable","name":"objectKey","nameLocation":"37931:9:14","nodeType":"VariableDeclaration","scope":12379,"src":"37915:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12369,"name":"string","nodeType":"ElementaryTypeName","src":"37915:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12372,"mutability":"mutable","name":"valueKey","nameLocation":"37958:8:14","nodeType":"VariableDeclaration","scope":12379,"src":"37942:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12371,"name":"string","nodeType":"ElementaryTypeName","src":"37942:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12374,"mutability":"mutable","name":"value","nameLocation":"37984:5:14","nodeType":"VariableDeclaration","scope":12379,"src":"37968:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12373,"name":"string","nodeType":"ElementaryTypeName","src":"37968:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37914:76:14"},"returnParameters":{"id":12378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12377,"mutability":"mutable","name":"json","nameLocation":"38039:4:14","nodeType":"VariableDeclaration","scope":12379,"src":"38025:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12376,"name":"string","nodeType":"ElementaryTypeName","src":"38025:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38024:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12392,"nodeType":"FunctionDefinition","src":"38080:158:14","nodes":[],"documentation":{"id":12380,"nodeType":"StructuredDocumentation","src":"38051:24:14","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"38089:15:14","parameters":{"id":12388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12382,"mutability":"mutable","name":"objectKey","nameLocation":"38121:9:14","nodeType":"VariableDeclaration","scope":12392,"src":"38105:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12381,"name":"string","nodeType":"ElementaryTypeName","src":"38105:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12384,"mutability":"mutable","name":"valueKey","nameLocation":"38148:8:14","nodeType":"VariableDeclaration","scope":12392,"src":"38132:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12383,"name":"string","nodeType":"ElementaryTypeName","src":"38132:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12387,"mutability":"mutable","name":"values","nameLocation":"38176:6:14","nodeType":"VariableDeclaration","scope":12392,"src":"38158:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12385,"name":"string","nodeType":"ElementaryTypeName","src":"38158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12386,"nodeType":"ArrayTypeName","src":"38158:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38104:79:14"},"returnParameters":{"id":12391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12390,"mutability":"mutable","name":"json","nameLocation":"38232:4:14","nodeType":"VariableDeclaration","scope":12392,"src":"38218:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12389,"name":"string","nodeType":"ElementaryTypeName","src":"38218:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38217:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12404,"nodeType":"FunctionDefinition","src":"38273:150:14","nodes":[],"documentation":{"id":12393,"nodeType":"StructuredDocumentation","src":"38244:24:14","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"38282:18:14","parameters":{"id":12400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12395,"mutability":"mutable","name":"objectKey","nameLocation":"38317:9:14","nodeType":"VariableDeclaration","scope":12404,"src":"38301:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12394,"name":"string","nodeType":"ElementaryTypeName","src":"38301:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12397,"mutability":"mutable","name":"valueKey","nameLocation":"38344:8:14","nodeType":"VariableDeclaration","scope":12404,"src":"38328:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12396,"name":"string","nodeType":"ElementaryTypeName","src":"38328:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12399,"mutability":"mutable","name":"value","nameLocation":"38362:5:14","nodeType":"VariableDeclaration","scope":12404,"src":"38354:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12398,"name":"uint256","nodeType":"ElementaryTypeName","src":"38354:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38300:68:14"},"returnParameters":{"id":12403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12402,"mutability":"mutable","name":"json","nameLocation":"38417:4:14","nodeType":"VariableDeclaration","scope":12404,"src":"38403:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12401,"name":"string","nodeType":"ElementaryTypeName","src":"38403:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38402:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12416,"nodeType":"FunctionDefinition","src":"38458:145:14","nodes":[],"documentation":{"id":12405,"nodeType":"StructuredDocumentation","src":"38429:24:14","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"38467:13:14","parameters":{"id":12412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12407,"mutability":"mutable","name":"objectKey","nameLocation":"38497:9:14","nodeType":"VariableDeclaration","scope":12416,"src":"38481:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12406,"name":"string","nodeType":"ElementaryTypeName","src":"38481:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12409,"mutability":"mutable","name":"valueKey","nameLocation":"38524:8:14","nodeType":"VariableDeclaration","scope":12416,"src":"38508:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12408,"name":"string","nodeType":"ElementaryTypeName","src":"38508:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12411,"mutability":"mutable","name":"value","nameLocation":"38542:5:14","nodeType":"VariableDeclaration","scope":12416,"src":"38534:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12410,"name":"uint256","nodeType":"ElementaryTypeName","src":"38534:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38480:68:14"},"returnParameters":{"id":12415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12414,"mutability":"mutable","name":"json","nameLocation":"38597:4:14","nodeType":"VariableDeclaration","scope":12416,"src":"38583:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12413,"name":"string","nodeType":"ElementaryTypeName","src":"38583:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38582:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12429,"nodeType":"FunctionDefinition","src":"38638:157:14","nodes":[],"documentation":{"id":12417,"nodeType":"StructuredDocumentation","src":"38609:24:14","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"38647:13:14","parameters":{"id":12425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12419,"mutability":"mutable","name":"objectKey","nameLocation":"38677:9:14","nodeType":"VariableDeclaration","scope":12429,"src":"38661:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12418,"name":"string","nodeType":"ElementaryTypeName","src":"38661:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12421,"mutability":"mutable","name":"valueKey","nameLocation":"38704:8:14","nodeType":"VariableDeclaration","scope":12429,"src":"38688:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12420,"name":"string","nodeType":"ElementaryTypeName","src":"38688:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12424,"mutability":"mutable","name":"values","nameLocation":"38733:6:14","nodeType":"VariableDeclaration","scope":12429,"src":"38714:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12422,"name":"uint256","nodeType":"ElementaryTypeName","src":"38714:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12423,"nodeType":"ArrayTypeName","src":"38714:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"38660:80:14"},"returnParameters":{"id":12428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12427,"mutability":"mutable","name":"json","nameLocation":"38789:4:14","nodeType":"VariableDeclaration","scope":12429,"src":"38775:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12426,"name":"string","nodeType":"ElementaryTypeName","src":"38775:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38774:20:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12437,"nodeType":"FunctionDefinition","src":"38895:72:14","nodes":[],"documentation":{"id":12430,"nodeType":"StructuredDocumentation","src":"38801:89:14","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"38904:9:14","parameters":{"id":12435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12432,"mutability":"mutable","name":"json","nameLocation":"38930:4:14","nodeType":"VariableDeclaration","scope":12437,"src":"38914:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12431,"name":"string","nodeType":"ElementaryTypeName","src":"38914:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12434,"mutability":"mutable","name":"path","nameLocation":"38952:4:14","nodeType":"VariableDeclaration","scope":12437,"src":"38936:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12433,"name":"string","nodeType":"ElementaryTypeName","src":"38936:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38913:44:14"},"returnParameters":{"id":12436,"nodeType":"ParameterList","parameters":[],"src":"38966:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12447,"nodeType":"FunctionDefinition","src":"39193:98:14","nodes":[],"documentation":{"id":12438,"nodeType":"StructuredDocumentation","src":"38973:215:14","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"39202:9:14","parameters":{"id":12445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12440,"mutability":"mutable","name":"json","nameLocation":"39228:4:14","nodeType":"VariableDeclaration","scope":12447,"src":"39212:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12439,"name":"string","nodeType":"ElementaryTypeName","src":"39212:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12442,"mutability":"mutable","name":"path","nameLocation":"39250:4:14","nodeType":"VariableDeclaration","scope":12447,"src":"39234:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12441,"name":"string","nodeType":"ElementaryTypeName","src":"39234:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12444,"mutability":"mutable","name":"valueKey","nameLocation":"39272:8:14","nodeType":"VariableDeclaration","scope":12447,"src":"39256:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12443,"name":"string","nodeType":"ElementaryTypeName","src":"39256:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39211:70:14"},"returnParameters":{"id":12446,"nodeType":"ParameterList","parameters":[],"src":"39290:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12451,"nodeType":"FunctionDefinition","src":"39830:30:14","nodes":[],"documentation":{"id":12448,"nodeType":"StructuredDocumentation","src":"39333:492:14","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"39839:9:14","parameters":{"id":12449,"nodeType":"ParameterList","parameters":[],"src":"39848:2:14"},"returnParameters":{"id":12450,"nodeType":"ParameterList","parameters":[],"src":"39859:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12457,"nodeType":"FunctionDefinition","src":"40030:44:14","nodes":[],"documentation":{"id":12452,"nodeType":"StructuredDocumentation","src":"39866:159:14","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"40039:9:14","parameters":{"id":12455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12454,"mutability":"mutable","name":"signer","nameLocation":"40057:6:14","nodeType":"VariableDeclaration","scope":12457,"src":"40049:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12453,"name":"address","nodeType":"ElementaryTypeName","src":"40049:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40048:16:14"},"returnParameters":{"id":12456,"nodeType":"ParameterList","parameters":[],"src":"40073:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12463,"nodeType":"FunctionDefinition","src":"40248:48:14","nodes":[],"documentation":{"id":12458,"nodeType":"StructuredDocumentation","src":"40080:163:14","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"40257:9:14","parameters":{"id":12461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12460,"mutability":"mutable","name":"privateKey","nameLocation":"40275:10:14","nodeType":"VariableDeclaration","scope":12463,"src":"40267:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12459,"name":"uint256","nodeType":"ElementaryTypeName","src":"40267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40266:20:14"},"returnParameters":{"id":12462,"nodeType":"ParameterList","parameters":[],"src":"40295:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12467,"nodeType":"FunctionDefinition","src":"40806:35:14","nodes":[],"documentation":{"id":12464,"nodeType":"StructuredDocumentation","src":"40302:499:14","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"40815:14:14","parameters":{"id":12465,"nodeType":"ParameterList","parameters":[],"src":"40829:2:14"},"returnParameters":{"id":12466,"nodeType":"ParameterList","parameters":[],"src":"40840:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12473,"nodeType":"FunctionDefinition","src":"41003:49:14","nodes":[],"documentation":{"id":12468,"nodeType":"StructuredDocumentation","src":"40847:151:14","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"41012:14:14","parameters":{"id":12471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12470,"mutability":"mutable","name":"signer","nameLocation":"41035:6:14","nodeType":"VariableDeclaration","scope":12473,"src":"41027:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12469,"name":"address","nodeType":"ElementaryTypeName","src":"41027:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41026:16:14"},"returnParameters":{"id":12472,"nodeType":"ParameterList","parameters":[],"src":"41051:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12479,"nodeType":"FunctionDefinition","src":"41218:53:14","nodes":[],"documentation":{"id":12474,"nodeType":"StructuredDocumentation","src":"41058:155:14","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"41227:14:14","parameters":{"id":12477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12476,"mutability":"mutable","name":"privateKey","nameLocation":"41250:10:14","nodeType":"VariableDeclaration","scope":12479,"src":"41242:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12475,"name":"uint256","nodeType":"ElementaryTypeName","src":"41242:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41241:20:14"},"returnParameters":{"id":12478,"nodeType":"ParameterList","parameters":[],"src":"41270:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12483,"nodeType":"FunctionDefinition","src":"41324:34:14","nodes":[],"documentation":{"id":12480,"nodeType":"StructuredDocumentation","src":"41277:42:14","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"41333:13:14","parameters":{"id":12481,"nodeType":"ParameterList","parameters":[],"src":"41346:2:14"},"returnParameters":{"id":12482,"nodeType":"ParameterList","parameters":[],"src":"41357:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12493,"nodeType":"FunctionDefinition","src":"41607:93:14","nodes":[],"documentation":{"id":12484,"nodeType":"StructuredDocumentation","src":"41397:205:14","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"41616:7:14","parameters":{"id":12489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12486,"mutability":"mutable","name":"input","nameLocation":"41640:5:14","nodeType":"VariableDeclaration","scope":12493,"src":"41624:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12485,"name":"string","nodeType":"ElementaryTypeName","src":"41624:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12488,"mutability":"mutable","name":"key","nameLocation":"41663:3:14","nodeType":"VariableDeclaration","scope":12493,"src":"41647:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12487,"name":"string","nodeType":"ElementaryTypeName","src":"41647:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41623:44:14"},"returnParameters":{"id":12492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12493,"src":"41691:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12490,"name":"uint256","nodeType":"ElementaryTypeName","src":"41691:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41690:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12501,"nodeType":"FunctionDefinition","src":"41759:100:14","nodes":[],"documentation":{"id":12494,"nodeType":"StructuredDocumentation","src":"41706:48:14","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"41768:12:14","parameters":{"id":12497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12496,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41797:16:14","nodeType":"VariableDeclaration","scope":12501,"src":"41781:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12495,"name":"string","nodeType":"ElementaryTypeName","src":"41781:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41780:34:14"},"returnParameters":{"id":12500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12499,"mutability":"mutable","name":"parsedValue","nameLocation":"41846:11:14","nodeType":"VariableDeclaration","scope":12501,"src":"41838:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12498,"name":"address","nodeType":"ElementaryTypeName","src":"41838:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41837:21:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12509,"nodeType":"FunctionDefinition","src":"41914:94:14","nodes":[],"documentation":{"id":12502,"nodeType":"StructuredDocumentation","src":"41865:44:14","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"41923:9:14","parameters":{"id":12505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12504,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41949:16:14","nodeType":"VariableDeclaration","scope":12509,"src":"41933:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12503,"name":"string","nodeType":"ElementaryTypeName","src":"41933:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41932:34:14"},"returnParameters":{"id":12508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12507,"mutability":"mutable","name":"parsedValue","nameLocation":"41995:11:14","nodeType":"VariableDeclaration","scope":12509,"src":"41990:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12506,"name":"bool","nodeType":"ElementaryTypeName","src":"41990:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41989:18:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12517,"nodeType":"FunctionDefinition","src":"42062:103:14","nodes":[],"documentation":{"id":12510,"nodeType":"StructuredDocumentation","src":"42014:43:14","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"42071:10:14","parameters":{"id":12513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12512,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42098:16:14","nodeType":"VariableDeclaration","scope":12517,"src":"42082:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12511,"name":"string","nodeType":"ElementaryTypeName","src":"42082:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42081:34:14"},"returnParameters":{"id":12516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12515,"mutability":"mutable","name":"parsedValue","nameLocation":"42152:11:14","nodeType":"VariableDeclaration","scope":12517,"src":"42139:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12514,"name":"bytes","nodeType":"ElementaryTypeName","src":"42139:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42138:26:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12525,"nodeType":"FunctionDefinition","src":"42223:100:14","nodes":[],"documentation":{"id":12518,"nodeType":"StructuredDocumentation","src":"42171:47:14","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"42232:12:14","parameters":{"id":12521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12520,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42261:16:14","nodeType":"VariableDeclaration","scope":12525,"src":"42245:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12519,"name":"string","nodeType":"ElementaryTypeName","src":"42245:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42244:34:14"},"returnParameters":{"id":12524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12523,"mutability":"mutable","name":"parsedValue","nameLocation":"42310:11:14","nodeType":"VariableDeclaration","scope":12525,"src":"42302:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"42302:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"42301:21:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12533,"nodeType":"FunctionDefinition","src":"42380:95:14","nodes":[],"documentation":{"id":12526,"nodeType":"StructuredDocumentation","src":"42329:46:14","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"42389:8:14","parameters":{"id":12529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12528,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42414:16:14","nodeType":"VariableDeclaration","scope":12533,"src":"42398:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12527,"name":"string","nodeType":"ElementaryTypeName","src":"42398:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42397:34:14"},"returnParameters":{"id":12532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12531,"mutability":"mutable","name":"parsedValue","nameLocation":"42462:11:14","nodeType":"VariableDeclaration","scope":12533,"src":"42455:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12530,"name":"int256","nodeType":"ElementaryTypeName","src":"42455:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"42454:20:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12541,"nodeType":"FunctionDefinition","src":"42533:97:14","nodes":[],"documentation":{"id":12534,"nodeType":"StructuredDocumentation","src":"42481:47:14","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"42542:9:14","parameters":{"id":12537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12536,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42568:16:14","nodeType":"VariableDeclaration","scope":12541,"src":"42552:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12535,"name":"string","nodeType":"ElementaryTypeName","src":"42552:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42551:34:14"},"returnParameters":{"id":12540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12539,"mutability":"mutable","name":"parsedValue","nameLocation":"42617:11:14","nodeType":"VariableDeclaration","scope":12541,"src":"42609:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12538,"name":"uint256","nodeType":"ElementaryTypeName","src":"42609:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42608:21:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12553,"nodeType":"FunctionDefinition","src":"42708:151:14","nodes":[],"documentation":{"id":12542,"nodeType":"StructuredDocumentation","src":"42636:67:14","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"42717:7:14","parameters":{"id":12549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12544,"mutability":"mutable","name":"input","nameLocation":"42741:5:14","nodeType":"VariableDeclaration","scope":12553,"src":"42725:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12543,"name":"string","nodeType":"ElementaryTypeName","src":"42725:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12546,"mutability":"mutable","name":"from","nameLocation":"42764:4:14","nodeType":"VariableDeclaration","scope":12553,"src":"42748:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12545,"name":"string","nodeType":"ElementaryTypeName","src":"42748:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12548,"mutability":"mutable","name":"to","nameLocation":"42786:2:14","nodeType":"VariableDeclaration","scope":12553,"src":"42770:18:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12547,"name":"string","nodeType":"ElementaryTypeName","src":"42770:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42724:65:14"},"returnParameters":{"id":12552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12551,"mutability":"mutable","name":"output","nameLocation":"42851:6:14","nodeType":"VariableDeclaration","scope":12553,"src":"42837:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12550,"name":"string","nodeType":"ElementaryTypeName","src":"42837:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42836:22:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12564,"nodeType":"FunctionDefinition","src":"42952:113:14","nodes":[],"documentation":{"id":12554,"nodeType":"StructuredDocumentation","src":"42865:82:14","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"42961:5:14","parameters":{"id":12559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12556,"mutability":"mutable","name":"input","nameLocation":"42983:5:14","nodeType":"VariableDeclaration","scope":12564,"src":"42967:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12555,"name":"string","nodeType":"ElementaryTypeName","src":"42967:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12558,"mutability":"mutable","name":"delimiter","nameLocation":"43006:9:14","nodeType":"VariableDeclaration","scope":12564,"src":"42990:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12557,"name":"string","nodeType":"ElementaryTypeName","src":"42990:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42966:50:14"},"returnParameters":{"id":12563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12562,"mutability":"mutable","name":"outputs","nameLocation":"43056:7:14","nodeType":"VariableDeclaration","scope":12564,"src":"43040:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12560,"name":"string","nodeType":"ElementaryTypeName","src":"43040:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12561,"nodeType":"ArrayTypeName","src":"43040:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"43039:25:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12572,"nodeType":"FunctionDefinition","src":"43127:89:14","nodes":[],"documentation":{"id":12565,"nodeType":"StructuredDocumentation","src":"43071:51:14","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"43136:11:14","parameters":{"id":12568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12567,"mutability":"mutable","name":"input","nameLocation":"43164:5:14","nodeType":"VariableDeclaration","scope":12572,"src":"43148:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12566,"name":"string","nodeType":"ElementaryTypeName","src":"43148:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43147:23:14"},"returnParameters":{"id":12571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12570,"mutability":"mutable","name":"output","nameLocation":"43208:6:14","nodeType":"VariableDeclaration","scope":12572,"src":"43194:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12569,"name":"string","nodeType":"ElementaryTypeName","src":"43194:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43193:22:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12580,"nodeType":"FunctionDefinition","src":"43270:88:14","nodes":[],"documentation":{"id":12573,"nodeType":"StructuredDocumentation","src":"43222:43:14","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43279:8:14","parameters":{"id":12576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12575,"mutability":"mutable","name":"value","nameLocation":"43296:5:14","nodeType":"VariableDeclaration","scope":12580,"src":"43288:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12574,"name":"address","nodeType":"ElementaryTypeName","src":"43288:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"43287:15:14"},"returnParameters":{"id":12579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12578,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43340:16:14","nodeType":"VariableDeclaration","scope":12580,"src":"43326:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12577,"name":"string","nodeType":"ElementaryTypeName","src":"43326:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43325:32:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12588,"nodeType":"FunctionDefinition","src":"43412:95:14","nodes":[],"documentation":{"id":12581,"nodeType":"StructuredDocumentation","src":"43364:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43421:8:14","parameters":{"id":12584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12583,"mutability":"mutable","name":"value","nameLocation":"43445:5:14","nodeType":"VariableDeclaration","scope":12588,"src":"43430:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12582,"name":"bytes","nodeType":"ElementaryTypeName","src":"43430:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43429:22:14"},"returnParameters":{"id":12587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12586,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43489:16:14","nodeType":"VariableDeclaration","scope":12588,"src":"43475:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12585,"name":"string","nodeType":"ElementaryTypeName","src":"43475:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43474:32:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12596,"nodeType":"FunctionDefinition","src":"43561:88:14","nodes":[],"documentation":{"id":12589,"nodeType":"StructuredDocumentation","src":"43513:43:14","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43570:8:14","parameters":{"id":12592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12591,"mutability":"mutable","name":"value","nameLocation":"43587:5:14","nodeType":"VariableDeclaration","scope":12596,"src":"43579:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"43579:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"43578:15:14"},"returnParameters":{"id":12595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12594,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43631:16:14","nodeType":"VariableDeclaration","scope":12596,"src":"43617:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12593,"name":"string","nodeType":"ElementaryTypeName","src":"43617:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43616:32:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12604,"nodeType":"FunctionDefinition","src":"43703:85:14","nodes":[],"documentation":{"id":12597,"nodeType":"StructuredDocumentation","src":"43655:43:14","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43712:8:14","parameters":{"id":12600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12599,"mutability":"mutable","name":"value","nameLocation":"43726:5:14","nodeType":"VariableDeclaration","scope":12604,"src":"43721:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12598,"name":"bool","nodeType":"ElementaryTypeName","src":"43721:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43720:12:14"},"returnParameters":{"id":12603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12602,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43770:16:14","nodeType":"VariableDeclaration","scope":12604,"src":"43756:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12601,"name":"string","nodeType":"ElementaryTypeName","src":"43756:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43755:32:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12612,"nodeType":"FunctionDefinition","src":"43842:88:14","nodes":[],"documentation":{"id":12605,"nodeType":"StructuredDocumentation","src":"43794:43:14","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43851:8:14","parameters":{"id":12608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12607,"mutability":"mutable","name":"value","nameLocation":"43868:5:14","nodeType":"VariableDeclaration","scope":12612,"src":"43860:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12606,"name":"uint256","nodeType":"ElementaryTypeName","src":"43860:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43859:15:14"},"returnParameters":{"id":12611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12610,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43912:16:14","nodeType":"VariableDeclaration","scope":12612,"src":"43898:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12609,"name":"string","nodeType":"ElementaryTypeName","src":"43898:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43897:32:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12620,"nodeType":"FunctionDefinition","src":"43984:87:14","nodes":[],"documentation":{"id":12613,"nodeType":"StructuredDocumentation","src":"43936:43:14","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43993:8:14","parameters":{"id":12616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12615,"mutability":"mutable","name":"value","nameLocation":"44009:5:14","nodeType":"VariableDeclaration","scope":12620,"src":"44002:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12614,"name":"int256","nodeType":"ElementaryTypeName","src":"44002:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"44001:14:14"},"returnParameters":{"id":12619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12618,"mutability":"mutable","name":"stringifiedValue","nameLocation":"44053:16:14","nodeType":"VariableDeclaration","scope":12620,"src":"44039:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12617,"name":"string","nodeType":"ElementaryTypeName","src":"44039:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44038:32:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12628,"nodeType":"FunctionDefinition","src":"44133:89:14","nodes":[],"documentation":{"id":12621,"nodeType":"StructuredDocumentation","src":"44077:51:14","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"44142:11:14","parameters":{"id":12624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12623,"mutability":"mutable","name":"input","nameLocation":"44170:5:14","nodeType":"VariableDeclaration","scope":12628,"src":"44154:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12622,"name":"string","nodeType":"ElementaryTypeName","src":"44154:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44153:23:14"},"returnParameters":{"id":12627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12626,"mutability":"mutable","name":"output","nameLocation":"44214:6:14","nodeType":"VariableDeclaration","scope":12628,"src":"44200:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12625,"name":"string","nodeType":"ElementaryTypeName","src":"44200:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44199:22:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12636,"nodeType":"FunctionDefinition","src":"44305:82:14","nodes":[],"documentation":{"id":12629,"nodeType":"StructuredDocumentation","src":"44228:72:14","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"44314:4:14","parameters":{"id":12632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12631,"mutability":"mutable","name":"input","nameLocation":"44335:5:14","nodeType":"VariableDeclaration","scope":12636,"src":"44319:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12630,"name":"string","nodeType":"ElementaryTypeName","src":"44319:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44318:23:14"},"returnParameters":{"id":12635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12634,"mutability":"mutable","name":"output","nameLocation":"44379:6:14","nodeType":"VariableDeclaration","scope":12636,"src":"44365:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12633,"name":"string","nodeType":"ElementaryTypeName","src":"44365:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44364:22:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12648,"nodeType":"FunctionDefinition","src":"44582:113:14","nodes":[],"documentation":{"id":12637,"nodeType":"StructuredDocumentation","src":"44427:150:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"44591:24:14","parameters":{"id":12646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12639,"mutability":"mutable","name":"left","nameLocation":"44624:4:14","nodeType":"VariableDeclaration","scope":12648,"src":"44616:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12638,"name":"uint256","nodeType":"ElementaryTypeName","src":"44616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12641,"mutability":"mutable","name":"right","nameLocation":"44638:5:14","nodeType":"VariableDeclaration","scope":12648,"src":"44630:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12640,"name":"uint256","nodeType":"ElementaryTypeName","src":"44630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12643,"mutability":"mutable","name":"maxDelta","nameLocation":"44653:8:14","nodeType":"VariableDeclaration","scope":12648,"src":"44645:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12642,"name":"uint256","nodeType":"ElementaryTypeName","src":"44645:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12645,"mutability":"mutable","name":"decimals","nameLocation":"44671:8:14","nodeType":"VariableDeclaration","scope":12648,"src":"44663:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12644,"name":"uint256","nodeType":"ElementaryTypeName","src":"44663:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44615:65:14"},"returnParameters":{"id":12647,"nodeType":"ParameterList","parameters":[],"src":"44694:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12662,"nodeType":"FunctionDefinition","src":"44910:182:14","nodes":[],"documentation":{"id":12649,"nodeType":"StructuredDocumentation","src":"44701:204:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"44919:24:14","parameters":{"id":12660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12651,"mutability":"mutable","name":"left","nameLocation":"44961:4:14","nodeType":"VariableDeclaration","scope":12662,"src":"44953:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12650,"name":"uint256","nodeType":"ElementaryTypeName","src":"44953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12653,"mutability":"mutable","name":"right","nameLocation":"44983:5:14","nodeType":"VariableDeclaration","scope":12662,"src":"44975:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12652,"name":"uint256","nodeType":"ElementaryTypeName","src":"44975:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12655,"mutability":"mutable","name":"maxDelta","nameLocation":"45006:8:14","nodeType":"VariableDeclaration","scope":12662,"src":"44998:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12654,"name":"uint256","nodeType":"ElementaryTypeName","src":"44998:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12657,"mutability":"mutable","name":"decimals","nameLocation":"45032:8:14","nodeType":"VariableDeclaration","scope":12662,"src":"45024:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12656,"name":"uint256","nodeType":"ElementaryTypeName","src":"45024:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12659,"mutability":"mutable","name":"error","nameLocation":"45066:5:14","nodeType":"VariableDeclaration","scope":12662,"src":"45050:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12658,"name":"string","nodeType":"ElementaryTypeName","src":"45050:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44943:134:14"},"returnParameters":{"id":12661,"nodeType":"ParameterList","parameters":[],"src":"45091:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12674,"nodeType":"FunctionDefinition","src":"45252:111:14","nodes":[],"documentation":{"id":12663,"nodeType":"StructuredDocumentation","src":"45098:149:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"45261:24:14","parameters":{"id":12672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12665,"mutability":"mutable","name":"left","nameLocation":"45293:4:14","nodeType":"VariableDeclaration","scope":12674,"src":"45286:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12664,"name":"int256","nodeType":"ElementaryTypeName","src":"45286:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12667,"mutability":"mutable","name":"right","nameLocation":"45306:5:14","nodeType":"VariableDeclaration","scope":12674,"src":"45299:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12666,"name":"int256","nodeType":"ElementaryTypeName","src":"45299:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12669,"mutability":"mutable","name":"maxDelta","nameLocation":"45321:8:14","nodeType":"VariableDeclaration","scope":12674,"src":"45313:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12668,"name":"uint256","nodeType":"ElementaryTypeName","src":"45313:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12671,"mutability":"mutable","name":"decimals","nameLocation":"45339:8:14","nodeType":"VariableDeclaration","scope":12674,"src":"45331:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12670,"name":"uint256","nodeType":"ElementaryTypeName","src":"45331:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45285:63:14"},"returnParameters":{"id":12673,"nodeType":"ParameterList","parameters":[],"src":"45362:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12688,"nodeType":"FunctionDefinition","src":"45577:180:14","nodes":[],"documentation":{"id":12675,"nodeType":"StructuredDocumentation","src":"45369:203:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"45586:24:14","parameters":{"id":12686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12677,"mutability":"mutable","name":"left","nameLocation":"45627:4:14","nodeType":"VariableDeclaration","scope":12688,"src":"45620:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12676,"name":"int256","nodeType":"ElementaryTypeName","src":"45620:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12679,"mutability":"mutable","name":"right","nameLocation":"45648:5:14","nodeType":"VariableDeclaration","scope":12688,"src":"45641:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12678,"name":"int256","nodeType":"ElementaryTypeName","src":"45641:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12681,"mutability":"mutable","name":"maxDelta","nameLocation":"45671:8:14","nodeType":"VariableDeclaration","scope":12688,"src":"45663:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12680,"name":"uint256","nodeType":"ElementaryTypeName","src":"45663:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12683,"mutability":"mutable","name":"decimals","nameLocation":"45697:8:14","nodeType":"VariableDeclaration","scope":12688,"src":"45689:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12682,"name":"uint256","nodeType":"ElementaryTypeName","src":"45689:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12685,"mutability":"mutable","name":"error","nameLocation":"45731:5:14","nodeType":"VariableDeclaration","scope":12688,"src":"45715:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12684,"name":"string","nodeType":"ElementaryTypeName","src":"45715:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45610:132:14"},"returnParameters":{"id":12687,"nodeType":"ParameterList","parameters":[],"src":"45756:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12698,"nodeType":"FunctionDefinition","src":"45861:88:14","nodes":[],"documentation":{"id":12689,"nodeType":"StructuredDocumentation","src":"45763:93:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"45870:17:14","parameters":{"id":12696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12691,"mutability":"mutable","name":"left","nameLocation":"45896:4:14","nodeType":"VariableDeclaration","scope":12698,"src":"45888:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12690,"name":"uint256","nodeType":"ElementaryTypeName","src":"45888:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12693,"mutability":"mutable","name":"right","nameLocation":"45910:5:14","nodeType":"VariableDeclaration","scope":12698,"src":"45902:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12692,"name":"uint256","nodeType":"ElementaryTypeName","src":"45902:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12695,"mutability":"mutable","name":"maxDelta","nameLocation":"45925:8:14","nodeType":"VariableDeclaration","scope":12698,"src":"45917:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12694,"name":"uint256","nodeType":"ElementaryTypeName","src":"45917:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45887:47:14"},"returnParameters":{"id":12697,"nodeType":"ParameterList","parameters":[],"src":"45948:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12710,"nodeType":"FunctionDefinition","src":"46115:111:14","nodes":[],"documentation":{"id":12699,"nodeType":"StructuredDocumentation","src":"45955:155:14","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46124:17:14","parameters":{"id":12708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12701,"mutability":"mutable","name":"left","nameLocation":"46150:4:14","nodeType":"VariableDeclaration","scope":12710,"src":"46142:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12700,"name":"uint256","nodeType":"ElementaryTypeName","src":"46142:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12703,"mutability":"mutable","name":"right","nameLocation":"46164:5:14","nodeType":"VariableDeclaration","scope":12710,"src":"46156:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12702,"name":"uint256","nodeType":"ElementaryTypeName","src":"46156:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12705,"mutability":"mutable","name":"maxDelta","nameLocation":"46179:8:14","nodeType":"VariableDeclaration","scope":12710,"src":"46171:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12704,"name":"uint256","nodeType":"ElementaryTypeName","src":"46171:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12707,"mutability":"mutable","name":"error","nameLocation":"46205:5:14","nodeType":"VariableDeclaration","scope":12710,"src":"46189:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12706,"name":"string","nodeType":"ElementaryTypeName","src":"46189:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46141:70:14"},"returnParameters":{"id":12709,"nodeType":"ParameterList","parameters":[],"src":"46225:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12720,"nodeType":"FunctionDefinition","src":"46329:86:14","nodes":[],"documentation":{"id":12711,"nodeType":"StructuredDocumentation","src":"46232:92:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46338:17:14","parameters":{"id":12718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12713,"mutability":"mutable","name":"left","nameLocation":"46363:4:14","nodeType":"VariableDeclaration","scope":12720,"src":"46356:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12712,"name":"int256","nodeType":"ElementaryTypeName","src":"46356:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12715,"mutability":"mutable","name":"right","nameLocation":"46376:5:14","nodeType":"VariableDeclaration","scope":12720,"src":"46369:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12714,"name":"int256","nodeType":"ElementaryTypeName","src":"46369:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12717,"mutability":"mutable","name":"maxDelta","nameLocation":"46391:8:14","nodeType":"VariableDeclaration","scope":12720,"src":"46383:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12716,"name":"uint256","nodeType":"ElementaryTypeName","src":"46383:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46355:45:14"},"returnParameters":{"id":12719,"nodeType":"ParameterList","parameters":[],"src":"46414:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12732,"nodeType":"FunctionDefinition","src":"46580:109:14","nodes":[],"documentation":{"id":12721,"nodeType":"StructuredDocumentation","src":"46421:154:14","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46589:17:14","parameters":{"id":12730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12723,"mutability":"mutable","name":"left","nameLocation":"46614:4:14","nodeType":"VariableDeclaration","scope":12732,"src":"46607:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12722,"name":"int256","nodeType":"ElementaryTypeName","src":"46607:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12725,"mutability":"mutable","name":"right","nameLocation":"46627:5:14","nodeType":"VariableDeclaration","scope":12732,"src":"46620:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12724,"name":"int256","nodeType":"ElementaryTypeName","src":"46620:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12727,"mutability":"mutable","name":"maxDelta","nameLocation":"46642:8:14","nodeType":"VariableDeclaration","scope":12732,"src":"46634:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12726,"name":"uint256","nodeType":"ElementaryTypeName","src":"46634:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12729,"mutability":"mutable","name":"error","nameLocation":"46668:5:14","nodeType":"VariableDeclaration","scope":12732,"src":"46652:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12728,"name":"string","nodeType":"ElementaryTypeName","src":"46652:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46606:68:14"},"returnParameters":{"id":12731,"nodeType":"ParameterList","parameters":[],"src":"46688:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12744,"nodeType":"FunctionDefinition","src":"46960:136:14","nodes":[],"documentation":{"id":12733,"nodeType":"StructuredDocumentation","src":"46695:260:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"46969:24:14","parameters":{"id":12742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12735,"mutability":"mutable","name":"left","nameLocation":"47002:4:14","nodeType":"VariableDeclaration","scope":12744,"src":"46994:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12734,"name":"uint256","nodeType":"ElementaryTypeName","src":"46994:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12737,"mutability":"mutable","name":"right","nameLocation":"47016:5:14","nodeType":"VariableDeclaration","scope":12744,"src":"47008:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12736,"name":"uint256","nodeType":"ElementaryTypeName","src":"47008:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12739,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47031:15:14","nodeType":"VariableDeclaration","scope":12744,"src":"47023:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12738,"name":"uint256","nodeType":"ElementaryTypeName","src":"47023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12741,"mutability":"mutable","name":"decimals","nameLocation":"47056:8:14","nodeType":"VariableDeclaration","scope":12744,"src":"47048:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12740,"name":"uint256","nodeType":"ElementaryTypeName","src":"47048:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46993:72:14"},"returnParameters":{"id":12743,"nodeType":"ParameterList","parameters":[],"src":"47095:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12758,"nodeType":"FunctionDefinition","src":"47421:189:14","nodes":[],"documentation":{"id":12745,"nodeType":"StructuredDocumentation","src":"47102:314:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"47430:24:14","parameters":{"id":12756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12747,"mutability":"mutable","name":"left","nameLocation":"47472:4:14","nodeType":"VariableDeclaration","scope":12758,"src":"47464:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12746,"name":"uint256","nodeType":"ElementaryTypeName","src":"47464:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12749,"mutability":"mutable","name":"right","nameLocation":"47494:5:14","nodeType":"VariableDeclaration","scope":12758,"src":"47486:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12748,"name":"uint256","nodeType":"ElementaryTypeName","src":"47486:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12751,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47517:15:14","nodeType":"VariableDeclaration","scope":12758,"src":"47509:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12750,"name":"uint256","nodeType":"ElementaryTypeName","src":"47509:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12753,"mutability":"mutable","name":"decimals","nameLocation":"47550:8:14","nodeType":"VariableDeclaration","scope":12758,"src":"47542:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12752,"name":"uint256","nodeType":"ElementaryTypeName","src":"47542:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12755,"mutability":"mutable","name":"error","nameLocation":"47584:5:14","nodeType":"VariableDeclaration","scope":12758,"src":"47568:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12754,"name":"string","nodeType":"ElementaryTypeName","src":"47568:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47454:141:14"},"returnParameters":{"id":12757,"nodeType":"ParameterList","parameters":[],"src":"47609:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12770,"nodeType":"FunctionDefinition","src":"47880:134:14","nodes":[],"documentation":{"id":12759,"nodeType":"StructuredDocumentation","src":"47616:259:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"47889:24:14","parameters":{"id":12768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12761,"mutability":"mutable","name":"left","nameLocation":"47921:4:14","nodeType":"VariableDeclaration","scope":12770,"src":"47914:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12760,"name":"int256","nodeType":"ElementaryTypeName","src":"47914:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12763,"mutability":"mutable","name":"right","nameLocation":"47934:5:14","nodeType":"VariableDeclaration","scope":12770,"src":"47927:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12762,"name":"int256","nodeType":"ElementaryTypeName","src":"47927:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12765,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47949:15:14","nodeType":"VariableDeclaration","scope":12770,"src":"47941:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12764,"name":"uint256","nodeType":"ElementaryTypeName","src":"47941:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12767,"mutability":"mutable","name":"decimals","nameLocation":"47974:8:14","nodeType":"VariableDeclaration","scope":12770,"src":"47966:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12766,"name":"uint256","nodeType":"ElementaryTypeName","src":"47966:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47913:70:14"},"returnParameters":{"id":12769,"nodeType":"ParameterList","parameters":[],"src":"48013:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12784,"nodeType":"FunctionDefinition","src":"48338:187:14","nodes":[],"documentation":{"id":12771,"nodeType":"StructuredDocumentation","src":"48020:313:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"48347:24:14","parameters":{"id":12782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12773,"mutability":"mutable","name":"left","nameLocation":"48388:4:14","nodeType":"VariableDeclaration","scope":12784,"src":"48381:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12772,"name":"int256","nodeType":"ElementaryTypeName","src":"48381:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12775,"mutability":"mutable","name":"right","nameLocation":"48409:5:14","nodeType":"VariableDeclaration","scope":12784,"src":"48402:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12774,"name":"int256","nodeType":"ElementaryTypeName","src":"48402:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12777,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"48432:15:14","nodeType":"VariableDeclaration","scope":12784,"src":"48424:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12776,"name":"uint256","nodeType":"ElementaryTypeName","src":"48424:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12779,"mutability":"mutable","name":"decimals","nameLocation":"48465:8:14","nodeType":"VariableDeclaration","scope":12784,"src":"48457:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12778,"name":"uint256","nodeType":"ElementaryTypeName","src":"48457:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12781,"mutability":"mutable","name":"error","nameLocation":"48499:5:14","nodeType":"VariableDeclaration","scope":12784,"src":"48483:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12780,"name":"string","nodeType":"ElementaryTypeName","src":"48483:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48371:139:14"},"returnParameters":{"id":12783,"nodeType":"ParameterList","parameters":[],"src":"48524:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12794,"nodeType":"FunctionDefinition","src":"48739:95:14","nodes":[],"documentation":{"id":12785,"nodeType":"StructuredDocumentation","src":"48531:203:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"48748:17:14","parameters":{"id":12792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12787,"mutability":"mutable","name":"left","nameLocation":"48774:4:14","nodeType":"VariableDeclaration","scope":12794,"src":"48766:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12786,"name":"uint256","nodeType":"ElementaryTypeName","src":"48766:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12789,"mutability":"mutable","name":"right","nameLocation":"48788:5:14","nodeType":"VariableDeclaration","scope":12794,"src":"48780:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12788,"name":"uint256","nodeType":"ElementaryTypeName","src":"48780:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12791,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"48803:15:14","nodeType":"VariableDeclaration","scope":12794,"src":"48795:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12790,"name":"uint256","nodeType":"ElementaryTypeName","src":"48795:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48765:54:14"},"returnParameters":{"id":12793,"nodeType":"ParameterList","parameters":[],"src":"48833:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12806,"nodeType":"FunctionDefinition","src":"49110:134:14","nodes":[],"documentation":{"id":12795,"nodeType":"StructuredDocumentation","src":"48840:265:14","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"49119:17:14","parameters":{"id":12804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12797,"mutability":"mutable","name":"left","nameLocation":"49145:4:14","nodeType":"VariableDeclaration","scope":12806,"src":"49137:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12796,"name":"uint256","nodeType":"ElementaryTypeName","src":"49137:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12799,"mutability":"mutable","name":"right","nameLocation":"49159:5:14","nodeType":"VariableDeclaration","scope":12806,"src":"49151:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12798,"name":"uint256","nodeType":"ElementaryTypeName","src":"49151:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12801,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"49174:15:14","nodeType":"VariableDeclaration","scope":12806,"src":"49166:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12800,"name":"uint256","nodeType":"ElementaryTypeName","src":"49166:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12803,"mutability":"mutable","name":"error","nameLocation":"49207:5:14","nodeType":"VariableDeclaration","scope":12806,"src":"49191:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12802,"name":"string","nodeType":"ElementaryTypeName","src":"49191:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49136:77:14"},"returnParameters":{"id":12805,"nodeType":"ParameterList","parameters":[],"src":"49243:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12816,"nodeType":"FunctionDefinition","src":"49457:93:14","nodes":[],"documentation":{"id":12807,"nodeType":"StructuredDocumentation","src":"49250:202:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"49466:17:14","parameters":{"id":12814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12809,"mutability":"mutable","name":"left","nameLocation":"49491:4:14","nodeType":"VariableDeclaration","scope":12816,"src":"49484:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12808,"name":"int256","nodeType":"ElementaryTypeName","src":"49484:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12811,"mutability":"mutable","name":"right","nameLocation":"49504:5:14","nodeType":"VariableDeclaration","scope":12816,"src":"49497:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12810,"name":"int256","nodeType":"ElementaryTypeName","src":"49497:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12813,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"49519:15:14","nodeType":"VariableDeclaration","scope":12816,"src":"49511:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12812,"name":"uint256","nodeType":"ElementaryTypeName","src":"49511:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49483:52:14"},"returnParameters":{"id":12815,"nodeType":"ParameterList","parameters":[],"src":"49549:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12828,"nodeType":"FunctionDefinition","src":"49825:132:14","nodes":[],"documentation":{"id":12817,"nodeType":"StructuredDocumentation","src":"49556:264:14","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"49834:17:14","parameters":{"id":12826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12819,"mutability":"mutable","name":"left","nameLocation":"49859:4:14","nodeType":"VariableDeclaration","scope":12828,"src":"49852:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12818,"name":"int256","nodeType":"ElementaryTypeName","src":"49852:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12821,"mutability":"mutable","name":"right","nameLocation":"49872:5:14","nodeType":"VariableDeclaration","scope":12828,"src":"49865:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12820,"name":"int256","nodeType":"ElementaryTypeName","src":"49865:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12823,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"49887:15:14","nodeType":"VariableDeclaration","scope":12828,"src":"49879:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12822,"name":"uint256","nodeType":"ElementaryTypeName","src":"49879:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12825,"mutability":"mutable","name":"error","nameLocation":"49920:5:14","nodeType":"VariableDeclaration","scope":12828,"src":"49904:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12824,"name":"string","nodeType":"ElementaryTypeName","src":"49904:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49851:75:14"},"returnParameters":{"id":12827,"nodeType":"ParameterList","parameters":[],"src":"49956:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12838,"nodeType":"FunctionDefinition","src":"50066:86:14","nodes":[],"documentation":{"id":12829,"nodeType":"StructuredDocumentation","src":"49963:98:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50075:15:14","parameters":{"id":12836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12831,"mutability":"mutable","name":"left","nameLocation":"50099:4:14","nodeType":"VariableDeclaration","scope":12838,"src":"50091:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12830,"name":"uint256","nodeType":"ElementaryTypeName","src":"50091:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12833,"mutability":"mutable","name":"right","nameLocation":"50113:5:14","nodeType":"VariableDeclaration","scope":12838,"src":"50105:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12832,"name":"uint256","nodeType":"ElementaryTypeName","src":"50105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12835,"mutability":"mutable","name":"decimals","nameLocation":"50128:8:14","nodeType":"VariableDeclaration","scope":12838,"src":"50120:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12834,"name":"uint256","nodeType":"ElementaryTypeName","src":"50120:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50090:47:14"},"returnParameters":{"id":12837,"nodeType":"ParameterList","parameters":[],"src":"50151:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12850,"nodeType":"FunctionDefinition","src":"50323:109:14","nodes":[],"documentation":{"id":12839,"nodeType":"StructuredDocumentation","src":"50158:160:14","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50332:15:14","parameters":{"id":12848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12841,"mutability":"mutable","name":"left","nameLocation":"50356:4:14","nodeType":"VariableDeclaration","scope":12850,"src":"50348:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12840,"name":"uint256","nodeType":"ElementaryTypeName","src":"50348:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12843,"mutability":"mutable","name":"right","nameLocation":"50370:5:14","nodeType":"VariableDeclaration","scope":12850,"src":"50362:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12842,"name":"uint256","nodeType":"ElementaryTypeName","src":"50362:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12845,"mutability":"mutable","name":"decimals","nameLocation":"50385:8:14","nodeType":"VariableDeclaration","scope":12850,"src":"50377:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12844,"name":"uint256","nodeType":"ElementaryTypeName","src":"50377:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12847,"mutability":"mutable","name":"error","nameLocation":"50411:5:14","nodeType":"VariableDeclaration","scope":12850,"src":"50395:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12846,"name":"string","nodeType":"ElementaryTypeName","src":"50395:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50347:70:14"},"returnParameters":{"id":12849,"nodeType":"ParameterList","parameters":[],"src":"50431:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12860,"nodeType":"FunctionDefinition","src":"50540:84:14","nodes":[],"documentation":{"id":12851,"nodeType":"StructuredDocumentation","src":"50438:97:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50549:15:14","parameters":{"id":12858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12853,"mutability":"mutable","name":"left","nameLocation":"50572:4:14","nodeType":"VariableDeclaration","scope":12860,"src":"50565:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12852,"name":"int256","nodeType":"ElementaryTypeName","src":"50565:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12855,"mutability":"mutable","name":"right","nameLocation":"50585:5:14","nodeType":"VariableDeclaration","scope":12860,"src":"50578:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12854,"name":"int256","nodeType":"ElementaryTypeName","src":"50578:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12857,"mutability":"mutable","name":"decimals","nameLocation":"50600:8:14","nodeType":"VariableDeclaration","scope":12860,"src":"50592:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12856,"name":"uint256","nodeType":"ElementaryTypeName","src":"50592:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50564:45:14"},"returnParameters":{"id":12859,"nodeType":"ParameterList","parameters":[],"src":"50623:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12872,"nodeType":"FunctionDefinition","src":"50794:107:14","nodes":[],"documentation":{"id":12861,"nodeType":"StructuredDocumentation","src":"50630:159:14","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50803:15:14","parameters":{"id":12870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12863,"mutability":"mutable","name":"left","nameLocation":"50826:4:14","nodeType":"VariableDeclaration","scope":12872,"src":"50819:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12862,"name":"int256","nodeType":"ElementaryTypeName","src":"50819:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12865,"mutability":"mutable","name":"right","nameLocation":"50839:5:14","nodeType":"VariableDeclaration","scope":12872,"src":"50832:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12864,"name":"int256","nodeType":"ElementaryTypeName","src":"50832:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":12867,"mutability":"mutable","name":"decimals","nameLocation":"50854:8:14","nodeType":"VariableDeclaration","scope":12872,"src":"50846:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12866,"name":"uint256","nodeType":"ElementaryTypeName","src":"50846:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12869,"mutability":"mutable","name":"error","nameLocation":"50880:5:14","nodeType":"VariableDeclaration","scope":12872,"src":"50864:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12868,"name":"string","nodeType":"ElementaryTypeName","src":"50864:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50818:68:14"},"returnParameters":{"id":12871,"nodeType":"ParameterList","parameters":[],"src":"50900:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12880,"nodeType":"FunctionDefinition","src":"50957:55:14","nodes":[],"documentation":{"id":12873,"nodeType":"StructuredDocumentation","src":"50907:45:14","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"50966:8:14","parameters":{"id":12878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12875,"mutability":"mutable","name":"left","nameLocation":"50980:4:14","nodeType":"VariableDeclaration","scope":12880,"src":"50975:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12874,"name":"bool","nodeType":"ElementaryTypeName","src":"50975:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12877,"mutability":"mutable","name":"right","nameLocation":"50991:5:14","nodeType":"VariableDeclaration","scope":12880,"src":"50986:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12876,"name":"bool","nodeType":"ElementaryTypeName","src":"50986:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"50974:23:14"},"returnParameters":{"id":12879,"nodeType":"ParameterList","parameters":[],"src":"51011:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12890,"nodeType":"FunctionDefinition","src":"51125:78:14","nodes":[],"documentation":{"id":12881,"nodeType":"StructuredDocumentation","src":"51018:102:14","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51134:8:14","parameters":{"id":12888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12883,"mutability":"mutable","name":"left","nameLocation":"51148:4:14","nodeType":"VariableDeclaration","scope":12890,"src":"51143:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12882,"name":"bool","nodeType":"ElementaryTypeName","src":"51143:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12885,"mutability":"mutable","name":"right","nameLocation":"51159:5:14","nodeType":"VariableDeclaration","scope":12890,"src":"51154:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12884,"name":"bool","nodeType":"ElementaryTypeName","src":"51154:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12887,"mutability":"mutable","name":"error","nameLocation":"51182:5:14","nodeType":"VariableDeclaration","scope":12890,"src":"51166:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12886,"name":"string","nodeType":"ElementaryTypeName","src":"51166:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51142:46:14"},"returnParameters":{"id":12889,"nodeType":"ParameterList","parameters":[],"src":"51202:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12898,"nodeType":"FunctionDefinition","src":"51261:77:14","nodes":[],"documentation":{"id":12891,"nodeType":"StructuredDocumentation","src":"51209:47:14","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51270:8:14","parameters":{"id":12896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12893,"mutability":"mutable","name":"left","nameLocation":"51295:4:14","nodeType":"VariableDeclaration","scope":12898,"src":"51279:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12892,"name":"string","nodeType":"ElementaryTypeName","src":"51279:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12895,"mutability":"mutable","name":"right","nameLocation":"51317:5:14","nodeType":"VariableDeclaration","scope":12898,"src":"51301:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12894,"name":"string","nodeType":"ElementaryTypeName","src":"51301:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51278:45:14"},"returnParameters":{"id":12897,"nodeType":"ParameterList","parameters":[],"src":"51337:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12908,"nodeType":"FunctionDefinition","src":"51453:100:14","nodes":[],"documentation":{"id":12899,"nodeType":"StructuredDocumentation","src":"51344:104:14","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51462:8:14","parameters":{"id":12906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12901,"mutability":"mutable","name":"left","nameLocation":"51487:4:14","nodeType":"VariableDeclaration","scope":12908,"src":"51471:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12900,"name":"string","nodeType":"ElementaryTypeName","src":"51471:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12903,"mutability":"mutable","name":"right","nameLocation":"51509:5:14","nodeType":"VariableDeclaration","scope":12908,"src":"51493:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12902,"name":"string","nodeType":"ElementaryTypeName","src":"51493:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12905,"mutability":"mutable","name":"error","nameLocation":"51532:5:14","nodeType":"VariableDeclaration","scope":12908,"src":"51516:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12904,"name":"string","nodeType":"ElementaryTypeName","src":"51516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51470:68:14"},"returnParameters":{"id":12907,"nodeType":"ParameterList","parameters":[],"src":"51552:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12916,"nodeType":"FunctionDefinition","src":"51610:75:14","nodes":[],"documentation":{"id":12909,"nodeType":"StructuredDocumentation","src":"51559:46:14","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51619:8:14","parameters":{"id":12914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12911,"mutability":"mutable","name":"left","nameLocation":"51643:4:14","nodeType":"VariableDeclaration","scope":12916,"src":"51628:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12910,"name":"bytes","nodeType":"ElementaryTypeName","src":"51628:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12913,"mutability":"mutable","name":"right","nameLocation":"51664:5:14","nodeType":"VariableDeclaration","scope":12916,"src":"51649:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12912,"name":"bytes","nodeType":"ElementaryTypeName","src":"51649:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51627:43:14"},"returnParameters":{"id":12915,"nodeType":"ParameterList","parameters":[],"src":"51684:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12926,"nodeType":"FunctionDefinition","src":"51799:98:14","nodes":[],"documentation":{"id":12917,"nodeType":"StructuredDocumentation","src":"51691:103:14","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51808:8:14","parameters":{"id":12924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12919,"mutability":"mutable","name":"left","nameLocation":"51832:4:14","nodeType":"VariableDeclaration","scope":12926,"src":"51817:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12918,"name":"bytes","nodeType":"ElementaryTypeName","src":"51817:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12921,"mutability":"mutable","name":"right","nameLocation":"51853:5:14","nodeType":"VariableDeclaration","scope":12926,"src":"51838:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12920,"name":"bytes","nodeType":"ElementaryTypeName","src":"51838:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12923,"mutability":"mutable","name":"error","nameLocation":"51876:5:14","nodeType":"VariableDeclaration","scope":12926,"src":"51860:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12922,"name":"string","nodeType":"ElementaryTypeName","src":"51860:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51816:66:14"},"returnParameters":{"id":12925,"nodeType":"ParameterList","parameters":[],"src":"51896:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12936,"nodeType":"FunctionDefinition","src":"51963:77:14","nodes":[],"documentation":{"id":12927,"nodeType":"StructuredDocumentation","src":"51903:55:14","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51972:8:14","parameters":{"id":12934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12930,"mutability":"mutable","name":"left","nameLocation":"51997:4:14","nodeType":"VariableDeclaration","scope":12936,"src":"51981:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12928,"name":"bool","nodeType":"ElementaryTypeName","src":"51981:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12929,"nodeType":"ArrayTypeName","src":"51981:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":12933,"mutability":"mutable","name":"right","nameLocation":"52019:5:14","nodeType":"VariableDeclaration","scope":12936,"src":"52003:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12931,"name":"bool","nodeType":"ElementaryTypeName","src":"52003:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12932,"nodeType":"ArrayTypeName","src":"52003:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"51980:45:14"},"returnParameters":{"id":12935,"nodeType":"ParameterList","parameters":[],"src":"52039:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12948,"nodeType":"FunctionDefinition","src":"52163:100:14","nodes":[],"documentation":{"id":12937,"nodeType":"StructuredDocumentation","src":"52046:112:14","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52172:8:14","parameters":{"id":12946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12940,"mutability":"mutable","name":"left","nameLocation":"52197:4:14","nodeType":"VariableDeclaration","scope":12948,"src":"52181:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12938,"name":"bool","nodeType":"ElementaryTypeName","src":"52181:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12939,"nodeType":"ArrayTypeName","src":"52181:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":12943,"mutability":"mutable","name":"right","nameLocation":"52219:5:14","nodeType":"VariableDeclaration","scope":12948,"src":"52203:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12941,"name":"bool","nodeType":"ElementaryTypeName","src":"52203:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12942,"nodeType":"ArrayTypeName","src":"52203:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":12945,"mutability":"mutable","name":"error","nameLocation":"52242:5:14","nodeType":"VariableDeclaration","scope":12948,"src":"52226:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12944,"name":"string","nodeType":"ElementaryTypeName","src":"52226:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52180:68:14"},"returnParameters":{"id":12947,"nodeType":"ParameterList","parameters":[],"src":"52262:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12958,"nodeType":"FunctionDefinition","src":"52331:83:14","nodes":[],"documentation":{"id":12949,"nodeType":"StructuredDocumentation","src":"52269:57:14","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52340:8:14","parameters":{"id":12956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12952,"mutability":"mutable","name":"left","nameLocation":"52368:4:14","nodeType":"VariableDeclaration","scope":12958,"src":"52349:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12950,"name":"uint256","nodeType":"ElementaryTypeName","src":"52349:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12951,"nodeType":"ArrayTypeName","src":"52349:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":12955,"mutability":"mutable","name":"right","nameLocation":"52393:5:14","nodeType":"VariableDeclaration","scope":12958,"src":"52374:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12953,"name":"uint256","nodeType":"ElementaryTypeName","src":"52374:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12954,"nodeType":"ArrayTypeName","src":"52374:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"52348:51:14"},"returnParameters":{"id":12957,"nodeType":"ParameterList","parameters":[],"src":"52413:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12970,"nodeType":"FunctionDefinition","src":"52540:106:14","nodes":[],"documentation":{"id":12959,"nodeType":"StructuredDocumentation","src":"52420:115:14","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52549:8:14","parameters":{"id":12968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12962,"mutability":"mutable","name":"left","nameLocation":"52577:4:14","nodeType":"VariableDeclaration","scope":12970,"src":"52558:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12960,"name":"uint256","nodeType":"ElementaryTypeName","src":"52558:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12961,"nodeType":"ArrayTypeName","src":"52558:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":12965,"mutability":"mutable","name":"right","nameLocation":"52602:5:14","nodeType":"VariableDeclaration","scope":12970,"src":"52583:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12963,"name":"uint256","nodeType":"ElementaryTypeName","src":"52583:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12964,"nodeType":"ArrayTypeName","src":"52583:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":12967,"mutability":"mutable","name":"error","nameLocation":"52625:5:14","nodeType":"VariableDeclaration","scope":12970,"src":"52609:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12966,"name":"string","nodeType":"ElementaryTypeName","src":"52609:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52557:74:14"},"returnParameters":{"id":12969,"nodeType":"ParameterList","parameters":[],"src":"52645:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12980,"nodeType":"FunctionDefinition","src":"52714:81:14","nodes":[],"documentation":{"id":12971,"nodeType":"StructuredDocumentation","src":"52652:57:14","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52723:8:14","parameters":{"id":12978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12974,"mutability":"mutable","name":"left","nameLocation":"52750:4:14","nodeType":"VariableDeclaration","scope":12980,"src":"52732:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12972,"name":"int256","nodeType":"ElementaryTypeName","src":"52732:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12973,"nodeType":"ArrayTypeName","src":"52732:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":12977,"mutability":"mutable","name":"right","nameLocation":"52774:5:14","nodeType":"VariableDeclaration","scope":12980,"src":"52756:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12975,"name":"int256","nodeType":"ElementaryTypeName","src":"52756:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12976,"nodeType":"ArrayTypeName","src":"52756:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"52731:49:14"},"returnParameters":{"id":12979,"nodeType":"ParameterList","parameters":[],"src":"52794:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12992,"nodeType":"FunctionDefinition","src":"52920:104:14","nodes":[],"documentation":{"id":12981,"nodeType":"StructuredDocumentation","src":"52801:114:14","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52929:8:14","parameters":{"id":12990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12984,"mutability":"mutable","name":"left","nameLocation":"52956:4:14","nodeType":"VariableDeclaration","scope":12992,"src":"52938:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12982,"name":"int256","nodeType":"ElementaryTypeName","src":"52938:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12983,"nodeType":"ArrayTypeName","src":"52938:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":12987,"mutability":"mutable","name":"right","nameLocation":"52980:5:14","nodeType":"VariableDeclaration","scope":12992,"src":"52962:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12985,"name":"int256","nodeType":"ElementaryTypeName","src":"52962:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12986,"nodeType":"ArrayTypeName","src":"52962:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":12989,"mutability":"mutable","name":"error","nameLocation":"53003:5:14","nodeType":"VariableDeclaration","scope":12992,"src":"52987:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12988,"name":"string","nodeType":"ElementaryTypeName","src":"52987:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52937:72:14"},"returnParameters":{"id":12991,"nodeType":"ParameterList","parameters":[],"src":"53023:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13000,"nodeType":"FunctionDefinition","src":"53083:61:14","nodes":[],"documentation":{"id":12993,"nodeType":"StructuredDocumentation","src":"53030:48:14","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53092:8:14","parameters":{"id":12998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12995,"mutability":"mutable","name":"left","nameLocation":"53109:4:14","nodeType":"VariableDeclaration","scope":13000,"src":"53101:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12994,"name":"uint256","nodeType":"ElementaryTypeName","src":"53101:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12997,"mutability":"mutable","name":"right","nameLocation":"53123:5:14","nodeType":"VariableDeclaration","scope":13000,"src":"53115:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12996,"name":"uint256","nodeType":"ElementaryTypeName","src":"53115:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53100:29:14"},"returnParameters":{"id":12999,"nodeType":"ParameterList","parameters":[],"src":"53143:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13010,"nodeType":"FunctionDefinition","src":"53213:83:14","nodes":[],"documentation":{"id":13001,"nodeType":"StructuredDocumentation","src":"53150:58:14","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53222:8:14","parameters":{"id":13008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13004,"mutability":"mutable","name":"left","nameLocation":"53250:4:14","nodeType":"VariableDeclaration","scope":13010,"src":"53231:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13002,"name":"address","nodeType":"ElementaryTypeName","src":"53231:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13003,"nodeType":"ArrayTypeName","src":"53231:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13007,"mutability":"mutable","name":"right","nameLocation":"53275:5:14","nodeType":"VariableDeclaration","scope":13010,"src":"53256:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13005,"name":"address","nodeType":"ElementaryTypeName","src":"53256:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13006,"nodeType":"ArrayTypeName","src":"53256:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"53230:51:14"},"returnParameters":{"id":13009,"nodeType":"ParameterList","parameters":[],"src":"53295:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13022,"nodeType":"FunctionDefinition","src":"53422:106:14","nodes":[],"documentation":{"id":13011,"nodeType":"StructuredDocumentation","src":"53302:115:14","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53431:8:14","parameters":{"id":13020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13014,"mutability":"mutable","name":"left","nameLocation":"53459:4:14","nodeType":"VariableDeclaration","scope":13022,"src":"53440:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13012,"name":"address","nodeType":"ElementaryTypeName","src":"53440:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13013,"nodeType":"ArrayTypeName","src":"53440:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13017,"mutability":"mutable","name":"right","nameLocation":"53484:5:14","nodeType":"VariableDeclaration","scope":13022,"src":"53465:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13015,"name":"address","nodeType":"ElementaryTypeName","src":"53465:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13016,"nodeType":"ArrayTypeName","src":"53465:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13019,"mutability":"mutable","name":"error","nameLocation":"53507:5:14","nodeType":"VariableDeclaration","scope":13022,"src":"53491:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13018,"name":"string","nodeType":"ElementaryTypeName","src":"53491:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53439:74:14"},"returnParameters":{"id":13021,"nodeType":"ParameterList","parameters":[],"src":"53527:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13032,"nodeType":"FunctionDefinition","src":"53597:83:14","nodes":[],"documentation":{"id":13023,"nodeType":"StructuredDocumentation","src":"53534:58:14","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53606:8:14","parameters":{"id":13030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13026,"mutability":"mutable","name":"left","nameLocation":"53634:4:14","nodeType":"VariableDeclaration","scope":13032,"src":"53615:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53615:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13025,"nodeType":"ArrayTypeName","src":"53615:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13029,"mutability":"mutable","name":"right","nameLocation":"53659:5:14","nodeType":"VariableDeclaration","scope":13032,"src":"53640:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53640:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13028,"nodeType":"ArrayTypeName","src":"53640:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"53614:51:14"},"returnParameters":{"id":13031,"nodeType":"ParameterList","parameters":[],"src":"53679:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13044,"nodeType":"FunctionDefinition","src":"53806:106:14","nodes":[],"documentation":{"id":13033,"nodeType":"StructuredDocumentation","src":"53686:115:14","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53815:8:14","parameters":{"id":13042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13036,"mutability":"mutable","name":"left","nameLocation":"53843:4:14","nodeType":"VariableDeclaration","scope":13044,"src":"53824:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53824:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13035,"nodeType":"ArrayTypeName","src":"53824:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13039,"mutability":"mutable","name":"right","nameLocation":"53868:5:14","nodeType":"VariableDeclaration","scope":13044,"src":"53849:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53849:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13038,"nodeType":"ArrayTypeName","src":"53849:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13041,"mutability":"mutable","name":"error","nameLocation":"53891:5:14","nodeType":"VariableDeclaration","scope":13044,"src":"53875:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13040,"name":"string","nodeType":"ElementaryTypeName","src":"53875:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53823:74:14"},"returnParameters":{"id":13043,"nodeType":"ParameterList","parameters":[],"src":"53911:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13054,"nodeType":"FunctionDefinition","src":"53980:81:14","nodes":[],"documentation":{"id":13045,"nodeType":"StructuredDocumentation","src":"53918:57:14","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53989:8:14","parameters":{"id":13052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13048,"mutability":"mutable","name":"left","nameLocation":"54016:4:14","nodeType":"VariableDeclaration","scope":13054,"src":"53998:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13046,"name":"string","nodeType":"ElementaryTypeName","src":"53998:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13047,"nodeType":"ArrayTypeName","src":"53998:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13051,"mutability":"mutable","name":"right","nameLocation":"54040:5:14","nodeType":"VariableDeclaration","scope":13054,"src":"54022:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13049,"name":"string","nodeType":"ElementaryTypeName","src":"54022:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13050,"nodeType":"ArrayTypeName","src":"54022:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"53997:49:14"},"returnParameters":{"id":13053,"nodeType":"ParameterList","parameters":[],"src":"54060:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13066,"nodeType":"FunctionDefinition","src":"54186:104:14","nodes":[],"documentation":{"id":13055,"nodeType":"StructuredDocumentation","src":"54067:114:14","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54195:8:14","parameters":{"id":13064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13058,"mutability":"mutable","name":"left","nameLocation":"54222:4:14","nodeType":"VariableDeclaration","scope":13066,"src":"54204:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13056,"name":"string","nodeType":"ElementaryTypeName","src":"54204:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13057,"nodeType":"ArrayTypeName","src":"54204:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13061,"mutability":"mutable","name":"right","nameLocation":"54246:5:14","nodeType":"VariableDeclaration","scope":13066,"src":"54228:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13059,"name":"string","nodeType":"ElementaryTypeName","src":"54228:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13060,"nodeType":"ArrayTypeName","src":"54228:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13063,"mutability":"mutable","name":"error","nameLocation":"54269:5:14","nodeType":"VariableDeclaration","scope":13066,"src":"54253:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13062,"name":"string","nodeType":"ElementaryTypeName","src":"54253:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54203:72:14"},"returnParameters":{"id":13065,"nodeType":"ParameterList","parameters":[],"src":"54289:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13076,"nodeType":"FunctionDefinition","src":"54357:79:14","nodes":[],"documentation":{"id":13067,"nodeType":"StructuredDocumentation","src":"54296:56:14","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54366:8:14","parameters":{"id":13074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13070,"mutability":"mutable","name":"left","nameLocation":"54392:4:14","nodeType":"VariableDeclaration","scope":13076,"src":"54375:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13068,"name":"bytes","nodeType":"ElementaryTypeName","src":"54375:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13069,"nodeType":"ArrayTypeName","src":"54375:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":13073,"mutability":"mutable","name":"right","nameLocation":"54415:5:14","nodeType":"VariableDeclaration","scope":13076,"src":"54398:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13071,"name":"bytes","nodeType":"ElementaryTypeName","src":"54398:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13072,"nodeType":"ArrayTypeName","src":"54398:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"54374:47:14"},"returnParameters":{"id":13075,"nodeType":"ParameterList","parameters":[],"src":"54435:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13088,"nodeType":"FunctionDefinition","src":"54560:102:14","nodes":[],"documentation":{"id":13077,"nodeType":"StructuredDocumentation","src":"54442:113:14","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54569:8:14","parameters":{"id":13086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13080,"mutability":"mutable","name":"left","nameLocation":"54595:4:14","nodeType":"VariableDeclaration","scope":13088,"src":"54578:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13078,"name":"bytes","nodeType":"ElementaryTypeName","src":"54578:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13079,"nodeType":"ArrayTypeName","src":"54578:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":13083,"mutability":"mutable","name":"right","nameLocation":"54618:5:14","nodeType":"VariableDeclaration","scope":13088,"src":"54601:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13081,"name":"bytes","nodeType":"ElementaryTypeName","src":"54601:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13082,"nodeType":"ArrayTypeName","src":"54601:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":13085,"mutability":"mutable","name":"error","nameLocation":"54641:5:14","nodeType":"VariableDeclaration","scope":13088,"src":"54625:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13084,"name":"string","nodeType":"ElementaryTypeName","src":"54625:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54577:70:14"},"returnParameters":{"id":13087,"nodeType":"ParameterList","parameters":[],"src":"54661:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13098,"nodeType":"FunctionDefinition","src":"54778:84:14","nodes":[],"documentation":{"id":13089,"nodeType":"StructuredDocumentation","src":"54668:105:14","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54787:8:14","parameters":{"id":13096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13091,"mutability":"mutable","name":"left","nameLocation":"54804:4:14","nodeType":"VariableDeclaration","scope":13098,"src":"54796:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13090,"name":"uint256","nodeType":"ElementaryTypeName","src":"54796:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13093,"mutability":"mutable","name":"right","nameLocation":"54818:5:14","nodeType":"VariableDeclaration","scope":13098,"src":"54810:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13092,"name":"uint256","nodeType":"ElementaryTypeName","src":"54810:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13095,"mutability":"mutable","name":"error","nameLocation":"54841:5:14","nodeType":"VariableDeclaration","scope":13098,"src":"54825:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13094,"name":"string","nodeType":"ElementaryTypeName","src":"54825:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54795:52:14"},"returnParameters":{"id":13097,"nodeType":"ParameterList","parameters":[],"src":"54861:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13106,"nodeType":"FunctionDefinition","src":"54920:59:14","nodes":[],"documentation":{"id":13099,"nodeType":"StructuredDocumentation","src":"54868:47:14","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54929:8:14","parameters":{"id":13104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13101,"mutability":"mutable","name":"left","nameLocation":"54945:4:14","nodeType":"VariableDeclaration","scope":13106,"src":"54938:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13100,"name":"int256","nodeType":"ElementaryTypeName","src":"54938:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13103,"mutability":"mutable","name":"right","nameLocation":"54958:5:14","nodeType":"VariableDeclaration","scope":13106,"src":"54951:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13102,"name":"int256","nodeType":"ElementaryTypeName","src":"54951:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"54937:27:14"},"returnParameters":{"id":13105,"nodeType":"ParameterList","parameters":[],"src":"54978:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13116,"nodeType":"FunctionDefinition","src":"55094:82:14","nodes":[],"documentation":{"id":13107,"nodeType":"StructuredDocumentation","src":"54985:104:14","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55103:8:14","parameters":{"id":13114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13109,"mutability":"mutable","name":"left","nameLocation":"55119:4:14","nodeType":"VariableDeclaration","scope":13116,"src":"55112:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13108,"name":"int256","nodeType":"ElementaryTypeName","src":"55112:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13111,"mutability":"mutable","name":"right","nameLocation":"55132:5:14","nodeType":"VariableDeclaration","scope":13116,"src":"55125:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13110,"name":"int256","nodeType":"ElementaryTypeName","src":"55125:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13113,"mutability":"mutable","name":"error","nameLocation":"55155:5:14","nodeType":"VariableDeclaration","scope":13116,"src":"55139:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13112,"name":"string","nodeType":"ElementaryTypeName","src":"55139:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55111:50:14"},"returnParameters":{"id":13115,"nodeType":"ParameterList","parameters":[],"src":"55175:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13124,"nodeType":"FunctionDefinition","src":"55235:61:14","nodes":[],"documentation":{"id":13117,"nodeType":"StructuredDocumentation","src":"55182:48:14","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55244:8:14","parameters":{"id":13122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13119,"mutability":"mutable","name":"left","nameLocation":"55261:4:14","nodeType":"VariableDeclaration","scope":13124,"src":"55253:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13118,"name":"address","nodeType":"ElementaryTypeName","src":"55253:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13121,"mutability":"mutable","name":"right","nameLocation":"55275:5:14","nodeType":"VariableDeclaration","scope":13124,"src":"55267:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13120,"name":"address","nodeType":"ElementaryTypeName","src":"55267:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"55252:29:14"},"returnParameters":{"id":13123,"nodeType":"ParameterList","parameters":[],"src":"55295:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13134,"nodeType":"FunctionDefinition","src":"55412:84:14","nodes":[],"documentation":{"id":13125,"nodeType":"StructuredDocumentation","src":"55302:105:14","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55421:8:14","parameters":{"id":13132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13127,"mutability":"mutable","name":"left","nameLocation":"55438:4:14","nodeType":"VariableDeclaration","scope":13134,"src":"55430:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13126,"name":"address","nodeType":"ElementaryTypeName","src":"55430:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13129,"mutability":"mutable","name":"right","nameLocation":"55452:5:14","nodeType":"VariableDeclaration","scope":13134,"src":"55444:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13128,"name":"address","nodeType":"ElementaryTypeName","src":"55444:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13131,"mutability":"mutable","name":"error","nameLocation":"55475:5:14","nodeType":"VariableDeclaration","scope":13134,"src":"55459:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13130,"name":"string","nodeType":"ElementaryTypeName","src":"55459:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55429:52:14"},"returnParameters":{"id":13133,"nodeType":"ParameterList","parameters":[],"src":"55495:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13142,"nodeType":"FunctionDefinition","src":"55555:61:14","nodes":[],"documentation":{"id":13135,"nodeType":"StructuredDocumentation","src":"55502:48:14","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55564:8:14","parameters":{"id":13140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13137,"mutability":"mutable","name":"left","nameLocation":"55581:4:14","nodeType":"VariableDeclaration","scope":13142,"src":"55573:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55573:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13139,"mutability":"mutable","name":"right","nameLocation":"55595:5:14","nodeType":"VariableDeclaration","scope":13142,"src":"55587:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55587:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"55572:29:14"},"returnParameters":{"id":13141,"nodeType":"ParameterList","parameters":[],"src":"55615:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13152,"nodeType":"FunctionDefinition","src":"55732:84:14","nodes":[],"documentation":{"id":13143,"nodeType":"StructuredDocumentation","src":"55622:105:14","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55741:8:14","parameters":{"id":13150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13145,"mutability":"mutable","name":"left","nameLocation":"55758:4:14","nodeType":"VariableDeclaration","scope":13152,"src":"55750:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55750:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13147,"mutability":"mutable","name":"right","nameLocation":"55772:5:14","nodeType":"VariableDeclaration","scope":13152,"src":"55764:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55764:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13149,"mutability":"mutable","name":"error","nameLocation":"55795:5:14","nodeType":"VariableDeclaration","scope":13152,"src":"55779:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13148,"name":"string","nodeType":"ElementaryTypeName","src":"55779:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55749:52:14"},"returnParameters":{"id":13151,"nodeType":"ParameterList","parameters":[],"src":"55815:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13158,"nodeType":"FunctionDefinition","src":"55873:51:14","nodes":[],"documentation":{"id":13153,"nodeType":"StructuredDocumentation","src":"55822:46:14","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"55882:11:14","parameters":{"id":13156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13155,"mutability":"mutable","name":"condition","nameLocation":"55899:9:14","nodeType":"VariableDeclaration","scope":13158,"src":"55894:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13154,"name":"bool","nodeType":"ElementaryTypeName","src":"55894:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"55893:16:14"},"returnParameters":{"id":13157,"nodeType":"ParameterList","parameters":[],"src":"55923:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13166,"nodeType":"FunctionDefinition","src":"56038:74:14","nodes":[],"documentation":{"id":13159,"nodeType":"StructuredDocumentation","src":"55930:103:14","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"56047:11:14","parameters":{"id":13164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13161,"mutability":"mutable","name":"condition","nameLocation":"56064:9:14","nodeType":"VariableDeclaration","scope":13166,"src":"56059:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13160,"name":"bool","nodeType":"ElementaryTypeName","src":"56059:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13163,"mutability":"mutable","name":"error","nameLocation":"56091:5:14","nodeType":"VariableDeclaration","scope":13166,"src":"56075:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13162,"name":"string","nodeType":"ElementaryTypeName","src":"56075:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56058:39:14"},"returnParameters":{"id":13165,"nodeType":"ParameterList","parameters":[],"src":"56111:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13176,"nodeType":"FunctionDefinition","src":"56273:86:14","nodes":[],"documentation":{"id":13167,"nodeType":"StructuredDocumentation","src":"56118:150:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"56282:15:14","parameters":{"id":13174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13169,"mutability":"mutable","name":"left","nameLocation":"56306:4:14","nodeType":"VariableDeclaration","scope":13176,"src":"56298:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13168,"name":"uint256","nodeType":"ElementaryTypeName","src":"56298:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13171,"mutability":"mutable","name":"right","nameLocation":"56320:5:14","nodeType":"VariableDeclaration","scope":13176,"src":"56312:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13170,"name":"uint256","nodeType":"ElementaryTypeName","src":"56312:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13173,"mutability":"mutable","name":"decimals","nameLocation":"56335:8:14","nodeType":"VariableDeclaration","scope":13176,"src":"56327:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13172,"name":"uint256","nodeType":"ElementaryTypeName","src":"56327:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56297:47:14"},"returnParameters":{"id":13175,"nodeType":"ParameterList","parameters":[],"src":"56358:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13188,"nodeType":"FunctionDefinition","src":"56574:109:14","nodes":[],"documentation":{"id":13177,"nodeType":"StructuredDocumentation","src":"56365:204:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"56583:15:14","parameters":{"id":13186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13179,"mutability":"mutable","name":"left","nameLocation":"56607:4:14","nodeType":"VariableDeclaration","scope":13188,"src":"56599:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13178,"name":"uint256","nodeType":"ElementaryTypeName","src":"56599:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13181,"mutability":"mutable","name":"right","nameLocation":"56621:5:14","nodeType":"VariableDeclaration","scope":13188,"src":"56613:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13180,"name":"uint256","nodeType":"ElementaryTypeName","src":"56613:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13183,"mutability":"mutable","name":"decimals","nameLocation":"56636:8:14","nodeType":"VariableDeclaration","scope":13188,"src":"56628:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13182,"name":"uint256","nodeType":"ElementaryTypeName","src":"56628:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13185,"mutability":"mutable","name":"error","nameLocation":"56662:5:14","nodeType":"VariableDeclaration","scope":13188,"src":"56646:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13184,"name":"string","nodeType":"ElementaryTypeName","src":"56646:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56598:70:14"},"returnParameters":{"id":13187,"nodeType":"ParameterList","parameters":[],"src":"56682:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13198,"nodeType":"FunctionDefinition","src":"56843:84:14","nodes":[],"documentation":{"id":13189,"nodeType":"StructuredDocumentation","src":"56689:149:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"56852:15:14","parameters":{"id":13196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13191,"mutability":"mutable","name":"left","nameLocation":"56875:4:14","nodeType":"VariableDeclaration","scope":13198,"src":"56868:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13190,"name":"int256","nodeType":"ElementaryTypeName","src":"56868:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13193,"mutability":"mutable","name":"right","nameLocation":"56888:5:14","nodeType":"VariableDeclaration","scope":13198,"src":"56881:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13192,"name":"int256","nodeType":"ElementaryTypeName","src":"56881:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13195,"mutability":"mutable","name":"decimals","nameLocation":"56903:8:14","nodeType":"VariableDeclaration","scope":13198,"src":"56895:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13194,"name":"uint256","nodeType":"ElementaryTypeName","src":"56895:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56867:45:14"},"returnParameters":{"id":13197,"nodeType":"ParameterList","parameters":[],"src":"56926:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13210,"nodeType":"FunctionDefinition","src":"57141:107:14","nodes":[],"documentation":{"id":13199,"nodeType":"StructuredDocumentation","src":"56933:203:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"57150:15:14","parameters":{"id":13208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13201,"mutability":"mutable","name":"left","nameLocation":"57173:4:14","nodeType":"VariableDeclaration","scope":13210,"src":"57166:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13200,"name":"int256","nodeType":"ElementaryTypeName","src":"57166:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13203,"mutability":"mutable","name":"right","nameLocation":"57186:5:14","nodeType":"VariableDeclaration","scope":13210,"src":"57179:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13202,"name":"int256","nodeType":"ElementaryTypeName","src":"57179:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13205,"mutability":"mutable","name":"decimals","nameLocation":"57201:8:14","nodeType":"VariableDeclaration","scope":13210,"src":"57193:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13204,"name":"uint256","nodeType":"ElementaryTypeName","src":"57193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13207,"mutability":"mutable","name":"error","nameLocation":"57227:5:14","nodeType":"VariableDeclaration","scope":13210,"src":"57211:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13206,"name":"string","nodeType":"ElementaryTypeName","src":"57211:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57165:68:14"},"returnParameters":{"id":13209,"nodeType":"ParameterList","parameters":[],"src":"57247:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13218,"nodeType":"FunctionDefinition","src":"57352:61:14","nodes":[],"documentation":{"id":13211,"nodeType":"StructuredDocumentation","src":"57254:93:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57361:8:14","parameters":{"id":13216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13213,"mutability":"mutable","name":"left","nameLocation":"57378:4:14","nodeType":"VariableDeclaration","scope":13218,"src":"57370:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13212,"name":"uint256","nodeType":"ElementaryTypeName","src":"57370:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13215,"mutability":"mutable","name":"right","nameLocation":"57392:5:14","nodeType":"VariableDeclaration","scope":13218,"src":"57384:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13214,"name":"uint256","nodeType":"ElementaryTypeName","src":"57384:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57369:29:14"},"returnParameters":{"id":13217,"nodeType":"ParameterList","parameters":[],"src":"57412:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13228,"nodeType":"FunctionDefinition","src":"57579:84:14","nodes":[],"documentation":{"id":13219,"nodeType":"StructuredDocumentation","src":"57419:155:14","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57588:8:14","parameters":{"id":13226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13221,"mutability":"mutable","name":"left","nameLocation":"57605:4:14","nodeType":"VariableDeclaration","scope":13228,"src":"57597:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13220,"name":"uint256","nodeType":"ElementaryTypeName","src":"57597:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13223,"mutability":"mutable","name":"right","nameLocation":"57619:5:14","nodeType":"VariableDeclaration","scope":13228,"src":"57611:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13222,"name":"uint256","nodeType":"ElementaryTypeName","src":"57611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13225,"mutability":"mutable","name":"error","nameLocation":"57642:5:14","nodeType":"VariableDeclaration","scope":13228,"src":"57626:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13224,"name":"string","nodeType":"ElementaryTypeName","src":"57626:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57596:52:14"},"returnParameters":{"id":13227,"nodeType":"ParameterList","parameters":[],"src":"57662:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13236,"nodeType":"FunctionDefinition","src":"57766:59:14","nodes":[],"documentation":{"id":13229,"nodeType":"StructuredDocumentation","src":"57669:92:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57775:8:14","parameters":{"id":13234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13231,"mutability":"mutable","name":"left","nameLocation":"57791:4:14","nodeType":"VariableDeclaration","scope":13236,"src":"57784:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13230,"name":"int256","nodeType":"ElementaryTypeName","src":"57784:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13233,"mutability":"mutable","name":"right","nameLocation":"57804:5:14","nodeType":"VariableDeclaration","scope":13236,"src":"57797:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13232,"name":"int256","nodeType":"ElementaryTypeName","src":"57797:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57783:27:14"},"returnParameters":{"id":13235,"nodeType":"ParameterList","parameters":[],"src":"57824:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13246,"nodeType":"FunctionDefinition","src":"57990:82:14","nodes":[],"documentation":{"id":13237,"nodeType":"StructuredDocumentation","src":"57831:154:14","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57999:8:14","parameters":{"id":13244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13239,"mutability":"mutable","name":"left","nameLocation":"58015:4:14","nodeType":"VariableDeclaration","scope":13246,"src":"58008:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13238,"name":"int256","nodeType":"ElementaryTypeName","src":"58008:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13241,"mutability":"mutable","name":"right","nameLocation":"58028:5:14","nodeType":"VariableDeclaration","scope":13246,"src":"58021:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13240,"name":"int256","nodeType":"ElementaryTypeName","src":"58021:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13243,"mutability":"mutable","name":"error","nameLocation":"58051:5:14","nodeType":"VariableDeclaration","scope":13246,"src":"58035:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13242,"name":"string","nodeType":"ElementaryTypeName","src":"58035:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58007:50:14"},"returnParameters":{"id":13245,"nodeType":"ParameterList","parameters":[],"src":"58071:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13256,"nodeType":"FunctionDefinition","src":"58221:86:14","nodes":[],"documentation":{"id":13247,"nodeType":"StructuredDocumentation","src":"58078:138:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"58230:15:14","parameters":{"id":13254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13249,"mutability":"mutable","name":"left","nameLocation":"58254:4:14","nodeType":"VariableDeclaration","scope":13256,"src":"58246:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13248,"name":"uint256","nodeType":"ElementaryTypeName","src":"58246:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13251,"mutability":"mutable","name":"right","nameLocation":"58268:5:14","nodeType":"VariableDeclaration","scope":13256,"src":"58260:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13250,"name":"uint256","nodeType":"ElementaryTypeName","src":"58260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13253,"mutability":"mutable","name":"decimals","nameLocation":"58283:8:14","nodeType":"VariableDeclaration","scope":13256,"src":"58275:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13252,"name":"uint256","nodeType":"ElementaryTypeName","src":"58275:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58245:47:14"},"returnParameters":{"id":13255,"nodeType":"ParameterList","parameters":[],"src":"58306:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13268,"nodeType":"FunctionDefinition","src":"58510:109:14","nodes":[],"documentation":{"id":13257,"nodeType":"StructuredDocumentation","src":"58313:192:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"58519:15:14","parameters":{"id":13266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13259,"mutability":"mutable","name":"left","nameLocation":"58543:4:14","nodeType":"VariableDeclaration","scope":13268,"src":"58535:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13258,"name":"uint256","nodeType":"ElementaryTypeName","src":"58535:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13261,"mutability":"mutable","name":"right","nameLocation":"58557:5:14","nodeType":"VariableDeclaration","scope":13268,"src":"58549:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13260,"name":"uint256","nodeType":"ElementaryTypeName","src":"58549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13263,"mutability":"mutable","name":"decimals","nameLocation":"58572:8:14","nodeType":"VariableDeclaration","scope":13268,"src":"58564:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13262,"name":"uint256","nodeType":"ElementaryTypeName","src":"58564:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13265,"mutability":"mutable","name":"error","nameLocation":"58598:5:14","nodeType":"VariableDeclaration","scope":13268,"src":"58582:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13264,"name":"string","nodeType":"ElementaryTypeName","src":"58582:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58534:70:14"},"returnParameters":{"id":13267,"nodeType":"ParameterList","parameters":[],"src":"58618:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13278,"nodeType":"FunctionDefinition","src":"58767:84:14","nodes":[],"documentation":{"id":13269,"nodeType":"StructuredDocumentation","src":"58625:137:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"58776:15:14","parameters":{"id":13276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13271,"mutability":"mutable","name":"left","nameLocation":"58799:4:14","nodeType":"VariableDeclaration","scope":13278,"src":"58792:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13270,"name":"int256","nodeType":"ElementaryTypeName","src":"58792:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13273,"mutability":"mutable","name":"right","nameLocation":"58812:5:14","nodeType":"VariableDeclaration","scope":13278,"src":"58805:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13272,"name":"int256","nodeType":"ElementaryTypeName","src":"58805:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13275,"mutability":"mutable","name":"decimals","nameLocation":"58827:8:14","nodeType":"VariableDeclaration","scope":13278,"src":"58819:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13274,"name":"uint256","nodeType":"ElementaryTypeName","src":"58819:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58791:45:14"},"returnParameters":{"id":13277,"nodeType":"ParameterList","parameters":[],"src":"58850:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13290,"nodeType":"FunctionDefinition","src":"59053:107:14","nodes":[],"documentation":{"id":13279,"nodeType":"StructuredDocumentation","src":"58857:191:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"59062:15:14","parameters":{"id":13288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13281,"mutability":"mutable","name":"left","nameLocation":"59085:4:14","nodeType":"VariableDeclaration","scope":13290,"src":"59078:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13280,"name":"int256","nodeType":"ElementaryTypeName","src":"59078:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13283,"mutability":"mutable","name":"right","nameLocation":"59098:5:14","nodeType":"VariableDeclaration","scope":13290,"src":"59091:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13282,"name":"int256","nodeType":"ElementaryTypeName","src":"59091:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13285,"mutability":"mutable","name":"decimals","nameLocation":"59113:8:14","nodeType":"VariableDeclaration","scope":13290,"src":"59105:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13284,"name":"uint256","nodeType":"ElementaryTypeName","src":"59105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13287,"mutability":"mutable","name":"error","nameLocation":"59139:5:14","nodeType":"VariableDeclaration","scope":13290,"src":"59123:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13286,"name":"string","nodeType":"ElementaryTypeName","src":"59123:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59077:68:14"},"returnParameters":{"id":13289,"nodeType":"ParameterList","parameters":[],"src":"59159:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13298,"nodeType":"FunctionDefinition","src":"59252:61:14","nodes":[],"documentation":{"id":13291,"nodeType":"StructuredDocumentation","src":"59166:81:14","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59261:8:14","parameters":{"id":13296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13293,"mutability":"mutable","name":"left","nameLocation":"59278:4:14","nodeType":"VariableDeclaration","scope":13298,"src":"59270:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13292,"name":"uint256","nodeType":"ElementaryTypeName","src":"59270:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13295,"mutability":"mutable","name":"right","nameLocation":"59292:5:14","nodeType":"VariableDeclaration","scope":13298,"src":"59284:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13294,"name":"uint256","nodeType":"ElementaryTypeName","src":"59284:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59269:29:14"},"returnParameters":{"id":13297,"nodeType":"ParameterList","parameters":[],"src":"59312:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13308,"nodeType":"FunctionDefinition","src":"59467:84:14","nodes":[],"documentation":{"id":13299,"nodeType":"StructuredDocumentation","src":"59319:143:14","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59476:8:14","parameters":{"id":13306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13301,"mutability":"mutable","name":"left","nameLocation":"59493:4:14","nodeType":"VariableDeclaration","scope":13308,"src":"59485:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13300,"name":"uint256","nodeType":"ElementaryTypeName","src":"59485:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13303,"mutability":"mutable","name":"right","nameLocation":"59507:5:14","nodeType":"VariableDeclaration","scope":13308,"src":"59499:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13302,"name":"uint256","nodeType":"ElementaryTypeName","src":"59499:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13305,"mutability":"mutable","name":"error","nameLocation":"59530:5:14","nodeType":"VariableDeclaration","scope":13308,"src":"59514:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13304,"name":"string","nodeType":"ElementaryTypeName","src":"59514:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59484:52:14"},"returnParameters":{"id":13307,"nodeType":"ParameterList","parameters":[],"src":"59550:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13316,"nodeType":"FunctionDefinition","src":"59642:59:14","nodes":[],"documentation":{"id":13309,"nodeType":"StructuredDocumentation","src":"59557:80:14","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59651:8:14","parameters":{"id":13314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13311,"mutability":"mutable","name":"left","nameLocation":"59667:4:14","nodeType":"VariableDeclaration","scope":13316,"src":"59660:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13310,"name":"int256","nodeType":"ElementaryTypeName","src":"59660:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13313,"mutability":"mutable","name":"right","nameLocation":"59680:5:14","nodeType":"VariableDeclaration","scope":13316,"src":"59673:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13312,"name":"int256","nodeType":"ElementaryTypeName","src":"59673:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59659:27:14"},"returnParameters":{"id":13315,"nodeType":"ParameterList","parameters":[],"src":"59700:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13326,"nodeType":"FunctionDefinition","src":"59854:82:14","nodes":[],"documentation":{"id":13317,"nodeType":"StructuredDocumentation","src":"59707:142:14","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59863:8:14","parameters":{"id":13324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13319,"mutability":"mutable","name":"left","nameLocation":"59879:4:14","nodeType":"VariableDeclaration","scope":13326,"src":"59872:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13318,"name":"int256","nodeType":"ElementaryTypeName","src":"59872:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13321,"mutability":"mutable","name":"right","nameLocation":"59892:5:14","nodeType":"VariableDeclaration","scope":13326,"src":"59885:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13320,"name":"int256","nodeType":"ElementaryTypeName","src":"59885:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13323,"mutability":"mutable","name":"error","nameLocation":"59915:5:14","nodeType":"VariableDeclaration","scope":13326,"src":"59899:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13322,"name":"string","nodeType":"ElementaryTypeName","src":"59899:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59871:50:14"},"returnParameters":{"id":13325,"nodeType":"ParameterList","parameters":[],"src":"59935:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13336,"nodeType":"FunctionDefinition","src":"60094:86:14","nodes":[],"documentation":{"id":13327,"nodeType":"StructuredDocumentation","src":"59942:147:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60103:15:14","parameters":{"id":13334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13329,"mutability":"mutable","name":"left","nameLocation":"60127:4:14","nodeType":"VariableDeclaration","scope":13336,"src":"60119:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13328,"name":"uint256","nodeType":"ElementaryTypeName","src":"60119:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13331,"mutability":"mutable","name":"right","nameLocation":"60141:5:14","nodeType":"VariableDeclaration","scope":13336,"src":"60133:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13330,"name":"uint256","nodeType":"ElementaryTypeName","src":"60133:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13333,"mutability":"mutable","name":"decimals","nameLocation":"60156:8:14","nodeType":"VariableDeclaration","scope":13336,"src":"60148:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13332,"name":"uint256","nodeType":"ElementaryTypeName","src":"60148:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60118:47:14"},"returnParameters":{"id":13335,"nodeType":"ParameterList","parameters":[],"src":"60179:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13348,"nodeType":"FunctionDefinition","src":"60392:109:14","nodes":[],"documentation":{"id":13337,"nodeType":"StructuredDocumentation","src":"60186:201:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60401:15:14","parameters":{"id":13346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13339,"mutability":"mutable","name":"left","nameLocation":"60425:4:14","nodeType":"VariableDeclaration","scope":13348,"src":"60417:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13338,"name":"uint256","nodeType":"ElementaryTypeName","src":"60417:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13341,"mutability":"mutable","name":"right","nameLocation":"60439:5:14","nodeType":"VariableDeclaration","scope":13348,"src":"60431:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13340,"name":"uint256","nodeType":"ElementaryTypeName","src":"60431:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13343,"mutability":"mutable","name":"decimals","nameLocation":"60454:8:14","nodeType":"VariableDeclaration","scope":13348,"src":"60446:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13342,"name":"uint256","nodeType":"ElementaryTypeName","src":"60446:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13345,"mutability":"mutable","name":"error","nameLocation":"60480:5:14","nodeType":"VariableDeclaration","scope":13348,"src":"60464:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13344,"name":"string","nodeType":"ElementaryTypeName","src":"60464:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60416:70:14"},"returnParameters":{"id":13347,"nodeType":"ParameterList","parameters":[],"src":"60500:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13358,"nodeType":"FunctionDefinition","src":"60658:84:14","nodes":[],"documentation":{"id":13349,"nodeType":"StructuredDocumentation","src":"60507:146:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60667:15:14","parameters":{"id":13356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13351,"mutability":"mutable","name":"left","nameLocation":"60690:4:14","nodeType":"VariableDeclaration","scope":13358,"src":"60683:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13350,"name":"int256","nodeType":"ElementaryTypeName","src":"60683:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13353,"mutability":"mutable","name":"right","nameLocation":"60703:5:14","nodeType":"VariableDeclaration","scope":13358,"src":"60696:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13352,"name":"int256","nodeType":"ElementaryTypeName","src":"60696:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13355,"mutability":"mutable","name":"decimals","nameLocation":"60718:8:14","nodeType":"VariableDeclaration","scope":13358,"src":"60710:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13354,"name":"uint256","nodeType":"ElementaryTypeName","src":"60710:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60682:45:14"},"returnParameters":{"id":13357,"nodeType":"ParameterList","parameters":[],"src":"60741:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13370,"nodeType":"FunctionDefinition","src":"60953:107:14","nodes":[],"documentation":{"id":13359,"nodeType":"StructuredDocumentation","src":"60748:200:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60962:15:14","parameters":{"id":13368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13361,"mutability":"mutable","name":"left","nameLocation":"60985:4:14","nodeType":"VariableDeclaration","scope":13370,"src":"60978:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13360,"name":"int256","nodeType":"ElementaryTypeName","src":"60978:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13363,"mutability":"mutable","name":"right","nameLocation":"60998:5:14","nodeType":"VariableDeclaration","scope":13370,"src":"60991:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13362,"name":"int256","nodeType":"ElementaryTypeName","src":"60991:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13365,"mutability":"mutable","name":"decimals","nameLocation":"61013:8:14","nodeType":"VariableDeclaration","scope":13370,"src":"61005:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13364,"name":"uint256","nodeType":"ElementaryTypeName","src":"61005:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13367,"mutability":"mutable","name":"error","nameLocation":"61039:5:14","nodeType":"VariableDeclaration","scope":13370,"src":"61023:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13366,"name":"string","nodeType":"ElementaryTypeName","src":"61023:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60977:68:14"},"returnParameters":{"id":13369,"nodeType":"ParameterList","parameters":[],"src":"61059:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13378,"nodeType":"FunctionDefinition","src":"61161:61:14","nodes":[],"documentation":{"id":13371,"nodeType":"StructuredDocumentation","src":"61066:90:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61170:8:14","parameters":{"id":13376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13373,"mutability":"mutable","name":"left","nameLocation":"61187:4:14","nodeType":"VariableDeclaration","scope":13378,"src":"61179:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13372,"name":"uint256","nodeType":"ElementaryTypeName","src":"61179:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13375,"mutability":"mutable","name":"right","nameLocation":"61201:5:14","nodeType":"VariableDeclaration","scope":13378,"src":"61193:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13374,"name":"uint256","nodeType":"ElementaryTypeName","src":"61193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61178:29:14"},"returnParameters":{"id":13377,"nodeType":"ParameterList","parameters":[],"src":"61221:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13388,"nodeType":"FunctionDefinition","src":"61385:84:14","nodes":[],"documentation":{"id":13379,"nodeType":"StructuredDocumentation","src":"61228:152:14","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61394:8:14","parameters":{"id":13386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13381,"mutability":"mutable","name":"left","nameLocation":"61411:4:14","nodeType":"VariableDeclaration","scope":13388,"src":"61403:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13380,"name":"uint256","nodeType":"ElementaryTypeName","src":"61403:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13383,"mutability":"mutable","name":"right","nameLocation":"61425:5:14","nodeType":"VariableDeclaration","scope":13388,"src":"61417:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13382,"name":"uint256","nodeType":"ElementaryTypeName","src":"61417:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13385,"mutability":"mutable","name":"error","nameLocation":"61448:5:14","nodeType":"VariableDeclaration","scope":13388,"src":"61432:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13384,"name":"string","nodeType":"ElementaryTypeName","src":"61432:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61402:52:14"},"returnParameters":{"id":13387,"nodeType":"ParameterList","parameters":[],"src":"61468:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13396,"nodeType":"FunctionDefinition","src":"61569:59:14","nodes":[],"documentation":{"id":13389,"nodeType":"StructuredDocumentation","src":"61475:89:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61578:8:14","parameters":{"id":13394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13391,"mutability":"mutable","name":"left","nameLocation":"61594:4:14","nodeType":"VariableDeclaration","scope":13396,"src":"61587:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13390,"name":"int256","nodeType":"ElementaryTypeName","src":"61587:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13393,"mutability":"mutable","name":"right","nameLocation":"61607:5:14","nodeType":"VariableDeclaration","scope":13396,"src":"61600:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13392,"name":"int256","nodeType":"ElementaryTypeName","src":"61600:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"61586:27:14"},"returnParameters":{"id":13395,"nodeType":"ParameterList","parameters":[],"src":"61627:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13406,"nodeType":"FunctionDefinition","src":"61790:82:14","nodes":[],"documentation":{"id":13397,"nodeType":"StructuredDocumentation","src":"61634:151:14","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61799:8:14","parameters":{"id":13404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13399,"mutability":"mutable","name":"left","nameLocation":"61815:4:14","nodeType":"VariableDeclaration","scope":13406,"src":"61808:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13398,"name":"int256","nodeType":"ElementaryTypeName","src":"61808:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13401,"mutability":"mutable","name":"right","nameLocation":"61828:5:14","nodeType":"VariableDeclaration","scope":13406,"src":"61821:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13400,"name":"int256","nodeType":"ElementaryTypeName","src":"61821:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13403,"mutability":"mutable","name":"error","nameLocation":"61851:5:14","nodeType":"VariableDeclaration","scope":13406,"src":"61835:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13402,"name":"string","nodeType":"ElementaryTypeName","src":"61835:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61807:50:14"},"returnParameters":{"id":13405,"nodeType":"ParameterList","parameters":[],"src":"61871:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13416,"nodeType":"FunctionDefinition","src":"62018:86:14","nodes":[],"documentation":{"id":13407,"nodeType":"StructuredDocumentation","src":"61878:135:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62027:15:14","parameters":{"id":13414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13409,"mutability":"mutable","name":"left","nameLocation":"62051:4:14","nodeType":"VariableDeclaration","scope":13416,"src":"62043:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13408,"name":"uint256","nodeType":"ElementaryTypeName","src":"62043:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13411,"mutability":"mutable","name":"right","nameLocation":"62065:5:14","nodeType":"VariableDeclaration","scope":13416,"src":"62057:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13410,"name":"uint256","nodeType":"ElementaryTypeName","src":"62057:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13413,"mutability":"mutable","name":"decimals","nameLocation":"62080:8:14","nodeType":"VariableDeclaration","scope":13416,"src":"62072:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13412,"name":"uint256","nodeType":"ElementaryTypeName","src":"62072:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62042:47:14"},"returnParameters":{"id":13415,"nodeType":"ParameterList","parameters":[],"src":"62103:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13428,"nodeType":"FunctionDefinition","src":"62304:109:14","nodes":[],"documentation":{"id":13417,"nodeType":"StructuredDocumentation","src":"62110:189:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62313:15:14","parameters":{"id":13426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13419,"mutability":"mutable","name":"left","nameLocation":"62337:4:14","nodeType":"VariableDeclaration","scope":13428,"src":"62329:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13418,"name":"uint256","nodeType":"ElementaryTypeName","src":"62329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13421,"mutability":"mutable","name":"right","nameLocation":"62351:5:14","nodeType":"VariableDeclaration","scope":13428,"src":"62343:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13420,"name":"uint256","nodeType":"ElementaryTypeName","src":"62343:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13423,"mutability":"mutable","name":"decimals","nameLocation":"62366:8:14","nodeType":"VariableDeclaration","scope":13428,"src":"62358:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13422,"name":"uint256","nodeType":"ElementaryTypeName","src":"62358:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13425,"mutability":"mutable","name":"error","nameLocation":"62392:5:14","nodeType":"VariableDeclaration","scope":13428,"src":"62376:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13424,"name":"string","nodeType":"ElementaryTypeName","src":"62376:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62328:70:14"},"returnParameters":{"id":13427,"nodeType":"ParameterList","parameters":[],"src":"62412:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13438,"nodeType":"FunctionDefinition","src":"62558:84:14","nodes":[],"documentation":{"id":13429,"nodeType":"StructuredDocumentation","src":"62419:134:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62567:15:14","parameters":{"id":13436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13431,"mutability":"mutable","name":"left","nameLocation":"62590:4:14","nodeType":"VariableDeclaration","scope":13438,"src":"62583:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13430,"name":"int256","nodeType":"ElementaryTypeName","src":"62583:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13433,"mutability":"mutable","name":"right","nameLocation":"62603:5:14","nodeType":"VariableDeclaration","scope":13438,"src":"62596:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13432,"name":"int256","nodeType":"ElementaryTypeName","src":"62596:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13435,"mutability":"mutable","name":"decimals","nameLocation":"62618:8:14","nodeType":"VariableDeclaration","scope":13438,"src":"62610:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13434,"name":"uint256","nodeType":"ElementaryTypeName","src":"62610:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62582:45:14"},"returnParameters":{"id":13437,"nodeType":"ParameterList","parameters":[],"src":"62641:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13450,"nodeType":"FunctionDefinition","src":"62841:107:14","nodes":[],"documentation":{"id":13439,"nodeType":"StructuredDocumentation","src":"62648:188:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62850:15:14","parameters":{"id":13448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13441,"mutability":"mutable","name":"left","nameLocation":"62873:4:14","nodeType":"VariableDeclaration","scope":13450,"src":"62866:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13440,"name":"int256","nodeType":"ElementaryTypeName","src":"62866:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13443,"mutability":"mutable","name":"right","nameLocation":"62886:5:14","nodeType":"VariableDeclaration","scope":13450,"src":"62879:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13442,"name":"int256","nodeType":"ElementaryTypeName","src":"62879:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13445,"mutability":"mutable","name":"decimals","nameLocation":"62901:8:14","nodeType":"VariableDeclaration","scope":13450,"src":"62893:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13444,"name":"uint256","nodeType":"ElementaryTypeName","src":"62893:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13447,"mutability":"mutable","name":"error","nameLocation":"62927:5:14","nodeType":"VariableDeclaration","scope":13450,"src":"62911:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13446,"name":"string","nodeType":"ElementaryTypeName","src":"62911:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62865:68:14"},"returnParameters":{"id":13449,"nodeType":"ParameterList","parameters":[],"src":"62947:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13458,"nodeType":"FunctionDefinition","src":"63037:61:14","nodes":[],"documentation":{"id":13451,"nodeType":"StructuredDocumentation","src":"62954:78:14","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63046:8:14","parameters":{"id":13456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13453,"mutability":"mutable","name":"left","nameLocation":"63063:4:14","nodeType":"VariableDeclaration","scope":13458,"src":"63055:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13452,"name":"uint256","nodeType":"ElementaryTypeName","src":"63055:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13455,"mutability":"mutable","name":"right","nameLocation":"63077:5:14","nodeType":"VariableDeclaration","scope":13458,"src":"63069:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13454,"name":"uint256","nodeType":"ElementaryTypeName","src":"63069:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63054:29:14"},"returnParameters":{"id":13457,"nodeType":"ParameterList","parameters":[],"src":"63097:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13468,"nodeType":"FunctionDefinition","src":"63249:84:14","nodes":[],"documentation":{"id":13459,"nodeType":"StructuredDocumentation","src":"63104:140:14","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63258:8:14","parameters":{"id":13466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13461,"mutability":"mutable","name":"left","nameLocation":"63275:4:14","nodeType":"VariableDeclaration","scope":13468,"src":"63267:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13460,"name":"uint256","nodeType":"ElementaryTypeName","src":"63267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13463,"mutability":"mutable","name":"right","nameLocation":"63289:5:14","nodeType":"VariableDeclaration","scope":13468,"src":"63281:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13462,"name":"uint256","nodeType":"ElementaryTypeName","src":"63281:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13465,"mutability":"mutable","name":"error","nameLocation":"63312:5:14","nodeType":"VariableDeclaration","scope":13468,"src":"63296:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13464,"name":"string","nodeType":"ElementaryTypeName","src":"63296:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63266:52:14"},"returnParameters":{"id":13467,"nodeType":"ParameterList","parameters":[],"src":"63332:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13476,"nodeType":"FunctionDefinition","src":"63421:59:14","nodes":[],"documentation":{"id":13469,"nodeType":"StructuredDocumentation","src":"63339:77:14","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63430:8:14","parameters":{"id":13474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13471,"mutability":"mutable","name":"left","nameLocation":"63446:4:14","nodeType":"VariableDeclaration","scope":13476,"src":"63439:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13470,"name":"int256","nodeType":"ElementaryTypeName","src":"63439:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13473,"mutability":"mutable","name":"right","nameLocation":"63459:5:14","nodeType":"VariableDeclaration","scope":13476,"src":"63452:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13472,"name":"int256","nodeType":"ElementaryTypeName","src":"63452:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"63438:27:14"},"returnParameters":{"id":13475,"nodeType":"ParameterList","parameters":[],"src":"63479:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13486,"nodeType":"FunctionDefinition","src":"63630:82:14","nodes":[],"documentation":{"id":13477,"nodeType":"StructuredDocumentation","src":"63486:139:14","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63639:8:14","parameters":{"id":13484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13479,"mutability":"mutable","name":"left","nameLocation":"63655:4:14","nodeType":"VariableDeclaration","scope":13486,"src":"63648:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13478,"name":"int256","nodeType":"ElementaryTypeName","src":"63648:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13481,"mutability":"mutable","name":"right","nameLocation":"63668:5:14","nodeType":"VariableDeclaration","scope":13486,"src":"63661:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13480,"name":"int256","nodeType":"ElementaryTypeName","src":"63661:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13483,"mutability":"mutable","name":"error","nameLocation":"63691:5:14","nodeType":"VariableDeclaration","scope":13486,"src":"63675:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13482,"name":"string","nodeType":"ElementaryTypeName","src":"63675:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63647:50:14"},"returnParameters":{"id":13485,"nodeType":"ParameterList","parameters":[],"src":"63711:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13496,"nodeType":"FunctionDefinition","src":"63825:89:14","nodes":[],"documentation":{"id":13487,"nodeType":"StructuredDocumentation","src":"63718:102:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"63834:18:14","parameters":{"id":13494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13489,"mutability":"mutable","name":"left","nameLocation":"63861:4:14","nodeType":"VariableDeclaration","scope":13496,"src":"63853:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13488,"name":"uint256","nodeType":"ElementaryTypeName","src":"63853:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13491,"mutability":"mutable","name":"right","nameLocation":"63875:5:14","nodeType":"VariableDeclaration","scope":13496,"src":"63867:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13490,"name":"uint256","nodeType":"ElementaryTypeName","src":"63867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13493,"mutability":"mutable","name":"decimals","nameLocation":"63890:8:14","nodeType":"VariableDeclaration","scope":13496,"src":"63882:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13492,"name":"uint256","nodeType":"ElementaryTypeName","src":"63882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63852:47:14"},"returnParameters":{"id":13495,"nodeType":"ParameterList","parameters":[],"src":"63913:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13508,"nodeType":"FunctionDefinition","src":"64089:112:14","nodes":[],"documentation":{"id":13497,"nodeType":"StructuredDocumentation","src":"63920:164:14","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"64098:18:14","parameters":{"id":13506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13499,"mutability":"mutable","name":"left","nameLocation":"64125:4:14","nodeType":"VariableDeclaration","scope":13508,"src":"64117:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13498,"name":"uint256","nodeType":"ElementaryTypeName","src":"64117:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13501,"mutability":"mutable","name":"right","nameLocation":"64139:5:14","nodeType":"VariableDeclaration","scope":13508,"src":"64131:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13500,"name":"uint256","nodeType":"ElementaryTypeName","src":"64131:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13503,"mutability":"mutable","name":"decimals","nameLocation":"64154:8:14","nodeType":"VariableDeclaration","scope":13508,"src":"64146:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13502,"name":"uint256","nodeType":"ElementaryTypeName","src":"64146:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13505,"mutability":"mutable","name":"error","nameLocation":"64180:5:14","nodeType":"VariableDeclaration","scope":13508,"src":"64164:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13504,"name":"string","nodeType":"ElementaryTypeName","src":"64164:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64116:70:14"},"returnParameters":{"id":13507,"nodeType":"ParameterList","parameters":[],"src":"64200:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13518,"nodeType":"FunctionDefinition","src":"64313:87:14","nodes":[],"documentation":{"id":13509,"nodeType":"StructuredDocumentation","src":"64207:101:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"64322:18:14","parameters":{"id":13516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13511,"mutability":"mutable","name":"left","nameLocation":"64348:4:14","nodeType":"VariableDeclaration","scope":13518,"src":"64341:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13510,"name":"int256","nodeType":"ElementaryTypeName","src":"64341:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13513,"mutability":"mutable","name":"right","nameLocation":"64361:5:14","nodeType":"VariableDeclaration","scope":13518,"src":"64354:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13512,"name":"int256","nodeType":"ElementaryTypeName","src":"64354:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13515,"mutability":"mutable","name":"decimals","nameLocation":"64376:8:14","nodeType":"VariableDeclaration","scope":13518,"src":"64368:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13514,"name":"uint256","nodeType":"ElementaryTypeName","src":"64368:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64340:45:14"},"returnParameters":{"id":13517,"nodeType":"ParameterList","parameters":[],"src":"64399:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13530,"nodeType":"FunctionDefinition","src":"64574:110:14","nodes":[],"documentation":{"id":13519,"nodeType":"StructuredDocumentation","src":"64406:163:14","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"64583:18:14","parameters":{"id":13528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13521,"mutability":"mutable","name":"left","nameLocation":"64609:4:14","nodeType":"VariableDeclaration","scope":13530,"src":"64602:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13520,"name":"int256","nodeType":"ElementaryTypeName","src":"64602:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13523,"mutability":"mutable","name":"right","nameLocation":"64622:5:14","nodeType":"VariableDeclaration","scope":13530,"src":"64615:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13522,"name":"int256","nodeType":"ElementaryTypeName","src":"64615:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13525,"mutability":"mutable","name":"decimals","nameLocation":"64637:8:14","nodeType":"VariableDeclaration","scope":13530,"src":"64629:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13524,"name":"uint256","nodeType":"ElementaryTypeName","src":"64629:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13527,"mutability":"mutable","name":"error","nameLocation":"64663:5:14","nodeType":"VariableDeclaration","scope":13530,"src":"64647:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13526,"name":"string","nodeType":"ElementaryTypeName","src":"64647:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64601:68:14"},"returnParameters":{"id":13529,"nodeType":"ParameterList","parameters":[],"src":"64683:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13538,"nodeType":"FunctionDefinition","src":"64744:58:14","nodes":[],"documentation":{"id":13531,"nodeType":"StructuredDocumentation","src":"64690:49:14","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64753:11:14","parameters":{"id":13536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13533,"mutability":"mutable","name":"left","nameLocation":"64770:4:14","nodeType":"VariableDeclaration","scope":13538,"src":"64765:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13532,"name":"bool","nodeType":"ElementaryTypeName","src":"64765:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13535,"mutability":"mutable","name":"right","nameLocation":"64781:5:14","nodeType":"VariableDeclaration","scope":13538,"src":"64776:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13534,"name":"bool","nodeType":"ElementaryTypeName","src":"64776:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"64764:23:14"},"returnParameters":{"id":13537,"nodeType":"ParameterList","parameters":[],"src":"64801:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13548,"nodeType":"FunctionDefinition","src":"64919:81:14","nodes":[],"documentation":{"id":13539,"nodeType":"StructuredDocumentation","src":"64808:106:14","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64928:11:14","parameters":{"id":13546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13541,"mutability":"mutable","name":"left","nameLocation":"64945:4:14","nodeType":"VariableDeclaration","scope":13548,"src":"64940:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13540,"name":"bool","nodeType":"ElementaryTypeName","src":"64940:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13543,"mutability":"mutable","name":"right","nameLocation":"64956:5:14","nodeType":"VariableDeclaration","scope":13548,"src":"64951:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13542,"name":"bool","nodeType":"ElementaryTypeName","src":"64951:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13545,"mutability":"mutable","name":"error","nameLocation":"64979:5:14","nodeType":"VariableDeclaration","scope":13548,"src":"64963:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13544,"name":"string","nodeType":"ElementaryTypeName","src":"64963:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64939:46:14"},"returnParameters":{"id":13547,"nodeType":"ParameterList","parameters":[],"src":"64999:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13556,"nodeType":"FunctionDefinition","src":"65062:80:14","nodes":[],"documentation":{"id":13549,"nodeType":"StructuredDocumentation","src":"65006:51:14","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65071:11:14","parameters":{"id":13554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13551,"mutability":"mutable","name":"left","nameLocation":"65099:4:14","nodeType":"VariableDeclaration","scope":13556,"src":"65083:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13550,"name":"string","nodeType":"ElementaryTypeName","src":"65083:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13553,"mutability":"mutable","name":"right","nameLocation":"65121:5:14","nodeType":"VariableDeclaration","scope":13556,"src":"65105:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13552,"name":"string","nodeType":"ElementaryTypeName","src":"65105:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65082:45:14"},"returnParameters":{"id":13555,"nodeType":"ParameterList","parameters":[],"src":"65141:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13566,"nodeType":"FunctionDefinition","src":"65261:103:14","nodes":[],"documentation":{"id":13557,"nodeType":"StructuredDocumentation","src":"65148:108:14","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65270:11:14","parameters":{"id":13564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13559,"mutability":"mutable","name":"left","nameLocation":"65298:4:14","nodeType":"VariableDeclaration","scope":13566,"src":"65282:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13558,"name":"string","nodeType":"ElementaryTypeName","src":"65282:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13561,"mutability":"mutable","name":"right","nameLocation":"65320:5:14","nodeType":"VariableDeclaration","scope":13566,"src":"65304:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13560,"name":"string","nodeType":"ElementaryTypeName","src":"65304:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13563,"mutability":"mutable","name":"error","nameLocation":"65343:5:14","nodeType":"VariableDeclaration","scope":13566,"src":"65327:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13562,"name":"string","nodeType":"ElementaryTypeName","src":"65327:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65281:68:14"},"returnParameters":{"id":13565,"nodeType":"ParameterList","parameters":[],"src":"65363:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13574,"nodeType":"FunctionDefinition","src":"65425:78:14","nodes":[],"documentation":{"id":13567,"nodeType":"StructuredDocumentation","src":"65370:50:14","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65434:11:14","parameters":{"id":13572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13569,"mutability":"mutable","name":"left","nameLocation":"65461:4:14","nodeType":"VariableDeclaration","scope":13574,"src":"65446:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13568,"name":"bytes","nodeType":"ElementaryTypeName","src":"65446:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13571,"mutability":"mutable","name":"right","nameLocation":"65482:5:14","nodeType":"VariableDeclaration","scope":13574,"src":"65467:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13570,"name":"bytes","nodeType":"ElementaryTypeName","src":"65467:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"65445:43:14"},"returnParameters":{"id":13573,"nodeType":"ParameterList","parameters":[],"src":"65502:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13584,"nodeType":"FunctionDefinition","src":"65621:101:14","nodes":[],"documentation":{"id":13575,"nodeType":"StructuredDocumentation","src":"65509:107:14","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65630:11:14","parameters":{"id":13582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13577,"mutability":"mutable","name":"left","nameLocation":"65657:4:14","nodeType":"VariableDeclaration","scope":13584,"src":"65642:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13576,"name":"bytes","nodeType":"ElementaryTypeName","src":"65642:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13579,"mutability":"mutable","name":"right","nameLocation":"65678:5:14","nodeType":"VariableDeclaration","scope":13584,"src":"65663:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13578,"name":"bytes","nodeType":"ElementaryTypeName","src":"65663:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13581,"mutability":"mutable","name":"error","nameLocation":"65701:5:14","nodeType":"VariableDeclaration","scope":13584,"src":"65685:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13580,"name":"string","nodeType":"ElementaryTypeName","src":"65685:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65641:66:14"},"returnParameters":{"id":13583,"nodeType":"ParameterList","parameters":[],"src":"65721:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13594,"nodeType":"FunctionDefinition","src":"65792:80:14","nodes":[],"documentation":{"id":13585,"nodeType":"StructuredDocumentation","src":"65728:59:14","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65801:11:14","parameters":{"id":13592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13588,"mutability":"mutable","name":"left","nameLocation":"65829:4:14","nodeType":"VariableDeclaration","scope":13594,"src":"65813:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13586,"name":"bool","nodeType":"ElementaryTypeName","src":"65813:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13587,"nodeType":"ArrayTypeName","src":"65813:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13591,"mutability":"mutable","name":"right","nameLocation":"65851:5:14","nodeType":"VariableDeclaration","scope":13594,"src":"65835:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13589,"name":"bool","nodeType":"ElementaryTypeName","src":"65835:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13590,"nodeType":"ArrayTypeName","src":"65835:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"65812:45:14"},"returnParameters":{"id":13593,"nodeType":"ParameterList","parameters":[],"src":"65871:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13606,"nodeType":"FunctionDefinition","src":"65999:103:14","nodes":[],"documentation":{"id":13595,"nodeType":"StructuredDocumentation","src":"65878:116:14","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66008:11:14","parameters":{"id":13604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13598,"mutability":"mutable","name":"left","nameLocation":"66036:4:14","nodeType":"VariableDeclaration","scope":13606,"src":"66020:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13596,"name":"bool","nodeType":"ElementaryTypeName","src":"66020:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13597,"nodeType":"ArrayTypeName","src":"66020:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13601,"mutability":"mutable","name":"right","nameLocation":"66058:5:14","nodeType":"VariableDeclaration","scope":13606,"src":"66042:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13599,"name":"bool","nodeType":"ElementaryTypeName","src":"66042:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13600,"nodeType":"ArrayTypeName","src":"66042:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13603,"mutability":"mutable","name":"error","nameLocation":"66081:5:14","nodeType":"VariableDeclaration","scope":13606,"src":"66065:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13602,"name":"string","nodeType":"ElementaryTypeName","src":"66065:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66019:68:14"},"returnParameters":{"id":13605,"nodeType":"ParameterList","parameters":[],"src":"66101:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13616,"nodeType":"FunctionDefinition","src":"66175:86:14","nodes":[],"documentation":{"id":13607,"nodeType":"StructuredDocumentation","src":"66108:62:14","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66184:11:14","parameters":{"id":13614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13610,"mutability":"mutable","name":"left","nameLocation":"66215:4:14","nodeType":"VariableDeclaration","scope":13616,"src":"66196:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13608,"name":"uint256","nodeType":"ElementaryTypeName","src":"66196:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13609,"nodeType":"ArrayTypeName","src":"66196:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13613,"mutability":"mutable","name":"right","nameLocation":"66240:5:14","nodeType":"VariableDeclaration","scope":13616,"src":"66221:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13611,"name":"uint256","nodeType":"ElementaryTypeName","src":"66221:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13612,"nodeType":"ArrayTypeName","src":"66221:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"66195:51:14"},"returnParameters":{"id":13615,"nodeType":"ParameterList","parameters":[],"src":"66260:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13628,"nodeType":"FunctionDefinition","src":"66391:109:14","nodes":[],"documentation":{"id":13617,"nodeType":"StructuredDocumentation","src":"66267:119:14","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66400:11:14","parameters":{"id":13626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13620,"mutability":"mutable","name":"left","nameLocation":"66431:4:14","nodeType":"VariableDeclaration","scope":13628,"src":"66412:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13618,"name":"uint256","nodeType":"ElementaryTypeName","src":"66412:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13619,"nodeType":"ArrayTypeName","src":"66412:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13623,"mutability":"mutable","name":"right","nameLocation":"66456:5:14","nodeType":"VariableDeclaration","scope":13628,"src":"66437:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13621,"name":"uint256","nodeType":"ElementaryTypeName","src":"66437:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13622,"nodeType":"ArrayTypeName","src":"66437:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13625,"mutability":"mutable","name":"error","nameLocation":"66479:5:14","nodeType":"VariableDeclaration","scope":13628,"src":"66463:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13624,"name":"string","nodeType":"ElementaryTypeName","src":"66463:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66411:74:14"},"returnParameters":{"id":13627,"nodeType":"ParameterList","parameters":[],"src":"66499:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13638,"nodeType":"FunctionDefinition","src":"66572:84:14","nodes":[],"documentation":{"id":13629,"nodeType":"StructuredDocumentation","src":"66506:61:14","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66581:11:14","parameters":{"id":13636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13632,"mutability":"mutable","name":"left","nameLocation":"66611:4:14","nodeType":"VariableDeclaration","scope":13638,"src":"66593:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13630,"name":"int256","nodeType":"ElementaryTypeName","src":"66593:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13631,"nodeType":"ArrayTypeName","src":"66593:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13635,"mutability":"mutable","name":"right","nameLocation":"66635:5:14","nodeType":"VariableDeclaration","scope":13638,"src":"66617:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13633,"name":"int256","nodeType":"ElementaryTypeName","src":"66617:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13634,"nodeType":"ArrayTypeName","src":"66617:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"66592:49:14"},"returnParameters":{"id":13637,"nodeType":"ParameterList","parameters":[],"src":"66655:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13650,"nodeType":"FunctionDefinition","src":"66785:107:14","nodes":[],"documentation":{"id":13639,"nodeType":"StructuredDocumentation","src":"66662:118:14","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66794:11:14","parameters":{"id":13648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13642,"mutability":"mutable","name":"left","nameLocation":"66824:4:14","nodeType":"VariableDeclaration","scope":13650,"src":"66806:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13640,"name":"int256","nodeType":"ElementaryTypeName","src":"66806:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13641,"nodeType":"ArrayTypeName","src":"66806:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13645,"mutability":"mutable","name":"right","nameLocation":"66848:5:14","nodeType":"VariableDeclaration","scope":13650,"src":"66830:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13643,"name":"int256","nodeType":"ElementaryTypeName","src":"66830:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13644,"nodeType":"ArrayTypeName","src":"66830:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13647,"mutability":"mutable","name":"error","nameLocation":"66871:5:14","nodeType":"VariableDeclaration","scope":13650,"src":"66855:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13646,"name":"string","nodeType":"ElementaryTypeName","src":"66855:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66805:72:14"},"returnParameters":{"id":13649,"nodeType":"ParameterList","parameters":[],"src":"66891:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13658,"nodeType":"FunctionDefinition","src":"66955:64:14","nodes":[],"documentation":{"id":13651,"nodeType":"StructuredDocumentation","src":"66898:52:14","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66964:11:14","parameters":{"id":13656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13653,"mutability":"mutable","name":"left","nameLocation":"66984:4:14","nodeType":"VariableDeclaration","scope":13658,"src":"66976:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13652,"name":"uint256","nodeType":"ElementaryTypeName","src":"66976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13655,"mutability":"mutable","name":"right","nameLocation":"66998:5:14","nodeType":"VariableDeclaration","scope":13658,"src":"66990:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13654,"name":"uint256","nodeType":"ElementaryTypeName","src":"66990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66975:29:14"},"returnParameters":{"id":13657,"nodeType":"ParameterList","parameters":[],"src":"67018:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13668,"nodeType":"FunctionDefinition","src":"67092:86:14","nodes":[],"documentation":{"id":13659,"nodeType":"StructuredDocumentation","src":"67025:62:14","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67101:11:14","parameters":{"id":13666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13662,"mutability":"mutable","name":"left","nameLocation":"67132:4:14","nodeType":"VariableDeclaration","scope":13668,"src":"67113:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13660,"name":"address","nodeType":"ElementaryTypeName","src":"67113:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13661,"nodeType":"ArrayTypeName","src":"67113:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13665,"mutability":"mutable","name":"right","nameLocation":"67157:5:14","nodeType":"VariableDeclaration","scope":13668,"src":"67138:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13663,"name":"address","nodeType":"ElementaryTypeName","src":"67138:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13664,"nodeType":"ArrayTypeName","src":"67138:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"67112:51:14"},"returnParameters":{"id":13667,"nodeType":"ParameterList","parameters":[],"src":"67177:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13680,"nodeType":"FunctionDefinition","src":"67308:109:14","nodes":[],"documentation":{"id":13669,"nodeType":"StructuredDocumentation","src":"67184:119:14","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67317:11:14","parameters":{"id":13678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13672,"mutability":"mutable","name":"left","nameLocation":"67348:4:14","nodeType":"VariableDeclaration","scope":13680,"src":"67329:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13670,"name":"address","nodeType":"ElementaryTypeName","src":"67329:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13671,"nodeType":"ArrayTypeName","src":"67329:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13675,"mutability":"mutable","name":"right","nameLocation":"67373:5:14","nodeType":"VariableDeclaration","scope":13680,"src":"67354:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13673,"name":"address","nodeType":"ElementaryTypeName","src":"67354:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13674,"nodeType":"ArrayTypeName","src":"67354:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13677,"mutability":"mutable","name":"error","nameLocation":"67396:5:14","nodeType":"VariableDeclaration","scope":13680,"src":"67380:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13676,"name":"string","nodeType":"ElementaryTypeName","src":"67380:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67328:74:14"},"returnParameters":{"id":13679,"nodeType":"ParameterList","parameters":[],"src":"67416:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13690,"nodeType":"FunctionDefinition","src":"67490:86:14","nodes":[],"documentation":{"id":13681,"nodeType":"StructuredDocumentation","src":"67423:62:14","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67499:11:14","parameters":{"id":13688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13684,"mutability":"mutable","name":"left","nameLocation":"67530:4:14","nodeType":"VariableDeclaration","scope":13690,"src":"67511:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67511:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13683,"nodeType":"ArrayTypeName","src":"67511:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13687,"mutability":"mutable","name":"right","nameLocation":"67555:5:14","nodeType":"VariableDeclaration","scope":13690,"src":"67536:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67536:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13686,"nodeType":"ArrayTypeName","src":"67536:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"67510:51:14"},"returnParameters":{"id":13689,"nodeType":"ParameterList","parameters":[],"src":"67575:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13702,"nodeType":"FunctionDefinition","src":"67706:109:14","nodes":[],"documentation":{"id":13691,"nodeType":"StructuredDocumentation","src":"67582:119:14","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67715:11:14","parameters":{"id":13700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13694,"mutability":"mutable","name":"left","nameLocation":"67746:4:14","nodeType":"VariableDeclaration","scope":13702,"src":"67727:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67727:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13693,"nodeType":"ArrayTypeName","src":"67727:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13697,"mutability":"mutable","name":"right","nameLocation":"67771:5:14","nodeType":"VariableDeclaration","scope":13702,"src":"67752:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67752:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13696,"nodeType":"ArrayTypeName","src":"67752:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13699,"mutability":"mutable","name":"error","nameLocation":"67794:5:14","nodeType":"VariableDeclaration","scope":13702,"src":"67778:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13698,"name":"string","nodeType":"ElementaryTypeName","src":"67778:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67726:74:14"},"returnParameters":{"id":13701,"nodeType":"ParameterList","parameters":[],"src":"67814:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13712,"nodeType":"FunctionDefinition","src":"67887:84:14","nodes":[],"documentation":{"id":13703,"nodeType":"StructuredDocumentation","src":"67821:61:14","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67896:11:14","parameters":{"id":13710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13706,"mutability":"mutable","name":"left","nameLocation":"67926:4:14","nodeType":"VariableDeclaration","scope":13712,"src":"67908:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13704,"name":"string","nodeType":"ElementaryTypeName","src":"67908:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13705,"nodeType":"ArrayTypeName","src":"67908:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13709,"mutability":"mutable","name":"right","nameLocation":"67950:5:14","nodeType":"VariableDeclaration","scope":13712,"src":"67932:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13707,"name":"string","nodeType":"ElementaryTypeName","src":"67932:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13708,"nodeType":"ArrayTypeName","src":"67932:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"67907:49:14"},"returnParameters":{"id":13711,"nodeType":"ParameterList","parameters":[],"src":"67970:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13724,"nodeType":"FunctionDefinition","src":"68100:107:14","nodes":[],"documentation":{"id":13713,"nodeType":"StructuredDocumentation","src":"67977:118:14","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68109:11:14","parameters":{"id":13722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13716,"mutability":"mutable","name":"left","nameLocation":"68139:4:14","nodeType":"VariableDeclaration","scope":13724,"src":"68121:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13714,"name":"string","nodeType":"ElementaryTypeName","src":"68121:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13715,"nodeType":"ArrayTypeName","src":"68121:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13719,"mutability":"mutable","name":"right","nameLocation":"68163:5:14","nodeType":"VariableDeclaration","scope":13724,"src":"68145:23:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13717,"name":"string","nodeType":"ElementaryTypeName","src":"68145:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13718,"nodeType":"ArrayTypeName","src":"68145:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13721,"mutability":"mutable","name":"error","nameLocation":"68186:5:14","nodeType":"VariableDeclaration","scope":13724,"src":"68170:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13720,"name":"string","nodeType":"ElementaryTypeName","src":"68170:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68120:72:14"},"returnParameters":{"id":13723,"nodeType":"ParameterList","parameters":[],"src":"68206:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13734,"nodeType":"FunctionDefinition","src":"68278:82:14","nodes":[],"documentation":{"id":13725,"nodeType":"StructuredDocumentation","src":"68213:60:14","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68287:11:14","parameters":{"id":13732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13728,"mutability":"mutable","name":"left","nameLocation":"68316:4:14","nodeType":"VariableDeclaration","scope":13734,"src":"68299:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13726,"name":"bytes","nodeType":"ElementaryTypeName","src":"68299:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13727,"nodeType":"ArrayTypeName","src":"68299:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":13731,"mutability":"mutable","name":"right","nameLocation":"68339:5:14","nodeType":"VariableDeclaration","scope":13734,"src":"68322:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13729,"name":"bytes","nodeType":"ElementaryTypeName","src":"68322:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13730,"nodeType":"ArrayTypeName","src":"68322:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"68298:47:14"},"returnParameters":{"id":13733,"nodeType":"ParameterList","parameters":[],"src":"68359:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13746,"nodeType":"FunctionDefinition","src":"68488:105:14","nodes":[],"documentation":{"id":13735,"nodeType":"StructuredDocumentation","src":"68366:117:14","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68497:11:14","parameters":{"id":13744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13738,"mutability":"mutable","name":"left","nameLocation":"68526:4:14","nodeType":"VariableDeclaration","scope":13746,"src":"68509:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13736,"name":"bytes","nodeType":"ElementaryTypeName","src":"68509:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13737,"nodeType":"ArrayTypeName","src":"68509:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":13741,"mutability":"mutable","name":"right","nameLocation":"68549:5:14","nodeType":"VariableDeclaration","scope":13746,"src":"68532:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13739,"name":"bytes","nodeType":"ElementaryTypeName","src":"68532:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13740,"nodeType":"ArrayTypeName","src":"68532:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":13743,"mutability":"mutable","name":"error","nameLocation":"68572:5:14","nodeType":"VariableDeclaration","scope":13746,"src":"68556:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13742,"name":"string","nodeType":"ElementaryTypeName","src":"68556:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68508:70:14"},"returnParameters":{"id":13745,"nodeType":"ParameterList","parameters":[],"src":"68592:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13756,"nodeType":"FunctionDefinition","src":"68713:87:14","nodes":[],"documentation":{"id":13747,"nodeType":"StructuredDocumentation","src":"68599:109:14","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68722:11:14","parameters":{"id":13754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13749,"mutability":"mutable","name":"left","nameLocation":"68742:4:14","nodeType":"VariableDeclaration","scope":13756,"src":"68734:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13748,"name":"uint256","nodeType":"ElementaryTypeName","src":"68734:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13751,"mutability":"mutable","name":"right","nameLocation":"68756:5:14","nodeType":"VariableDeclaration","scope":13756,"src":"68748:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13750,"name":"uint256","nodeType":"ElementaryTypeName","src":"68748:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13753,"mutability":"mutable","name":"error","nameLocation":"68779:5:14","nodeType":"VariableDeclaration","scope":13756,"src":"68763:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13752,"name":"string","nodeType":"ElementaryTypeName","src":"68763:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68733:52:14"},"returnParameters":{"id":13755,"nodeType":"ParameterList","parameters":[],"src":"68799:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13764,"nodeType":"FunctionDefinition","src":"68862:62:14","nodes":[],"documentation":{"id":13757,"nodeType":"StructuredDocumentation","src":"68806:51:14","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68871:11:14","parameters":{"id":13762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13759,"mutability":"mutable","name":"left","nameLocation":"68890:4:14","nodeType":"VariableDeclaration","scope":13764,"src":"68883:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13758,"name":"int256","nodeType":"ElementaryTypeName","src":"68883:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13761,"mutability":"mutable","name":"right","nameLocation":"68903:5:14","nodeType":"VariableDeclaration","scope":13764,"src":"68896:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13760,"name":"int256","nodeType":"ElementaryTypeName","src":"68896:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"68882:27:14"},"returnParameters":{"id":13763,"nodeType":"ParameterList","parameters":[],"src":"68923:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13774,"nodeType":"FunctionDefinition","src":"69043:85:14","nodes":[],"documentation":{"id":13765,"nodeType":"StructuredDocumentation","src":"68930:108:14","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69052:11:14","parameters":{"id":13772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13767,"mutability":"mutable","name":"left","nameLocation":"69071:4:14","nodeType":"VariableDeclaration","scope":13774,"src":"69064:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13766,"name":"int256","nodeType":"ElementaryTypeName","src":"69064:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13769,"mutability":"mutable","name":"right","nameLocation":"69084:5:14","nodeType":"VariableDeclaration","scope":13774,"src":"69077:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13768,"name":"int256","nodeType":"ElementaryTypeName","src":"69077:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13771,"mutability":"mutable","name":"error","nameLocation":"69107:5:14","nodeType":"VariableDeclaration","scope":13774,"src":"69091:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13770,"name":"string","nodeType":"ElementaryTypeName","src":"69091:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69063:50:14"},"returnParameters":{"id":13773,"nodeType":"ParameterList","parameters":[],"src":"69127:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13782,"nodeType":"FunctionDefinition","src":"69191:64:14","nodes":[],"documentation":{"id":13775,"nodeType":"StructuredDocumentation","src":"69134:52:14","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69200:11:14","parameters":{"id":13780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13777,"mutability":"mutable","name":"left","nameLocation":"69220:4:14","nodeType":"VariableDeclaration","scope":13782,"src":"69212:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13776,"name":"address","nodeType":"ElementaryTypeName","src":"69212:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13779,"mutability":"mutable","name":"right","nameLocation":"69234:5:14","nodeType":"VariableDeclaration","scope":13782,"src":"69226:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13778,"name":"address","nodeType":"ElementaryTypeName","src":"69226:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"69211:29:14"},"returnParameters":{"id":13781,"nodeType":"ParameterList","parameters":[],"src":"69254:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13792,"nodeType":"FunctionDefinition","src":"69375:87:14","nodes":[],"documentation":{"id":13783,"nodeType":"StructuredDocumentation","src":"69261:109:14","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69384:11:14","parameters":{"id":13790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13785,"mutability":"mutable","name":"left","nameLocation":"69404:4:14","nodeType":"VariableDeclaration","scope":13792,"src":"69396:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13784,"name":"address","nodeType":"ElementaryTypeName","src":"69396:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13787,"mutability":"mutable","name":"right","nameLocation":"69418:5:14","nodeType":"VariableDeclaration","scope":13792,"src":"69410:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13786,"name":"address","nodeType":"ElementaryTypeName","src":"69410:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13789,"mutability":"mutable","name":"error","nameLocation":"69441:5:14","nodeType":"VariableDeclaration","scope":13792,"src":"69425:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13788,"name":"string","nodeType":"ElementaryTypeName","src":"69425:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69395:52:14"},"returnParameters":{"id":13791,"nodeType":"ParameterList","parameters":[],"src":"69461:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13800,"nodeType":"FunctionDefinition","src":"69525:64:14","nodes":[],"documentation":{"id":13793,"nodeType":"StructuredDocumentation","src":"69468:52:14","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69534:11:14","parameters":{"id":13798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13795,"mutability":"mutable","name":"left","nameLocation":"69554:4:14","nodeType":"VariableDeclaration","scope":13800,"src":"69546:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69546:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13797,"mutability":"mutable","name":"right","nameLocation":"69568:5:14","nodeType":"VariableDeclaration","scope":13800,"src":"69560:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69560:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"69545:29:14"},"returnParameters":{"id":13799,"nodeType":"ParameterList","parameters":[],"src":"69588:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13810,"nodeType":"FunctionDefinition","src":"69709:87:14","nodes":[],"documentation":{"id":13801,"nodeType":"StructuredDocumentation","src":"69595:109:14","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69718:11:14","parameters":{"id":13808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13803,"mutability":"mutable","name":"left","nameLocation":"69738:4:14","nodeType":"VariableDeclaration","scope":13810,"src":"69730:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69730:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13805,"mutability":"mutable","name":"right","nameLocation":"69752:5:14","nodeType":"VariableDeclaration","scope":13810,"src":"69744:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69744:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13807,"mutability":"mutable","name":"error","nameLocation":"69775:5:14","nodeType":"VariableDeclaration","scope":13810,"src":"69759:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13806,"name":"string","nodeType":"ElementaryTypeName","src":"69759:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69729:52:14"},"returnParameters":{"id":13809,"nodeType":"ParameterList","parameters":[],"src":"69795:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13816,"nodeType":"FunctionDefinition","src":"69852:50:14","nodes":[],"documentation":{"id":13811,"nodeType":"StructuredDocumentation","src":"69802:45:14","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"69861:10:14","parameters":{"id":13814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13813,"mutability":"mutable","name":"condition","nameLocation":"69877:9:14","nodeType":"VariableDeclaration","scope":13816,"src":"69872:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13812,"name":"bool","nodeType":"ElementaryTypeName","src":"69872:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69871:16:14"},"returnParameters":{"id":13815,"nodeType":"ParameterList","parameters":[],"src":"69901:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13824,"nodeType":"FunctionDefinition","src":"70015:73:14","nodes":[],"documentation":{"id":13817,"nodeType":"StructuredDocumentation","src":"69908:102:14","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"70024:10:14","parameters":{"id":13822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13819,"mutability":"mutable","name":"condition","nameLocation":"70040:9:14","nodeType":"VariableDeclaration","scope":13824,"src":"70035:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13818,"name":"bool","nodeType":"ElementaryTypeName","src":"70035:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13821,"mutability":"mutable","name":"error","nameLocation":"70067:5:14","nodeType":"VariableDeclaration","scope":13824,"src":"70051:21:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13820,"name":"string","nodeType":"ElementaryTypeName","src":"70051:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70034:39:14"},"returnParameters":{"id":13823,"nodeType":"ParameterList","parameters":[],"src":"70087:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13830,"nodeType":"FunctionDefinition","src":"70183:46:14","nodes":[],"documentation":{"id":13825,"nodeType":"StructuredDocumentation","src":"70094:84:14","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"70192:6:14","parameters":{"id":13828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13827,"mutability":"mutable","name":"condition","nameLocation":"70204:9:14","nodeType":"VariableDeclaration","scope":13830,"src":"70199:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13826,"name":"bool","nodeType":"ElementaryTypeName","src":"70199:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"70198:16:14"},"returnParameters":{"id":13829,"nodeType":"ParameterList","parameters":[],"src":"70228:0:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13836,"nodeType":"FunctionDefinition","src":"70291:51:14","nodes":[],"documentation":{"id":13831,"nodeType":"StructuredDocumentation","src":"70235:51:14","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"70300:10:14","parameters":{"id":13834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13833,"mutability":"mutable","name":"char","nameLocation":"70327:4:14","nodeType":"VariableDeclaration","scope":13836,"src":"70311:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13832,"name":"string","nodeType":"ElementaryTypeName","src":"70311:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70310:22:14"},"returnParameters":{"id":13835,"nodeType":"ParameterList","parameters":[],"src":"70341:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13844,"nodeType":"FunctionDefinition","src":"70416:63:14","nodes":[],"documentation":{"id":13837,"nodeType":"StructuredDocumentation","src":"70348:63:14","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"70425:10:14","parameters":{"id":13842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13839,"mutability":"mutable","name":"char","nameLocation":"70452:4:14","nodeType":"VariableDeclaration","scope":13844,"src":"70436:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13838,"name":"string","nodeType":"ElementaryTypeName","src":"70436:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13841,"mutability":"mutable","name":"value","nameLocation":"70463:5:14","nodeType":"VariableDeclaration","scope":13844,"src":"70458:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13840,"name":"bool","nodeType":"ElementaryTypeName","src":"70458:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"70435:34:14"},"returnParameters":{"id":13843,"nodeType":"ParameterList","parameters":[],"src":"70478:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13852,"nodeType":"FunctionDefinition","src":"70534:85:14","nodes":[],"documentation":{"id":13845,"nodeType":"StructuredDocumentation","src":"70485:44:14","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"70543:6:14","parameters":{"id":13848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13847,"mutability":"mutable","name":"rpcAlias","nameLocation":"70566:8:14","nodeType":"VariableDeclaration","scope":13852,"src":"70550:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13846,"name":"string","nodeType":"ElementaryTypeName","src":"70550:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70549:26:14"},"returnParameters":{"id":13851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13850,"mutability":"mutable","name":"json","nameLocation":"70613:4:14","nodeType":"VariableDeclaration","scope":13852,"src":"70599:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13849,"name":"string","nodeType":"ElementaryTypeName","src":"70599:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70598:20:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13860,"nodeType":"FunctionDefinition","src":"70684:67:14","nodes":[],"documentation":{"id":13853,"nodeType":"StructuredDocumentation","src":"70625:54:14","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"70693:13:14","parameters":{"id":13854,"nodeType":"ParameterList","parameters":[],"src":"70706:2:14"},"returnParameters":{"id":13859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13858,"mutability":"mutable","name":"urls","nameLocation":"70745:4:14","nodeType":"VariableDeclaration","scope":13860,"src":"70732:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$11019_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":13856,"nodeType":"UserDefinedTypeName","pathNode":{"id":13855,"name":"Rpc","nameLocations":["70732:3:14"],"nodeType":"IdentifierPath","referencedDeclaration":11019,"src":"70732:3:14"},"referencedDeclaration":11019,"src":"70732:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$11019_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":13857,"nodeType":"ArrayTypeName","src":"70732:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$11019_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"70731:19:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13869,"nodeType":"FunctionDefinition","src":"70822:67:14","nodes":[],"documentation":{"id":13861,"nodeType":"StructuredDocumentation","src":"70757:60:14","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"70831:7:14","parameters":{"id":13862,"nodeType":"ParameterList","parameters":[],"src":"70838:2:14"},"returnParameters":{"id":13868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13867,"mutability":"mutable","name":"urls","nameLocation":"70883:4:14","nodeType":"VariableDeclaration","scope":13869,"src":"70864:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":13863,"name":"string","nodeType":"ElementaryTypeName","src":"70864:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13865,"length":{"hexValue":"32","id":13864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"70871:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"70864:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":13866,"nodeType":"ArrayTypeName","src":"70864:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"70863:25:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13875,"nodeType":"FunctionDefinition","src":"70970:42:14","nodes":[],"documentation":{"id":13870,"nodeType":"StructuredDocumentation","src":"70895:70:14","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"70979:5:14","parameters":{"id":13873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13872,"mutability":"mutable","name":"duration","nameLocation":"70993:8:14","nodeType":"VariableDeclaration","scope":13875,"src":"70985:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13871,"name":"uint256","nodeType":"ElementaryTypeName","src":"70985:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70984:18:14"},"returnParameters":{"id":13874,"nodeType":"ParameterList","parameters":[],"src":"71011:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13885,"nodeType":"FunctionDefinition","src":"71097:95:14","nodes":[],"documentation":{"id":13876,"nodeType":"StructuredDocumentation","src":"71049:43:14","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"71106:13:14","parameters":{"id":13881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13878,"mutability":"mutable","name":"toml","nameLocation":"71136:4:14","nodeType":"VariableDeclaration","scope":13885,"src":"71120:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13877,"name":"string","nodeType":"ElementaryTypeName","src":"71120:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13880,"mutability":"mutable","name":"key","nameLocation":"71158:3:14","nodeType":"VariableDeclaration","scope":13885,"src":"71142:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13879,"name":"string","nodeType":"ElementaryTypeName","src":"71142:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71119:43:14"},"returnParameters":{"id":13884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13885,"src":"71186:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13882,"name":"bool","nodeType":"ElementaryTypeName","src":"71186:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"71185:6:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13895,"nodeType":"FunctionDefinition","src":"71273:101:14","nodes":[],"documentation":{"id":13886,"nodeType":"StructuredDocumentation","src":"71198:70:14","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"71282:16:14","parameters":{"id":13891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13888,"mutability":"mutable","name":"toml","nameLocation":"71315:4:14","nodeType":"VariableDeclaration","scope":13895,"src":"71299:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13887,"name":"string","nodeType":"ElementaryTypeName","src":"71299:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13890,"mutability":"mutable","name":"key","nameLocation":"71337:3:14","nodeType":"VariableDeclaration","scope":13895,"src":"71321:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13889,"name":"string","nodeType":"ElementaryTypeName","src":"71321:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71298:43:14"},"returnParameters":{"id":13894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13895,"src":"71365:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13892,"name":"address","nodeType":"ElementaryTypeName","src":"71365:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"71364:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13906,"nodeType":"FunctionDefinition","src":"71457:139:14","nodes":[],"documentation":{"id":13896,"nodeType":"StructuredDocumentation","src":"71380:72:14","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"71466:21:14","parameters":{"id":13901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13898,"mutability":"mutable","name":"toml","nameLocation":"71504:4:14","nodeType":"VariableDeclaration","scope":13906,"src":"71488:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13897,"name":"string","nodeType":"ElementaryTypeName","src":"71488:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13900,"mutability":"mutable","name":"key","nameLocation":"71526:3:14","nodeType":"VariableDeclaration","scope":13906,"src":"71510:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13899,"name":"string","nodeType":"ElementaryTypeName","src":"71510:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71487:43:14"},"returnParameters":{"id":13905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13906,"src":"71578:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13902,"name":"address","nodeType":"ElementaryTypeName","src":"71578:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13903,"nodeType":"ArrayTypeName","src":"71578:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"71577:18:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13916,"nodeType":"FunctionDefinition","src":"71674:95:14","nodes":[],"documentation":{"id":13907,"nodeType":"StructuredDocumentation","src":"71602:67:14","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"71683:13:14","parameters":{"id":13912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13909,"mutability":"mutable","name":"toml","nameLocation":"71713:4:14","nodeType":"VariableDeclaration","scope":13916,"src":"71697:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13908,"name":"string","nodeType":"ElementaryTypeName","src":"71697:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13911,"mutability":"mutable","name":"key","nameLocation":"71735:3:14","nodeType":"VariableDeclaration","scope":13916,"src":"71719:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13910,"name":"string","nodeType":"ElementaryTypeName","src":"71719:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71696:43:14"},"returnParameters":{"id":13915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13916,"src":"71763:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13913,"name":"bool","nodeType":"ElementaryTypeName","src":"71763:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"71762:6:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13927,"nodeType":"FunctionDefinition","src":"71849:109:14","nodes":[],"documentation":{"id":13917,"nodeType":"StructuredDocumentation","src":"71775:69:14","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"71858:18:14","parameters":{"id":13922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13919,"mutability":"mutable","name":"toml","nameLocation":"71893:4:14","nodeType":"VariableDeclaration","scope":13927,"src":"71877:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13918,"name":"string","nodeType":"ElementaryTypeName","src":"71877:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13921,"mutability":"mutable","name":"key","nameLocation":"71915:3:14","nodeType":"VariableDeclaration","scope":13927,"src":"71899:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13920,"name":"string","nodeType":"ElementaryTypeName","src":"71899:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71876:43:14"},"returnParameters":{"id":13926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13927,"src":"71943:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13923,"name":"bool","nodeType":"ElementaryTypeName","src":"71943:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13924,"nodeType":"ArrayTypeName","src":"71943:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"71942:15:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13937,"nodeType":"FunctionDefinition","src":"72037:104:14","nodes":[],"documentation":{"id":13928,"nodeType":"StructuredDocumentation","src":"71964:68:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"72046:14:14","parameters":{"id":13933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13930,"mutability":"mutable","name":"toml","nameLocation":"72077:4:14","nodeType":"VariableDeclaration","scope":13937,"src":"72061:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13929,"name":"string","nodeType":"ElementaryTypeName","src":"72061:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13932,"mutability":"mutable","name":"key","nameLocation":"72099:3:14","nodeType":"VariableDeclaration","scope":13937,"src":"72083:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13931,"name":"string","nodeType":"ElementaryTypeName","src":"72083:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72060:43:14"},"returnParameters":{"id":13936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13937,"src":"72127:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13934,"name":"bytes","nodeType":"ElementaryTypeName","src":"72127:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"72126:14:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13947,"nodeType":"FunctionDefinition","src":"72222:101:14","nodes":[],"documentation":{"id":13938,"nodeType":"StructuredDocumentation","src":"72147:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"72231:16:14","parameters":{"id":13943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13940,"mutability":"mutable","name":"toml","nameLocation":"72264:4:14","nodeType":"VariableDeclaration","scope":13947,"src":"72248:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13939,"name":"string","nodeType":"ElementaryTypeName","src":"72248:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13942,"mutability":"mutable","name":"key","nameLocation":"72286:3:14","nodeType":"VariableDeclaration","scope":13947,"src":"72270:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13941,"name":"string","nodeType":"ElementaryTypeName","src":"72270:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72247:43:14"},"returnParameters":{"id":13946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13947,"src":"72314:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72314:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72313:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13958,"nodeType":"FunctionDefinition","src":"72406:139:14","nodes":[],"documentation":{"id":13948,"nodeType":"StructuredDocumentation","src":"72329:72:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"72415:21:14","parameters":{"id":13953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13950,"mutability":"mutable","name":"toml","nameLocation":"72453:4:14","nodeType":"VariableDeclaration","scope":13958,"src":"72437:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13949,"name":"string","nodeType":"ElementaryTypeName","src":"72437:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13952,"mutability":"mutable","name":"key","nameLocation":"72475:3:14","nodeType":"VariableDeclaration","scope":13958,"src":"72459:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13951,"name":"string","nodeType":"ElementaryTypeName","src":"72459:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72436:43:14"},"returnParameters":{"id":13957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13958,"src":"72527:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72527:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13955,"nodeType":"ArrayTypeName","src":"72527:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"72526:18:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13969,"nodeType":"FunctionDefinition","src":"72626:111:14","nodes":[],"documentation":{"id":13959,"nodeType":"StructuredDocumentation","src":"72551:70:14","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"72635:19:14","parameters":{"id":13964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13961,"mutability":"mutable","name":"toml","nameLocation":"72671:4:14","nodeType":"VariableDeclaration","scope":13969,"src":"72655:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13960,"name":"string","nodeType":"ElementaryTypeName","src":"72655:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13963,"mutability":"mutable","name":"key","nameLocation":"72693:3:14","nodeType":"VariableDeclaration","scope":13969,"src":"72677:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13962,"name":"string","nodeType":"ElementaryTypeName","src":"72677:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72654:43:14"},"returnParameters":{"id":13968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13969,"src":"72721:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13965,"name":"bytes","nodeType":"ElementaryTypeName","src":"72721:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13966,"nodeType":"ArrayTypeName","src":"72721:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"72720:16:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13979,"nodeType":"FunctionDefinition","src":"72817:96:14","nodes":[],"documentation":{"id":13970,"nodeType":"StructuredDocumentation","src":"72743:69:14","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"72826:12:14","parameters":{"id":13975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13972,"mutability":"mutable","name":"toml","nameLocation":"72855:4:14","nodeType":"VariableDeclaration","scope":13979,"src":"72839:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13971,"name":"string","nodeType":"ElementaryTypeName","src":"72839:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13974,"mutability":"mutable","name":"key","nameLocation":"72877:3:14","nodeType":"VariableDeclaration","scope":13979,"src":"72861:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13973,"name":"string","nodeType":"ElementaryTypeName","src":"72861:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72838:43:14"},"returnParameters":{"id":13978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13977,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13979,"src":"72905:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13976,"name":"int256","nodeType":"ElementaryTypeName","src":"72905:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"72904:8:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13990,"nodeType":"FunctionDefinition","src":"72995:110:14","nodes":[],"documentation":{"id":13980,"nodeType":"StructuredDocumentation","src":"72919:71:14","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"73004:17:14","parameters":{"id":13985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13982,"mutability":"mutable","name":"toml","nameLocation":"73038:4:14","nodeType":"VariableDeclaration","scope":13990,"src":"73022:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13981,"name":"string","nodeType":"ElementaryTypeName","src":"73022:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13984,"mutability":"mutable","name":"key","nameLocation":"73060:3:14","nodeType":"VariableDeclaration","scope":13990,"src":"73044:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13983,"name":"string","nodeType":"ElementaryTypeName","src":"73044:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73021:43:14"},"returnParameters":{"id":13989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13990,"src":"73088:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13986,"name":"int256","nodeType":"ElementaryTypeName","src":"73088:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13987,"nodeType":"ArrayTypeName","src":"73088:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"73087:17:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14001,"nodeType":"FunctionDefinition","src":"73169:111:14","nodes":[],"documentation":{"id":13991,"nodeType":"StructuredDocumentation","src":"73111:53:14","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"73178:13:14","parameters":{"id":13996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13993,"mutability":"mutable","name":"toml","nameLocation":"73208:4:14","nodeType":"VariableDeclaration","scope":14001,"src":"73192:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13992,"name":"string","nodeType":"ElementaryTypeName","src":"73192:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13995,"mutability":"mutable","name":"key","nameLocation":"73230:3:14","nodeType":"VariableDeclaration","scope":14001,"src":"73214:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13994,"name":"string","nodeType":"ElementaryTypeName","src":"73214:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73191:43:14"},"returnParameters":{"id":14000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13999,"mutability":"mutable","name":"keys","nameLocation":"73274:4:14","nodeType":"VariableDeclaration","scope":14001,"src":"73258:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13997,"name":"string","nodeType":"ElementaryTypeName","src":"73258:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13998,"nodeType":"ArrayTypeName","src":"73258:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"73257:22:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14011,"nodeType":"FunctionDefinition","src":"73360:106:14","nodes":[],"documentation":{"id":14002,"nodeType":"StructuredDocumentation","src":"73286:69:14","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"73369:15:14","parameters":{"id":14007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14004,"mutability":"mutable","name":"toml","nameLocation":"73401:4:14","nodeType":"VariableDeclaration","scope":14011,"src":"73385:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14003,"name":"string","nodeType":"ElementaryTypeName","src":"73385:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14006,"mutability":"mutable","name":"key","nameLocation":"73423:3:14","nodeType":"VariableDeclaration","scope":14011,"src":"73407:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14005,"name":"string","nodeType":"ElementaryTypeName","src":"73407:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73384:43:14"},"returnParameters":{"id":14010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14011,"src":"73451:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14008,"name":"string","nodeType":"ElementaryTypeName","src":"73451:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73450:15:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14022,"nodeType":"FunctionDefinition","src":"73548:113:14","nodes":[],"documentation":{"id":14012,"nodeType":"StructuredDocumentation","src":"73472:71:14","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"73557:20:14","parameters":{"id":14017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14014,"mutability":"mutable","name":"toml","nameLocation":"73594:4:14","nodeType":"VariableDeclaration","scope":14022,"src":"73578:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14013,"name":"string","nodeType":"ElementaryTypeName","src":"73578:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14016,"mutability":"mutable","name":"key","nameLocation":"73616:3:14","nodeType":"VariableDeclaration","scope":14022,"src":"73600:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14015,"name":"string","nodeType":"ElementaryTypeName","src":"73600:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73577:43:14"},"returnParameters":{"id":14021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14022,"src":"73644:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14018,"name":"string","nodeType":"ElementaryTypeName","src":"73644:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14019,"nodeType":"ArrayTypeName","src":"73644:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"73643:17:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14032,"nodeType":"FunctionDefinition","src":"73742:98:14","nodes":[],"documentation":{"id":14023,"nodeType":"StructuredDocumentation","src":"73667:70:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"73751:13:14","parameters":{"id":14028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14025,"mutability":"mutable","name":"toml","nameLocation":"73781:4:14","nodeType":"VariableDeclaration","scope":14032,"src":"73765:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14024,"name":"string","nodeType":"ElementaryTypeName","src":"73765:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14027,"mutability":"mutable","name":"key","nameLocation":"73803:3:14","nodeType":"VariableDeclaration","scope":14032,"src":"73787:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14026,"name":"string","nodeType":"ElementaryTypeName","src":"73787:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73764:43:14"},"returnParameters":{"id":14031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14032,"src":"73831:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14029,"name":"uint256","nodeType":"ElementaryTypeName","src":"73831:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73830:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14043,"nodeType":"FunctionDefinition","src":"73923:112:14","nodes":[],"documentation":{"id":14033,"nodeType":"StructuredDocumentation","src":"73846:72:14","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"73932:18:14","parameters":{"id":14038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14035,"mutability":"mutable","name":"toml","nameLocation":"73967:4:14","nodeType":"VariableDeclaration","scope":14043,"src":"73951:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14034,"name":"string","nodeType":"ElementaryTypeName","src":"73951:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14037,"mutability":"mutable","name":"key","nameLocation":"73989:3:14","nodeType":"VariableDeclaration","scope":14043,"src":"73973:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14036,"name":"string","nodeType":"ElementaryTypeName","src":"73973:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73950:43:14"},"returnParameters":{"id":14042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14043,"src":"74017:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14039,"name":"uint256","nodeType":"ElementaryTypeName","src":"74017:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14040,"nodeType":"ArrayTypeName","src":"74017:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"74016:18:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14051,"nodeType":"FunctionDefinition","src":"74075:93:14","nodes":[],"documentation":{"id":14044,"nodeType":"StructuredDocumentation","src":"74041:29:14","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"74084:9:14","parameters":{"id":14047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14046,"mutability":"mutable","name":"toml","nameLocation":"74110:4:14","nodeType":"VariableDeclaration","scope":14051,"src":"74094:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14045,"name":"string","nodeType":"ElementaryTypeName","src":"74094:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74093:22:14"},"returnParameters":{"id":14050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14049,"mutability":"mutable","name":"abiEncodedData","nameLocation":"74152:14:14","nodeType":"VariableDeclaration","scope":14051,"src":"74139:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14048,"name":"bytes","nodeType":"ElementaryTypeName","src":"74139:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74138:29:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14061,"nodeType":"FunctionDefinition","src":"74217:114:14","nodes":[],"documentation":{"id":14052,"nodeType":"StructuredDocumentation","src":"74174:38:14","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"74226:9:14","parameters":{"id":14057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14054,"mutability":"mutable","name":"toml","nameLocation":"74252:4:14","nodeType":"VariableDeclaration","scope":14061,"src":"74236:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14053,"name":"string","nodeType":"ElementaryTypeName","src":"74236:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14056,"mutability":"mutable","name":"key","nameLocation":"74274:3:14","nodeType":"VariableDeclaration","scope":14061,"src":"74258:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14055,"name":"string","nodeType":"ElementaryTypeName","src":"74258:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74235:43:14"},"returnParameters":{"id":14060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14059,"mutability":"mutable","name":"abiEncodedData","nameLocation":"74315:14:14","nodeType":"VariableDeclaration","scope":14061,"src":"74302:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14058,"name":"bytes","nodeType":"ElementaryTypeName","src":"74302:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74301:29:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14069,"nodeType":"FunctionDefinition","src":"74424:72:14","nodes":[],"documentation":{"id":14062,"nodeType":"StructuredDocumentation","src":"74337:82:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"74433:9:14","parameters":{"id":14067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14064,"mutability":"mutable","name":"json","nameLocation":"74459:4:14","nodeType":"VariableDeclaration","scope":14069,"src":"74443:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14063,"name":"string","nodeType":"ElementaryTypeName","src":"74443:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14066,"mutability":"mutable","name":"path","nameLocation":"74481:4:14","nodeType":"VariableDeclaration","scope":14069,"src":"74465:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14065,"name":"string","nodeType":"ElementaryTypeName","src":"74465:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74442:44:14"},"returnParameters":{"id":14068,"nodeType":"ParameterList","parameters":[],"src":"74495:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14079,"nodeType":"FunctionDefinition","src":"74765:98:14","nodes":[],"documentation":{"id":14070,"nodeType":"StructuredDocumentation","src":"74502:258:14","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"74774:9:14","parameters":{"id":14077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14072,"mutability":"mutable","name":"json","nameLocation":"74800:4:14","nodeType":"VariableDeclaration","scope":14079,"src":"74784:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14071,"name":"string","nodeType":"ElementaryTypeName","src":"74784:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14074,"mutability":"mutable","name":"path","nameLocation":"74822:4:14","nodeType":"VariableDeclaration","scope":14079,"src":"74806:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14073,"name":"string","nodeType":"ElementaryTypeName","src":"74806:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14076,"mutability":"mutable","name":"valueKey","nameLocation":"74844:8:14","nodeType":"VariableDeclaration","scope":14079,"src":"74828:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14075,"name":"string","nodeType":"ElementaryTypeName","src":"74828:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74783:70:14"},"returnParameters":{"id":14078,"nodeType":"ParameterList","parameters":[],"src":"74862:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14091,"nodeType":"FunctionDefinition","src":"75002:141:14","nodes":[],"documentation":{"id":14080,"nodeType":"StructuredDocumentation","src":"74905:92:14","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"75011:21:14","parameters":{"id":14087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14082,"mutability":"mutable","name":"salt","nameLocation":"75041:4:14","nodeType":"VariableDeclaration","scope":14091,"src":"75033:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75033:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14084,"mutability":"mutable","name":"initCodeHash","nameLocation":"75055:12:14","nodeType":"VariableDeclaration","scope":14091,"src":"75047:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75047:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14086,"mutability":"mutable","name":"deployer","nameLocation":"75077:8:14","nodeType":"VariableDeclaration","scope":14091,"src":"75069:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14085,"name":"address","nodeType":"ElementaryTypeName","src":"75069:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75032:54:14"},"returnParameters":{"id":14090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14091,"src":"75134:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14088,"name":"address","nodeType":"ElementaryTypeName","src":"75134:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75133:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14101,"nodeType":"FunctionDefinition","src":"75248:99:14","nodes":[],"documentation":{"id":14092,"nodeType":"StructuredDocumentation","src":"75149:94:14","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"75257:21:14","parameters":{"id":14097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14094,"mutability":"mutable","name":"salt","nameLocation":"75287:4:14","nodeType":"VariableDeclaration","scope":14101,"src":"75279:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75279:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14096,"mutability":"mutable","name":"initCodeHash","nameLocation":"75301:12:14","nodeType":"VariableDeclaration","scope":14101,"src":"75293:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75293:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75278:36:14"},"returnParameters":{"id":14100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14101,"src":"75338:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14098,"name":"address","nodeType":"ElementaryTypeName","src":"75338:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75337:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14111,"nodeType":"FunctionDefinition","src":"75452:95:14","nodes":[],"documentation":{"id":14102,"nodeType":"StructuredDocumentation","src":"75353:94:14","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"75461:20:14","parameters":{"id":14107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14104,"mutability":"mutable","name":"deployer","nameLocation":"75490:8:14","nodeType":"VariableDeclaration","scope":14111,"src":"75482:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14103,"name":"address","nodeType":"ElementaryTypeName","src":"75482:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14106,"mutability":"mutable","name":"nonce","nameLocation":"75508:5:14","nodeType":"VariableDeclaration","scope":14111,"src":"75500:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14105,"name":"uint256","nodeType":"ElementaryTypeName","src":"75500:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75481:33:14"},"returnParameters":{"id":14110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14111,"src":"75538:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14108,"name":"address","nodeType":"ElementaryTypeName","src":"75538:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75537:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14120,"nodeType":"FunctionDefinition","src":"75657:91:14","nodes":[],"documentation":{"id":14112,"nodeType":"StructuredDocumentation","src":"75553:99:14","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"75666:12:14","parameters":{"id":14115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14114,"mutability":"mutable","name":"walletLabel","nameLocation":"75695:11:14","nodeType":"VariableDeclaration","scope":14120,"src":"75679:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14113,"name":"string","nodeType":"ElementaryTypeName","src":"75679:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75678:29:14"},"returnParameters":{"id":14119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14118,"mutability":"mutable","name":"wallet","nameLocation":"75740:6:14","nodeType":"VariableDeclaration","scope":14120,"src":"75726:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":14117,"nodeType":"UserDefinedTypeName","pathNode":{"id":14116,"name":"Wallet","nameLocations":["75726:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":11078,"src":"75726:6:14"},"referencedDeclaration":11078,"src":"75726:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75725:22:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14129,"nodeType":"FunctionDefinition","src":"75826:82:14","nodes":[],"documentation":{"id":14121,"nodeType":"StructuredDocumentation","src":"75754:67:14","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"75835:12:14","parameters":{"id":14124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14123,"mutability":"mutable","name":"privateKey","nameLocation":"75856:10:14","nodeType":"VariableDeclaration","scope":14129,"src":"75848:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14122,"name":"uint256","nodeType":"ElementaryTypeName","src":"75848:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75847:20:14"},"returnParameters":{"id":14128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14127,"mutability":"mutable","name":"wallet","nameLocation":"75900:6:14","nodeType":"VariableDeclaration","scope":14129,"src":"75886:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":14126,"nodeType":"UserDefinedTypeName","pathNode":{"id":14125,"name":"Wallet","nameLocations":["75886:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":11078,"src":"75886:6:14"},"referencedDeclaration":11078,"src":"75886:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75885:22:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14140,"nodeType":"FunctionDefinition","src":"76022:111:14","nodes":[],"documentation":{"id":14130,"nodeType":"StructuredDocumentation","src":"75914:103:14","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"76031:12:14","parameters":{"id":14135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14132,"mutability":"mutable","name":"privateKey","nameLocation":"76052:10:14","nodeType":"VariableDeclaration","scope":14140,"src":"76044:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14131,"name":"uint256","nodeType":"ElementaryTypeName","src":"76044:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14134,"mutability":"mutable","name":"walletLabel","nameLocation":"76080:11:14","nodeType":"VariableDeclaration","scope":14140,"src":"76064:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14133,"name":"string","nodeType":"ElementaryTypeName","src":"76064:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76043:49:14"},"returnParameters":{"id":14139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14138,"mutability":"mutable","name":"wallet","nameLocation":"76125:6:14","nodeType":"VariableDeclaration","scope":14140,"src":"76111:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":14137,"nodeType":"UserDefinedTypeName","pathNode":{"id":14136,"name":"Wallet","nameLocations":["76111:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":11078,"src":"76111:6:14"},"referencedDeclaration":11078,"src":"76111:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"76110:22:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14150,"nodeType":"FunctionDefinition","src":"76281:102:14","nodes":[],"documentation":{"id":14141,"nodeType":"StructuredDocumentation","src":"76139:137:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"76290:9:14","parameters":{"id":14146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14143,"mutability":"mutable","name":"mnemonic","nameLocation":"76316:8:14","nodeType":"VariableDeclaration","scope":14150,"src":"76300:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14142,"name":"string","nodeType":"ElementaryTypeName","src":"76300:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14145,"mutability":"mutable","name":"index","nameLocation":"76333:5:14","nodeType":"VariableDeclaration","scope":14150,"src":"76326:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":14144,"name":"uint32","nodeType":"ElementaryTypeName","src":"76326:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"76299:40:14"},"returnParameters":{"id":14149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14148,"mutability":"mutable","name":"privateKey","nameLocation":"76371:10:14","nodeType":"VariableDeclaration","scope":14150,"src":"76363:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14147,"name":"uint256","nodeType":"ElementaryTypeName","src":"76363:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76362:20:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14162,"nodeType":"FunctionDefinition","src":"76512:158:14","nodes":[],"documentation":{"id":14151,"nodeType":"StructuredDocumentation","src":"76389:118:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"76521:9:14","parameters":{"id":14158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14153,"mutability":"mutable","name":"mnemonic","nameLocation":"76547:8:14","nodeType":"VariableDeclaration","scope":14162,"src":"76531:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14152,"name":"string","nodeType":"ElementaryTypeName","src":"76531:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14155,"mutability":"mutable","name":"derivationPath","nameLocation":"76573:14:14","nodeType":"VariableDeclaration","scope":14162,"src":"76557:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14154,"name":"string","nodeType":"ElementaryTypeName","src":"76557:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14157,"mutability":"mutable","name":"index","nameLocation":"76596:5:14","nodeType":"VariableDeclaration","scope":14162,"src":"76589:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":14156,"name":"uint32","nodeType":"ElementaryTypeName","src":"76589:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"76530:72:14"},"returnParameters":{"id":14161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14160,"mutability":"mutable","name":"privateKey","nameLocation":"76658:10:14","nodeType":"VariableDeclaration","scope":14162,"src":"76650:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14159,"name":"uint256","nodeType":"ElementaryTypeName","src":"76650:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76649:20:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14174,"nodeType":"FunctionDefinition","src":"76844:152:14","nodes":[],"documentation":{"id":14163,"nodeType":"StructuredDocumentation","src":"76676:163:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"76853:9:14","parameters":{"id":14170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14165,"mutability":"mutable","name":"mnemonic","nameLocation":"76879:8:14","nodeType":"VariableDeclaration","scope":14174,"src":"76863:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14164,"name":"string","nodeType":"ElementaryTypeName","src":"76863:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14167,"mutability":"mutable","name":"index","nameLocation":"76896:5:14","nodeType":"VariableDeclaration","scope":14174,"src":"76889:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":14166,"name":"uint32","nodeType":"ElementaryTypeName","src":"76889:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":14169,"mutability":"mutable","name":"language","nameLocation":"76919:8:14","nodeType":"VariableDeclaration","scope":14174,"src":"76903:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14168,"name":"string","nodeType":"ElementaryTypeName","src":"76903:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76862:66:14"},"returnParameters":{"id":14173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14172,"mutability":"mutable","name":"privateKey","nameLocation":"76984:10:14","nodeType":"VariableDeclaration","scope":14174,"src":"76976:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14171,"name":"uint256","nodeType":"ElementaryTypeName","src":"76976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76975:20:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14188,"nodeType":"FunctionDefinition","src":"77151:184:14","nodes":[],"documentation":{"id":14175,"nodeType":"StructuredDocumentation","src":"77002:144:14","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"77160:9:14","parameters":{"id":14184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14177,"mutability":"mutable","name":"mnemonic","nameLocation":"77186:8:14","nodeType":"VariableDeclaration","scope":14188,"src":"77170:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14176,"name":"string","nodeType":"ElementaryTypeName","src":"77170:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14179,"mutability":"mutable","name":"derivationPath","nameLocation":"77212:14:14","nodeType":"VariableDeclaration","scope":14188,"src":"77196:30:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14178,"name":"string","nodeType":"ElementaryTypeName","src":"77196:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14181,"mutability":"mutable","name":"index","nameLocation":"77235:5:14","nodeType":"VariableDeclaration","scope":14188,"src":"77228:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":14180,"name":"uint32","nodeType":"ElementaryTypeName","src":"77228:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":14183,"mutability":"mutable","name":"language","nameLocation":"77258:8:14","nodeType":"VariableDeclaration","scope":14188,"src":"77242:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14182,"name":"string","nodeType":"ElementaryTypeName","src":"77242:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77169:98:14"},"returnParameters":{"id":14187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14186,"mutability":"mutable","name":"privateKey","nameLocation":"77323:10:14","nodeType":"VariableDeclaration","scope":14188,"src":"77315:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14185,"name":"uint256","nodeType":"ElementaryTypeName","src":"77315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77314:20:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14196,"nodeType":"FunctionDefinition","src":"77391:75:14","nodes":[],"documentation":{"id":14189,"nodeType":"StructuredDocumentation","src":"77341:45:14","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"77400:11:14","parameters":{"id":14192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14191,"mutability":"mutable","name":"name","nameLocation":"77428:4:14","nodeType":"VariableDeclaration","scope":14196,"src":"77412:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14190,"name":"string","nodeType":"ElementaryTypeName","src":"77412:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77411:22:14"},"returnParameters":{"id":14195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14196,"src":"77457:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77457:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77456:9:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14204,"nodeType":"FunctionDefinition","src":"77522:86:14","nodes":[],"documentation":{"id":14197,"nodeType":"StructuredDocumentation","src":"77472:45:14","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"77531:8:14","parameters":{"id":14200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14199,"mutability":"mutable","name":"account","nameLocation":"77548:7:14","nodeType":"VariableDeclaration","scope":14204,"src":"77540:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14198,"name":"address","nodeType":"ElementaryTypeName","src":"77540:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77539:17:14"},"returnParameters":{"id":14203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14202,"mutability":"mutable","name":"currentLabel","nameLocation":"77594:12:14","nodeType":"VariableDeclaration","scope":14204,"src":"77580:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14201,"name":"string","nodeType":"ElementaryTypeName","src":"77580:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77579:28:14"},"scope":14299,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14213,"nodeType":"FunctionDefinition","src":"77646:74:14","nodes":[],"documentation":{"id":14205,"nodeType":"StructuredDocumentation","src":"77614:27:14","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"77655:8:14","parameters":{"id":14209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14208,"mutability":"mutable","name":"wallet","nameLocation":"77680:6:14","nodeType":"VariableDeclaration","scope":14213,"src":"77664:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":14207,"nodeType":"UserDefinedTypeName","pathNode":{"id":14206,"name":"Wallet","nameLocations":["77664:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":11078,"src":"77664:6:14"},"referencedDeclaration":11078,"src":"77664:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"77663:24:14"},"returnParameters":{"id":14212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14211,"mutability":"mutable","name":"nonce","nameLocation":"77713:5:14","nodeType":"VariableDeclaration","scope":14213,"src":"77706:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14210,"name":"uint64","nodeType":"ElementaryTypeName","src":"77706:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"77705:14:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14221,"nodeType":"FunctionDefinition","src":"77768:67:14","nodes":[],"documentation":{"id":14214,"nodeType":"StructuredDocumentation","src":"77726:37:14","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"77777:5:14","parameters":{"id":14219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14216,"mutability":"mutable","name":"account","nameLocation":"77791:7:14","nodeType":"VariableDeclaration","scope":14221,"src":"77783:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14215,"name":"address","nodeType":"ElementaryTypeName","src":"77783:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14218,"mutability":"mutable","name":"newLabel","nameLocation":"77816:8:14","nodeType":"VariableDeclaration","scope":14221,"src":"77800:24:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14217,"name":"string","nodeType":"ElementaryTypeName","src":"77800:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77782:43:14"},"returnParameters":{"id":14220,"nodeType":"ParameterList","parameters":[],"src":"77834:0:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14227,"nodeType":"FunctionDefinition","src":"77877:52:14","nodes":[],"documentation":{"id":14222,"nodeType":"StructuredDocumentation","src":"77841:31:14","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"77886:13:14","parameters":{"id":14223,"nodeType":"ParameterList","parameters":[],"src":"77899:2:14"},"returnParameters":{"id":14226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14227,"src":"77920:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14224,"name":"address","nodeType":"ElementaryTypeName","src":"77920:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77919:9:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14233,"nodeType":"FunctionDefinition","src":"77975:49:14","nodes":[],"documentation":{"id":14228,"nodeType":"StructuredDocumentation","src":"77935:35:14","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"77984:10:14","parameters":{"id":14229,"nodeType":"ParameterList","parameters":[],"src":"77994:2:14"},"returnParameters":{"id":14232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14233,"src":"78015:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14230,"name":"uint256","nodeType":"ElementaryTypeName","src":"78015:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78014:9:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14243,"nodeType":"FunctionDefinition","src":"78107:73:14","nodes":[],"documentation":{"id":14234,"nodeType":"StructuredDocumentation","src":"78030:72:14","text":"Returns random uin256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"78116:10:14","parameters":{"id":14239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14236,"mutability":"mutable","name":"min","nameLocation":"78135:3:14","nodeType":"VariableDeclaration","scope":14243,"src":"78127:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14235,"name":"uint256","nodeType":"ElementaryTypeName","src":"78127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14238,"mutability":"mutable","name":"max","nameLocation":"78148:3:14","nodeType":"VariableDeclaration","scope":14243,"src":"78140:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14237,"name":"uint256","nodeType":"ElementaryTypeName","src":"78140:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78126:26:14"},"returnParameters":{"id":14242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14243,"src":"78171:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14240,"name":"uint256","nodeType":"ElementaryTypeName","src":"78171:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78170:9:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14251,"nodeType":"FunctionDefinition","src":"78264:76:14","nodes":[],"documentation":{"id":14244,"nodeType":"StructuredDocumentation","src":"78186:73:14","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"78273:11:14","parameters":{"id":14247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14246,"mutability":"mutable","name":"privateKey","nameLocation":"78293:10:14","nodeType":"VariableDeclaration","scope":14251,"src":"78285:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14245,"name":"uint256","nodeType":"ElementaryTypeName","src":"78285:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78284:20:14"},"returnParameters":{"id":14250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14249,"mutability":"mutable","name":"keyAddr","nameLocation":"78331:7:14","nodeType":"VariableDeclaration","scope":14251,"src":"78323:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14248,"name":"address","nodeType":"ElementaryTypeName","src":"78323:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"78322:17:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14266,"nodeType":"FunctionDefinition","src":"78382:103:14","nodes":[],"documentation":{"id":14252,"nodeType":"StructuredDocumentation","src":"78346:31:14","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"78391:4:14","parameters":{"id":14258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14255,"mutability":"mutable","name":"wallet","nameLocation":"78412:6:14","nodeType":"VariableDeclaration","scope":14266,"src":"78396:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":14254,"nodeType":"UserDefinedTypeName","pathNode":{"id":14253,"name":"Wallet","nameLocations":["78396:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":11078,"src":"78396:6:14"},"referencedDeclaration":11078,"src":"78396:6:14","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$11078_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":14257,"mutability":"mutable","name":"digest","nameLocation":"78428:6:14","nodeType":"VariableDeclaration","scope":14266,"src":"78420:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78420:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78395:40:14"},"returnParameters":{"id":14265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14260,"mutability":"mutable","name":"v","nameLocation":"78460:1:14","nodeType":"VariableDeclaration","scope":14266,"src":"78454:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":14259,"name":"uint8","nodeType":"ElementaryTypeName","src":"78454:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":14262,"mutability":"mutable","name":"r","nameLocation":"78471:1:14","nodeType":"VariableDeclaration","scope":14266,"src":"78463:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78463:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14264,"mutability":"mutable","name":"s","nameLocation":"78482:1:14","nodeType":"VariableDeclaration","scope":14266,"src":"78474:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78474:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78453:31:14"},"scope":14299,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14274,"nodeType":"FunctionDefinition","src":"78546:80:14","nodes":[],"documentation":{"id":14267,"nodeType":"StructuredDocumentation","src":"78491:50:14","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"78555:11:14","parameters":{"id":14270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14269,"mutability":"mutable","name":"data","nameLocation":"78582:4:14","nodeType":"VariableDeclaration","scope":14274,"src":"78567:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14268,"name":"bytes","nodeType":"ElementaryTypeName","src":"78567:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"78566:21:14"},"returnParameters":{"id":14273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14274,"src":"78611:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14271,"name":"string","nodeType":"ElementaryTypeName","src":"78611:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78610:15:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14282,"nodeType":"FunctionDefinition","src":"78688:81:14","nodes":[],"documentation":{"id":14275,"nodeType":"StructuredDocumentation","src":"78632:51:14","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"78697:11:14","parameters":{"id":14278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14277,"mutability":"mutable","name":"data","nameLocation":"78725:4:14","nodeType":"VariableDeclaration","scope":14282,"src":"78709:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14276,"name":"string","nodeType":"ElementaryTypeName","src":"78709:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78708:22:14"},"returnParameters":{"id":14281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14282,"src":"78754:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14279,"name":"string","nodeType":"ElementaryTypeName","src":"78754:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78753:15:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14290,"nodeType":"FunctionDefinition","src":"78827:77:14","nodes":[],"documentation":{"id":14283,"nodeType":"StructuredDocumentation","src":"78775:47:14","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"78836:8:14","parameters":{"id":14286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14285,"mutability":"mutable","name":"data","nameLocation":"78860:4:14","nodeType":"VariableDeclaration","scope":14290,"src":"78845:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14284,"name":"bytes","nodeType":"ElementaryTypeName","src":"78845:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"78844:21:14"},"returnParameters":{"id":14289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14290,"src":"78889:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14287,"name":"string","nodeType":"ElementaryTypeName","src":"78889:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78888:15:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14298,"nodeType":"FunctionDefinition","src":"78963:78:14","nodes":[],"documentation":{"id":14291,"nodeType":"StructuredDocumentation","src":"78910:48:14","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"78972:8:14","parameters":{"id":14294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14293,"mutability":"mutable","name":"data","nameLocation":"78997:4:14","nodeType":"VariableDeclaration","scope":14298,"src":"78981:20:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14292,"name":"string","nodeType":"ElementaryTypeName","src":"78981:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78980:22:14"},"returnParameters":{"id":14297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14298,"src":"79026:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14295,"name":"string","nodeType":"ElementaryTypeName","src":"79026:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79025:15:14"},"scope":14299,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":10973,"nodeType":"StructuredDocumentation","src":"184:225:14","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[14299],"name":"VmSafe","nameLocation":"419:6:14","scope":14949,"usedErrors":[],"usedEvents":[]},{"id":14948,"nodeType":"ContractDefinition","src":"79216:15888:14","nodes":[{"id":14308,"nodeType":"FunctionDefinition","src":"79376:61:14","nodes":[],"documentation":{"id":14303,"nodeType":"StructuredDocumentation","src":"79275:96:14","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"79385:10:14","parameters":{"id":14304,"nodeType":"ParameterList","parameters":[],"src":"79395:2:14"},"returnParameters":{"id":14307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14306,"mutability":"mutable","name":"forkId","nameLocation":"79429:6:14","nodeType":"VariableDeclaration","scope":14308,"src":"79421:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14305,"name":"uint256","nodeType":"ElementaryTypeName","src":"79421:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79420:16:14"},"scope":14948,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14314,"nodeType":"FunctionDefinition","src":"79521:51:14","nodes":[],"documentation":{"id":14309,"nodeType":"StructuredDocumentation","src":"79443:73:14","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"79530:15:14","parameters":{"id":14312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14311,"mutability":"mutable","name":"account","nameLocation":"79554:7:14","nodeType":"VariableDeclaration","scope":14314,"src":"79546:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14310,"name":"address","nodeType":"ElementaryTypeName","src":"79546:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79545:17:14"},"returnParameters":{"id":14313,"nodeType":"ParameterList","parameters":[],"src":"79571:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14320,"nodeType":"FunctionDefinition","src":"79611:54:14","nodes":[],"documentation":{"id":14315,"nodeType":"StructuredDocumentation","src":"79578:28:14","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"79620:11:14","parameters":{"id":14318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14317,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"79640:14:14","nodeType":"VariableDeclaration","scope":14320,"src":"79632:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14316,"name":"uint256","nodeType":"ElementaryTypeName","src":"79632:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79631:24:14"},"returnParameters":{"id":14319,"nodeType":"ParameterList","parameters":[],"src":"79664:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14327,"nodeType":"FunctionDefinition","src":"79832:56:14","nodes":[],"documentation":{"id":14321,"nodeType":"StructuredDocumentation","src":"79671:156:14","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"79841:10:14","parameters":{"id":14325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14324,"mutability":"mutable","name":"hashes","nameLocation":"79871:6:14","nodeType":"VariableDeclaration","scope":14327,"src":"79852:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79852:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14323,"nodeType":"ArrayTypeName","src":"79852:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"79851:27:14"},"returnParameters":{"id":14326,"nodeType":"ParameterList","parameters":[],"src":"79887:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14333,"nodeType":"FunctionDefinition","src":"79924:46:14","nodes":[],"documentation":{"id":14328,"nodeType":"StructuredDocumentation","src":"79894:25:14","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"79933:7:14","parameters":{"id":14331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14330,"mutability":"mutable","name":"newChainId","nameLocation":"79949:10:14","nodeType":"VariableDeclaration","scope":14333,"src":"79941:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14329,"name":"uint256","nodeType":"ElementaryTypeName","src":"79941:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79940:20:14"},"returnParameters":{"id":14332,"nodeType":"ParameterList","parameters":[],"src":"79969:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14337,"nodeType":"FunctionDefinition","src":"80009:37:14","nodes":[],"documentation":{"id":14334,"nodeType":"StructuredDocumentation","src":"79976:28:14","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"80018:16:14","parameters":{"id":14335,"nodeType":"ParameterList","parameters":[],"src":"80034:2:14"},"returnParameters":{"id":14336,"nodeType":"ParameterList","parameters":[],"src":"80045:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14343,"nodeType":"FunctionDefinition","src":"80083:48:14","nodes":[],"documentation":{"id":14338,"nodeType":"StructuredDocumentation","src":"80052:26:14","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"80092:8:14","parameters":{"id":14341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14340,"mutability":"mutable","name":"newCoinbase","nameLocation":"80109:11:14","nodeType":"VariableDeclaration","scope":14343,"src":"80101:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14339,"name":"address","nodeType":"ElementaryTypeName","src":"80101:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80100:21:14"},"returnParameters":{"id":14342,"nodeType":"ParameterList","parameters":[],"src":"80130:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14351,"nodeType":"FunctionDefinition","src":"80251:82:14","nodes":[],"documentation":{"id":14344,"nodeType":"StructuredDocumentation","src":"80137:109:14","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"80260:10:14","parameters":{"id":14347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14346,"mutability":"mutable","name":"urlOrAlias","nameLocation":"80287:10:14","nodeType":"VariableDeclaration","scope":14351,"src":"80271:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14345,"name":"string","nodeType":"ElementaryTypeName","src":"80271:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80270:28:14"},"returnParameters":{"id":14350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14349,"mutability":"mutable","name":"forkId","nameLocation":"80325:6:14","nodeType":"VariableDeclaration","scope":14351,"src":"80317:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14348,"name":"uint256","nodeType":"ElementaryTypeName","src":"80317:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80316:16:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14361,"nodeType":"FunctionDefinition","src":"80440:103:14","nodes":[],"documentation":{"id":14352,"nodeType":"StructuredDocumentation","src":"80339:96:14","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"80449:10:14","parameters":{"id":14357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14354,"mutability":"mutable","name":"urlOrAlias","nameLocation":"80476:10:14","nodeType":"VariableDeclaration","scope":14361,"src":"80460:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14353,"name":"string","nodeType":"ElementaryTypeName","src":"80460:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14356,"mutability":"mutable","name":"blockNumber","nameLocation":"80496:11:14","nodeType":"VariableDeclaration","scope":14361,"src":"80488:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14355,"name":"uint256","nodeType":"ElementaryTypeName","src":"80488:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80459:49:14"},"returnParameters":{"id":14360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14359,"mutability":"mutable","name":"forkId","nameLocation":"80535:6:14","nodeType":"VariableDeclaration","scope":14361,"src":"80527:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14358,"name":"uint256","nodeType":"ElementaryTypeName","src":"80527:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80526:16:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14371,"nodeType":"FunctionDefinition","src":"80768:98:14","nodes":[],"documentation":{"id":14362,"nodeType":"StructuredDocumentation","src":"80549:214:14","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"80777:10:14","parameters":{"id":14367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14364,"mutability":"mutable","name":"urlOrAlias","nameLocation":"80804:10:14","nodeType":"VariableDeclaration","scope":14371,"src":"80788:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14363,"name":"string","nodeType":"ElementaryTypeName","src":"80788:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14366,"mutability":"mutable","name":"txHash","nameLocation":"80824:6:14","nodeType":"VariableDeclaration","scope":14371,"src":"80816:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80816:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80787:44:14"},"returnParameters":{"id":14370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14369,"mutability":"mutable","name":"forkId","nameLocation":"80858:6:14","nodeType":"VariableDeclaration","scope":14371,"src":"80850:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14368,"name":"uint256","nodeType":"ElementaryTypeName","src":"80850:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80849:16:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14379,"nodeType":"FunctionDefinition","src":"81001:88:14","nodes":[],"documentation":{"id":14372,"nodeType":"StructuredDocumentation","src":"80872:124:14","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"81010:16:14","parameters":{"id":14375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14374,"mutability":"mutable","name":"urlOrAlias","nameLocation":"81043:10:14","nodeType":"VariableDeclaration","scope":14379,"src":"81027:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14373,"name":"string","nodeType":"ElementaryTypeName","src":"81027:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81026:28:14"},"returnParameters":{"id":14378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14377,"mutability":"mutable","name":"forkId","nameLocation":"81081:6:14","nodeType":"VariableDeclaration","scope":14379,"src":"81073:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14376,"name":"uint256","nodeType":"ElementaryTypeName","src":"81073:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81072:16:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14389,"nodeType":"FunctionDefinition","src":"81213:109:14","nodes":[],"documentation":{"id":14380,"nodeType":"StructuredDocumentation","src":"81095:113:14","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"81222:16:14","parameters":{"id":14385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14382,"mutability":"mutable","name":"urlOrAlias","nameLocation":"81255:10:14","nodeType":"VariableDeclaration","scope":14389,"src":"81239:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14381,"name":"string","nodeType":"ElementaryTypeName","src":"81239:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14384,"mutability":"mutable","name":"blockNumber","nameLocation":"81275:11:14","nodeType":"VariableDeclaration","scope":14389,"src":"81267:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14383,"name":"uint256","nodeType":"ElementaryTypeName","src":"81267:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81238:49:14"},"returnParameters":{"id":14388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14387,"mutability":"mutable","name":"forkId","nameLocation":"81314:6:14","nodeType":"VariableDeclaration","scope":14389,"src":"81306:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14386,"name":"uint256","nodeType":"ElementaryTypeName","src":"81306:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81305:16:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14399,"nodeType":"FunctionDefinition","src":"81558:104:14","nodes":[],"documentation":{"id":14390,"nodeType":"StructuredDocumentation","src":"81328:225:14","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"81567:16:14","parameters":{"id":14395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14392,"mutability":"mutable","name":"urlOrAlias","nameLocation":"81600:10:14","nodeType":"VariableDeclaration","scope":14399,"src":"81584:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14391,"name":"string","nodeType":"ElementaryTypeName","src":"81584:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14394,"mutability":"mutable","name":"txHash","nameLocation":"81620:6:14","nodeType":"VariableDeclaration","scope":14399,"src":"81612:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81612:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"81583:44:14"},"returnParameters":{"id":14398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14397,"mutability":"mutable","name":"forkId","nameLocation":"81654:6:14","nodeType":"VariableDeclaration","scope":14399,"src":"81646:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14396,"name":"uint256","nodeType":"ElementaryTypeName","src":"81646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81645:16:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14407,"nodeType":"FunctionDefinition","src":"81702:60:14","nodes":[],"documentation":{"id":14400,"nodeType":"StructuredDocumentation","src":"81668:29:14","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"81711:4:14","parameters":{"id":14405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14402,"mutability":"mutable","name":"account","nameLocation":"81724:7:14","nodeType":"VariableDeclaration","scope":14407,"src":"81716:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14401,"name":"address","nodeType":"ElementaryTypeName","src":"81716:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14404,"mutability":"mutable","name":"newBalance","nameLocation":"81741:10:14","nodeType":"VariableDeclaration","scope":14407,"src":"81733:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14403,"name":"uint256","nodeType":"ElementaryTypeName","src":"81733:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81715:37:14"},"returnParameters":{"id":14406,"nodeType":"ParameterList","parameters":[],"src":"81761:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14415,"nodeType":"FunctionDefinition","src":"82000:76:14","nodes":[],"documentation":{"id":14408,"nodeType":"StructuredDocumentation","src":"81768:227:14","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"82009:14:14","parameters":{"id":14411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14410,"mutability":"mutable","name":"snapshotId","nameLocation":"82032:10:14","nodeType":"VariableDeclaration","scope":14415,"src":"82024:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14409,"name":"uint256","nodeType":"ElementaryTypeName","src":"82024:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82023:20:14"},"returnParameters":{"id":14414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14413,"mutability":"mutable","name":"success","nameLocation":"82067:7:14","nodeType":"VariableDeclaration","scope":14415,"src":"82062:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14412,"name":"bool","nodeType":"ElementaryTypeName","src":"82062:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82061:14:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14419,"nodeType":"FunctionDefinition","src":"82148:36:14","nodes":[],"documentation":{"id":14416,"nodeType":"StructuredDocumentation","src":"82082:61:14","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"82157:15:14","parameters":{"id":14417,"nodeType":"ParameterList","parameters":[],"src":"82172:2:14"},"returnParameters":{"id":14418,"nodeType":"ParameterList","parameters":[],"src":"82183:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14425,"nodeType":"FunctionDefinition","src":"82360:52:14","nodes":[],"documentation":{"id":14420,"nodeType":"StructuredDocumentation","src":"82190:165:14","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"82369:10:14","parameters":{"id":14423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14422,"mutability":"mutable","name":"newDifficulty","nameLocation":"82388:13:14","nodeType":"VariableDeclaration","scope":14425,"src":"82380:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14421,"name":"uint256","nodeType":"ElementaryTypeName","src":"82380:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82379:23:14"},"returnParameters":{"id":14424,"nodeType":"ParameterList","parameters":[],"src":"82411:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14431,"nodeType":"FunctionDefinition","src":"82471:61:14","nodes":[],"documentation":{"id":14426,"nodeType":"StructuredDocumentation","src":"82418:48:14","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"82480:9:14","parameters":{"id":14429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14428,"mutability":"mutable","name":"pathToStateJson","nameLocation":"82506:15:14","nodeType":"VariableDeclaration","scope":14431,"src":"82490:31:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14427,"name":"string","nodeType":"ElementaryTypeName","src":"82490:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82489:33:14"},"returnParameters":{"id":14430,"nodeType":"ParameterList","parameters":[],"src":"82531:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14439,"nodeType":"FunctionDefinition","src":"82569:74:14","nodes":[],"documentation":{"id":14432,"nodeType":"StructuredDocumentation","src":"82538:26:14","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"82578:4:14","parameters":{"id":14437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14434,"mutability":"mutable","name":"target","nameLocation":"82591:6:14","nodeType":"VariableDeclaration","scope":14439,"src":"82583:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14433,"name":"address","nodeType":"ElementaryTypeName","src":"82583:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14436,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"82614:18:14","nodeType":"VariableDeclaration","scope":14439,"src":"82599:33:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14435,"name":"bytes","nodeType":"ElementaryTypeName","src":"82599:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82582:51:14"},"returnParameters":{"id":14438,"nodeType":"ParameterList","parameters":[],"src":"82642:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14445,"nodeType":"FunctionDefinition","src":"82679:42:14","nodes":[],"documentation":{"id":14440,"nodeType":"StructuredDocumentation","src":"82649:25:14","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"82688:3:14","parameters":{"id":14443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14442,"mutability":"mutable","name":"newBasefee","nameLocation":"82700:10:14","nodeType":"VariableDeclaration","scope":14445,"src":"82692:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14441,"name":"uint256","nodeType":"ElementaryTypeName","src":"82692:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82691:20:14"},"returnParameters":{"id":14444,"nodeType":"ParameterList","parameters":[],"src":"82720:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14452,"nodeType":"FunctionDefinition","src":"82899:73:14","nodes":[],"documentation":{"id":14446,"nodeType":"StructuredDocumentation","src":"82727:167:14","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"82908:13:14","parameters":{"id":14447,"nodeType":"ParameterList","parameters":[],"src":"82921:2:14"},"returnParameters":{"id":14451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14450,"mutability":"mutable","name":"hashes","nameLocation":"82964:6:14","nodeType":"VariableDeclaration","scope":14452,"src":"82947:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82947:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14449,"nodeType":"ArrayTypeName","src":"82947:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"82946:25:14"},"scope":14948,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14460,"nodeType":"FunctionDefinition","src":"83039:79:14","nodes":[],"documentation":{"id":14453,"nodeType":"StructuredDocumentation","src":"82978:56:14","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"83048:12:14","parameters":{"id":14456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14455,"mutability":"mutable","name":"account","nameLocation":"83069:7:14","nodeType":"VariableDeclaration","scope":14460,"src":"83061:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14454,"name":"address","nodeType":"ElementaryTypeName","src":"83061:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83060:17:14"},"returnParameters":{"id":14459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14458,"mutability":"mutable","name":"persistent","nameLocation":"83106:10:14","nodeType":"VariableDeclaration","scope":14460,"src":"83101:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14457,"name":"bool","nodeType":"ElementaryTypeName","src":"83101:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83100:17:14"},"scope":14948,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14466,"nodeType":"FunctionDefinition","src":"83199:63:14","nodes":[],"documentation":{"id":14461,"nodeType":"StructuredDocumentation","src":"83124:70:14","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"83208:10:14","parameters":{"id":14464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14463,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"83235:16:14","nodeType":"VariableDeclaration","scope":14466,"src":"83219:32:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14462,"name":"string","nodeType":"ElementaryTypeName","src":"83219:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83218:34:14"},"returnParameters":{"id":14465,"nodeType":"ParameterList","parameters":[],"src":"83261:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14472,"nodeType":"FunctionDefinition","src":"83465:50:14","nodes":[],"documentation":{"id":14467,"nodeType":"StructuredDocumentation","src":"83268:192:14","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83474:14:14","parameters":{"id":14470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14469,"mutability":"mutable","name":"account","nameLocation":"83497:7:14","nodeType":"VariableDeclaration","scope":14472,"src":"83489:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14468,"name":"address","nodeType":"ElementaryTypeName","src":"83489:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83488:17:14"},"returnParameters":{"id":14471,"nodeType":"ParameterList","parameters":[],"src":"83514:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14480,"nodeType":"FunctionDefinition","src":"83560:69:14","nodes":[],"documentation":{"id":14473,"nodeType":"StructuredDocumentation","src":"83521:34:14","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83569:14:14","parameters":{"id":14478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14475,"mutability":"mutable","name":"account0","nameLocation":"83592:8:14","nodeType":"VariableDeclaration","scope":14480,"src":"83584:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14474,"name":"address","nodeType":"ElementaryTypeName","src":"83584:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14477,"mutability":"mutable","name":"account1","nameLocation":"83610:8:14","nodeType":"VariableDeclaration","scope":14480,"src":"83602:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14476,"name":"address","nodeType":"ElementaryTypeName","src":"83602:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83583:36:14"},"returnParameters":{"id":14479,"nodeType":"ParameterList","parameters":[],"src":"83628:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14490,"nodeType":"FunctionDefinition","src":"83674:87:14","nodes":[],"documentation":{"id":14481,"nodeType":"StructuredDocumentation","src":"83635:34:14","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83683:14:14","parameters":{"id":14488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14483,"mutability":"mutable","name":"account0","nameLocation":"83706:8:14","nodeType":"VariableDeclaration","scope":14490,"src":"83698:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14482,"name":"address","nodeType":"ElementaryTypeName","src":"83698:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14485,"mutability":"mutable","name":"account1","nameLocation":"83724:8:14","nodeType":"VariableDeclaration","scope":14490,"src":"83716:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14484,"name":"address","nodeType":"ElementaryTypeName","src":"83716:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14487,"mutability":"mutable","name":"account2","nameLocation":"83742:8:14","nodeType":"VariableDeclaration","scope":14490,"src":"83734:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14486,"name":"address","nodeType":"ElementaryTypeName","src":"83734:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83697:54:14"},"returnParameters":{"id":14489,"nodeType":"ParameterList","parameters":[],"src":"83760:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14497,"nodeType":"FunctionDefinition","src":"83806:62:14","nodes":[],"documentation":{"id":14491,"nodeType":"StructuredDocumentation","src":"83767:34:14","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83815:14:14","parameters":{"id":14495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14494,"mutability":"mutable","name":"accounts","nameLocation":"83849:8:14","nodeType":"VariableDeclaration","scope":14497,"src":"83830:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14492,"name":"address","nodeType":"ElementaryTypeName","src":"83830:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14493,"nodeType":"ArrayTypeName","src":"83830:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"83829:29:14"},"returnParameters":{"id":14496,"nodeType":"ParameterList","parameters":[],"src":"83867:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14507,"nodeType":"FunctionDefinition","src":"83939:97:14","nodes":[],"documentation":{"id":14498,"nodeType":"StructuredDocumentation","src":"83874:60:14","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"83948:14:14","parameters":{"id":14505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14500,"mutability":"mutable","name":"callee","nameLocation":"83971:6:14","nodeType":"VariableDeclaration","scope":14507,"src":"83963:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14499,"name":"address","nodeType":"ElementaryTypeName","src":"83963:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14502,"mutability":"mutable","name":"data","nameLocation":"83994:4:14","nodeType":"VariableDeclaration","scope":14507,"src":"83979:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14501,"name":"bytes","nodeType":"ElementaryTypeName","src":"83979:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14504,"mutability":"mutable","name":"revertData","nameLocation":"84015:10:14","nodeType":"VariableDeclaration","scope":14507,"src":"84000:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14503,"name":"bytes","nodeType":"ElementaryTypeName","src":"84000:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"83962:64:14"},"returnParameters":{"id":14506,"nodeType":"ParameterList","parameters":[],"src":"84035:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14519,"nodeType":"FunctionDefinition","src":"84136:123:14","nodes":[],"documentation":{"id":14508,"nodeType":"StructuredDocumentation","src":"84042:89:14","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"84145:14:14","parameters":{"id":14517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14510,"mutability":"mutable","name":"callee","nameLocation":"84168:6:14","nodeType":"VariableDeclaration","scope":14519,"src":"84160:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14509,"name":"address","nodeType":"ElementaryTypeName","src":"84160:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14512,"mutability":"mutable","name":"msgValue","nameLocation":"84184:8:14","nodeType":"VariableDeclaration","scope":14519,"src":"84176:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14511,"name":"uint256","nodeType":"ElementaryTypeName","src":"84176:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14514,"mutability":"mutable","name":"data","nameLocation":"84209:4:14","nodeType":"VariableDeclaration","scope":14519,"src":"84194:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14513,"name":"bytes","nodeType":"ElementaryTypeName","src":"84194:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14516,"mutability":"mutable","name":"revertData","nameLocation":"84230:10:14","nodeType":"VariableDeclaration","scope":14519,"src":"84215:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14515,"name":"bytes","nodeType":"ElementaryTypeName","src":"84215:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84159:82:14"},"returnParameters":{"id":14518,"nodeType":"ParameterList","parameters":[],"src":"84258:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14529,"nodeType":"FunctionDefinition","src":"84519:91:14","nodes":[],"documentation":{"id":14520,"nodeType":"StructuredDocumentation","src":"84265:249:14","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"84528:8:14","parameters":{"id":14527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14522,"mutability":"mutable","name":"callee","nameLocation":"84545:6:14","nodeType":"VariableDeclaration","scope":14529,"src":"84537:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14521,"name":"address","nodeType":"ElementaryTypeName","src":"84537:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14524,"mutability":"mutable","name":"data","nameLocation":"84568:4:14","nodeType":"VariableDeclaration","scope":14529,"src":"84553:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14523,"name":"bytes","nodeType":"ElementaryTypeName","src":"84553:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14526,"mutability":"mutable","name":"returnData","nameLocation":"84589:10:14","nodeType":"VariableDeclaration","scope":14529,"src":"84574:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14525,"name":"bytes","nodeType":"ElementaryTypeName","src":"84574:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84536:64:14"},"returnParameters":{"id":14528,"nodeType":"ParameterList","parameters":[],"src":"84609:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14541,"nodeType":"FunctionDefinition","src":"84785:109:14","nodes":[],"documentation":{"id":14530,"nodeType":"StructuredDocumentation","src":"84616:164:14","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"84794:8:14","parameters":{"id":14539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14532,"mutability":"mutable","name":"callee","nameLocation":"84811:6:14","nodeType":"VariableDeclaration","scope":14541,"src":"84803:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14531,"name":"address","nodeType":"ElementaryTypeName","src":"84803:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14534,"mutability":"mutable","name":"msgValue","nameLocation":"84827:8:14","nodeType":"VariableDeclaration","scope":14541,"src":"84819:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14533,"name":"uint256","nodeType":"ElementaryTypeName","src":"84819:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14536,"mutability":"mutable","name":"data","nameLocation":"84852:4:14","nodeType":"VariableDeclaration","scope":14541,"src":"84837:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14535,"name":"bytes","nodeType":"ElementaryTypeName","src":"84837:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14538,"mutability":"mutable","name":"returnData","nameLocation":"84873:10:14","nodeType":"VariableDeclaration","scope":14541,"src":"84858:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14537,"name":"bytes","nodeType":"ElementaryTypeName","src":"84858:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84802:82:14"},"returnParameters":{"id":14540,"nodeType":"ParameterList","parameters":[],"src":"84893:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14547,"nodeType":"FunctionDefinition","src":"84969:43:14","nodes":[],"documentation":{"id":14542,"nodeType":"StructuredDocumentation","src":"84900:64:14","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"84978:5:14","parameters":{"id":14545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14544,"mutability":"mutable","name":"msgSender","nameLocation":"84992:9:14","nodeType":"VariableDeclaration","scope":14547,"src":"84984:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14543,"name":"address","nodeType":"ElementaryTypeName","src":"84984:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84983:19:14"},"returnParameters":{"id":14546,"nodeType":"ParameterList","parameters":[],"src":"85011:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14555,"nodeType":"FunctionDefinition","src":"85131:61:14","nodes":[],"documentation":{"id":14548,"nodeType":"StructuredDocumentation","src":"85018:108:14","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"85140:5:14","parameters":{"id":14553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14550,"mutability":"mutable","name":"msgSender","nameLocation":"85154:9:14","nodeType":"VariableDeclaration","scope":14555,"src":"85146:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14549,"name":"address","nodeType":"ElementaryTypeName","src":"85146:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14552,"mutability":"mutable","name":"txOrigin","nameLocation":"85173:8:14","nodeType":"VariableDeclaration","scope":14555,"src":"85165:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14551,"name":"address","nodeType":"ElementaryTypeName","src":"85165:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85145:37:14"},"returnParameters":{"id":14554,"nodeType":"ParameterList","parameters":[],"src":"85191:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14561,"nodeType":"FunctionDefinition","src":"85369:52:14","nodes":[],"documentation":{"id":14556,"nodeType":"StructuredDocumentation","src":"85198:166:14","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"85378:10:14","parameters":{"id":14559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14558,"mutability":"mutable","name":"newPrevrandao","nameLocation":"85397:13:14","nodeType":"VariableDeclaration","scope":14561,"src":"85389:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85389:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"85388:23:14"},"returnParameters":{"id":14560,"nodeType":"ParameterList","parameters":[],"src":"85420:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14567,"nodeType":"FunctionDefinition","src":"85598:52:14","nodes":[],"documentation":{"id":14562,"nodeType":"StructuredDocumentation","src":"85427:166:14","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"85607:10:14","parameters":{"id":14565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14564,"mutability":"mutable","name":"newPrevrandao","nameLocation":"85626:13:14","nodeType":"VariableDeclaration","scope":14567,"src":"85618:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14563,"name":"uint256","nodeType":"ElementaryTypeName","src":"85618:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85617:23:14"},"returnParameters":{"id":14566,"nodeType":"ParameterList","parameters":[],"src":"85649:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14578,"nodeType":"FunctionDefinition","src":"85778:101:14","nodes":[],"documentation":{"id":14568,"nodeType":"StructuredDocumentation","src":"85656:117:14","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"85787:11:14","parameters":{"id":14569,"nodeType":"ParameterList","parameters":[],"src":"85798:2:14"},"returnParameters":{"id":14577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14572,"mutability":"mutable","name":"callerMode","nameLocation":"85830:10:14","nodeType":"VariableDeclaration","scope":14578,"src":"85819:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$10980","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":14571,"nodeType":"UserDefinedTypeName","pathNode":{"id":14570,"name":"CallerMode","nameLocations":["85819:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":10980,"src":"85819:10:14"},"referencedDeclaration":10980,"src":"85819:10:14","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$10980","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":14574,"mutability":"mutable","name":"msgSender","nameLocation":"85850:9:14","nodeType":"VariableDeclaration","scope":14578,"src":"85842:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14573,"name":"address","nodeType":"ElementaryTypeName","src":"85842:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14576,"mutability":"mutable","name":"txOrigin","nameLocation":"85869:8:14","nodeType":"VariableDeclaration","scope":14578,"src":"85861:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14575,"name":"address","nodeType":"ElementaryTypeName","src":"85861:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85818:60:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14584,"nodeType":"FunctionDefinition","src":"85967:46:14","nodes":[],"documentation":{"id":14579,"nodeType":"StructuredDocumentation","src":"85885:77:14","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"85976:10:14","parameters":{"id":14582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14581,"mutability":"mutable","name":"account","nameLocation":"85995:7:14","nodeType":"VariableDeclaration","scope":14584,"src":"85987:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14580,"name":"address","nodeType":"ElementaryTypeName","src":"85987:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85986:17:14"},"returnParameters":{"id":14583,"nodeType":"ParameterList","parameters":[],"src":"86012:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14592,"nodeType":"FunctionDefinition","src":"86356:70:14","nodes":[],"documentation":{"id":14585,"nodeType":"StructuredDocumentation","src":"86019:332:14","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"86365:8:14","parameters":{"id":14588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14587,"mutability":"mutable","name":"snapshotId","nameLocation":"86382:10:14","nodeType":"VariableDeclaration","scope":14592,"src":"86374:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14586,"name":"uint256","nodeType":"ElementaryTypeName","src":"86374:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86373:20:14"},"returnParameters":{"id":14591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14590,"mutability":"mutable","name":"success","nameLocation":"86417:7:14","nodeType":"VariableDeclaration","scope":14592,"src":"86412:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14589,"name":"bool","nodeType":"ElementaryTypeName","src":"86412:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"86411:14:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14600,"nodeType":"FunctionDefinition","src":"86709:79:14","nodes":[],"documentation":{"id":14593,"nodeType":"StructuredDocumentation","src":"86432:272:14","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"86718:17:14","parameters":{"id":14596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14595,"mutability":"mutable","name":"snapshotId","nameLocation":"86744:10:14","nodeType":"VariableDeclaration","scope":14600,"src":"86736:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14594,"name":"uint256","nodeType":"ElementaryTypeName","src":"86736:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86735:20:14"},"returnParameters":{"id":14599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14598,"mutability":"mutable","name":"success","nameLocation":"86779:7:14","nodeType":"VariableDeclaration","scope":14600,"src":"86774:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14597,"name":"bool","nodeType":"ElementaryTypeName","src":"86774:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"86773:14:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14606,"nodeType":"FunctionDefinition","src":"86885:52:14","nodes":[],"documentation":{"id":14601,"nodeType":"StructuredDocumentation","src":"86794:86:14","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"86894:16:14","parameters":{"id":14604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14603,"mutability":"mutable","name":"account","nameLocation":"86919:7:14","nodeType":"VariableDeclaration","scope":14606,"src":"86911:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14602,"name":"address","nodeType":"ElementaryTypeName","src":"86911:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86910:17:14"},"returnParameters":{"id":14605,"nodeType":"ParameterList","parameters":[],"src":"86936:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14613,"nodeType":"FunctionDefinition","src":"86984:64:14","nodes":[],"documentation":{"id":14607,"nodeType":"StructuredDocumentation","src":"86943:36:14","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"86993:16:14","parameters":{"id":14611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14610,"mutability":"mutable","name":"accounts","nameLocation":"87029:8:14","nodeType":"VariableDeclaration","scope":14613,"src":"87010:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14608,"name":"address","nodeType":"ElementaryTypeName","src":"87010:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14609,"nodeType":"ArrayTypeName","src":"87010:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"87009:29:14"},"returnParameters":{"id":14612,"nodeType":"ParameterList","parameters":[],"src":"87047:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14619,"nodeType":"FunctionDefinition","src":"87083:42:14","nodes":[],"documentation":{"id":14614,"nodeType":"StructuredDocumentation","src":"87054:24:14","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"87092:4:14","parameters":{"id":14617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14616,"mutability":"mutable","name":"newHeight","nameLocation":"87105:9:14","nodeType":"VariableDeclaration","scope":14619,"src":"87097:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14615,"name":"uint256","nodeType":"ElementaryTypeName","src":"87097:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87096:19:14"},"returnParameters":{"id":14618,"nodeType":"ParameterList","parameters":[],"src":"87124:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14625,"nodeType":"FunctionDefinition","src":"87264:48:14","nodes":[],"documentation":{"id":14620,"nodeType":"StructuredDocumentation","src":"87131:128:14","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87273:8:14","parameters":{"id":14623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14622,"mutability":"mutable","name":"blockNumber","nameLocation":"87290:11:14","nodeType":"VariableDeclaration","scope":14625,"src":"87282:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14621,"name":"uint256","nodeType":"ElementaryTypeName","src":"87282:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87281:21:14"},"returnParameters":{"id":14624,"nodeType":"ParameterList","parameters":[],"src":"87311:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14631,"nodeType":"FunctionDefinition","src":"87527:43:14","nodes":[],"documentation":{"id":14626,"nodeType":"StructuredDocumentation","src":"87318:204:14","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87536:8:14","parameters":{"id":14629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14628,"mutability":"mutable","name":"txHash","nameLocation":"87553:6:14","nodeType":"VariableDeclaration","scope":14631,"src":"87545:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87545:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87544:16:14"},"returnParameters":{"id":14630,"nodeType":"ParameterList","parameters":[],"src":"87569:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14639,"nodeType":"FunctionDefinition","src":"87630:64:14","nodes":[],"documentation":{"id":14632,"nodeType":"StructuredDocumentation","src":"87576:49:14","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87639:8:14","parameters":{"id":14637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14634,"mutability":"mutable","name":"forkId","nameLocation":"87656:6:14","nodeType":"VariableDeclaration","scope":14639,"src":"87648:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14633,"name":"uint256","nodeType":"ElementaryTypeName","src":"87648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14636,"mutability":"mutable","name":"blockNumber","nameLocation":"87672:11:14","nodeType":"VariableDeclaration","scope":14639,"src":"87664:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14635,"name":"uint256","nodeType":"ElementaryTypeName","src":"87664:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87647:37:14"},"returnParameters":{"id":14638,"nodeType":"ParameterList","parameters":[],"src":"87693:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14647,"nodeType":"FunctionDefinition","src":"87830:59:14","nodes":[],"documentation":{"id":14640,"nodeType":"StructuredDocumentation","src":"87700:125:14","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87839:8:14","parameters":{"id":14645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14642,"mutability":"mutable","name":"forkId","nameLocation":"87856:6:14","nodeType":"VariableDeclaration","scope":14647,"src":"87848:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14641,"name":"uint256","nodeType":"ElementaryTypeName","src":"87848:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14644,"mutability":"mutable","name":"txHash","nameLocation":"87872:6:14","nodeType":"VariableDeclaration","scope":14647,"src":"87864:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87864:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87847:32:14"},"returnParameters":{"id":14646,"nodeType":"ParameterList","parameters":[],"src":"87888:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14653,"nodeType":"FunctionDefinition","src":"88002:45:14","nodes":[],"documentation":{"id":14648,"nodeType":"StructuredDocumentation","src":"87895:102:14","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"88011:10:14","parameters":{"id":14651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14650,"mutability":"mutable","name":"forkId","nameLocation":"88030:6:14","nodeType":"VariableDeclaration","scope":14653,"src":"88022:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14649,"name":"uint256","nodeType":"ElementaryTypeName","src":"88022:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88021:16:14"},"returnParameters":{"id":14652,"nodeType":"ParameterList","parameters":[],"src":"88046:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14661,"nodeType":"FunctionDefinition","src":"88197:71:14","nodes":[],"documentation":{"id":14654,"nodeType":"StructuredDocumentation","src":"88053:139:14","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"88206:12:14","parameters":{"id":14659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14656,"mutability":"mutable","name":"blockNumber","nameLocation":"88227:11:14","nodeType":"VariableDeclaration","scope":14661,"src":"88219:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14655,"name":"uint256","nodeType":"ElementaryTypeName","src":"88219:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14658,"mutability":"mutable","name":"blockHash","nameLocation":"88248:9:14","nodeType":"VariableDeclaration","scope":14661,"src":"88240:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88240:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"88218:40:14"},"returnParameters":{"id":14660,"nodeType":"ParameterList","parameters":[],"src":"88267:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14669,"nodeType":"FunctionDefinition","src":"88366:61:14","nodes":[],"documentation":{"id":14662,"nodeType":"StructuredDocumentation","src":"88274:87:14","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"88375:8:14","parameters":{"id":14667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14664,"mutability":"mutable","name":"account","nameLocation":"88392:7:14","nodeType":"VariableDeclaration","scope":14669,"src":"88384:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14663,"name":"address","nodeType":"ElementaryTypeName","src":"88384:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14666,"mutability":"mutable","name":"newNonce","nameLocation":"88408:8:14","nodeType":"VariableDeclaration","scope":14669,"src":"88401:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14665,"name":"uint64","nodeType":"ElementaryTypeName","src":"88401:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88383:34:14"},"returnParameters":{"id":14668,"nodeType":"ParameterList","parameters":[],"src":"88426:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14677,"nodeType":"FunctionDefinition","src":"88493:67:14","nodes":[],"documentation":{"id":14670,"nodeType":"StructuredDocumentation","src":"88433:55:14","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"88502:14:14","parameters":{"id":14675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14672,"mutability":"mutable","name":"account","nameLocation":"88525:7:14","nodeType":"VariableDeclaration","scope":14677,"src":"88517:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14671,"name":"address","nodeType":"ElementaryTypeName","src":"88517:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14674,"mutability":"mutable","name":"newNonce","nameLocation":"88541:8:14","nodeType":"VariableDeclaration","scope":14677,"src":"88534:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14673,"name":"uint64","nodeType":"ElementaryTypeName","src":"88534:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88516:34:14"},"returnParameters":{"id":14676,"nodeType":"ParameterList","parameters":[],"src":"88559:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14683,"nodeType":"FunctionDefinition","src":"88715:58:14","nodes":[],"documentation":{"id":14678,"nodeType":"StructuredDocumentation","src":"88566:144:14","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"88724:8:14","parameters":{"id":14679,"nodeType":"ParameterList","parameters":[],"src":"88732:2:14"},"returnParameters":{"id":14682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14681,"mutability":"mutable","name":"snapshotId","nameLocation":"88761:10:14","nodeType":"VariableDeclaration","scope":14683,"src":"88753:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14680,"name":"uint256","nodeType":"ElementaryTypeName","src":"88753:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88752:20:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14689,"nodeType":"FunctionDefinition","src":"88880:48:14","nodes":[],"documentation":{"id":14684,"nodeType":"StructuredDocumentation","src":"88779:96:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"88889:10:14","parameters":{"id":14687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14686,"mutability":"mutable","name":"msgSender","nameLocation":"88908:9:14","nodeType":"VariableDeclaration","scope":14689,"src":"88900:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14685,"name":"address","nodeType":"ElementaryTypeName","src":"88900:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"88899:19:14"},"returnParameters":{"id":14688,"nodeType":"ParameterList","parameters":[],"src":"88927:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14697,"nodeType":"FunctionDefinition","src":"89079:66:14","nodes":[],"documentation":{"id":14690,"nodeType":"StructuredDocumentation","src":"88934:140:14","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"89088:10:14","parameters":{"id":14695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14692,"mutability":"mutable","name":"msgSender","nameLocation":"89107:9:14","nodeType":"VariableDeclaration","scope":14697,"src":"89099:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14691,"name":"address","nodeType":"ElementaryTypeName","src":"89099:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14694,"mutability":"mutable","name":"txOrigin","nameLocation":"89126:8:14","nodeType":"VariableDeclaration","scope":14697,"src":"89118:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14693,"name":"address","nodeType":"ElementaryTypeName","src":"89118:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89098:37:14"},"returnParameters":{"id":14696,"nodeType":"ParameterList","parameters":[],"src":"89144:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14701,"nodeType":"FunctionDefinition","src":"89220:30:14","nodes":[],"documentation":{"id":14698,"nodeType":"StructuredDocumentation","src":"89151:64:14","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"89229:9:14","parameters":{"id":14699,"nodeType":"ParameterList","parameters":[],"src":"89238:2:14"},"returnParameters":{"id":14700,"nodeType":"ParameterList","parameters":[],"src":"89249:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14711,"nodeType":"FunctionDefinition","src":"89308:69:14","nodes":[],"documentation":{"id":14702,"nodeType":"StructuredDocumentation","src":"89256:47:14","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"89317:5:14","parameters":{"id":14709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14704,"mutability":"mutable","name":"target","nameLocation":"89331:6:14","nodeType":"VariableDeclaration","scope":14711,"src":"89323:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14703,"name":"address","nodeType":"ElementaryTypeName","src":"89323:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14706,"mutability":"mutable","name":"slot","nameLocation":"89347:4:14","nodeType":"VariableDeclaration","scope":14711,"src":"89339:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89339:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14708,"mutability":"mutable","name":"value","nameLocation":"89361:5:14","nodeType":"VariableDeclaration","scope":14711,"src":"89353:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89353:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89322:45:14"},"returnParameters":{"id":14710,"nodeType":"ParameterList","parameters":[],"src":"89376:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14717,"nodeType":"FunctionDefinition","src":"89480:43:14","nodes":[],"documentation":{"id":14712,"nodeType":"StructuredDocumentation","src":"89383:92:14","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"89489:8:14","parameters":{"id":14715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14714,"mutability":"mutable","name":"txHash","nameLocation":"89506:6:14","nodeType":"VariableDeclaration","scope":14717,"src":"89498:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89498:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89497:16:14"},"returnParameters":{"id":14716,"nodeType":"ParameterList","parameters":[],"src":"89522:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14725,"nodeType":"FunctionDefinition","src":"89625:59:14","nodes":[],"documentation":{"id":14718,"nodeType":"StructuredDocumentation","src":"89529:91:14","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"89634:8:14","parameters":{"id":14723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14720,"mutability":"mutable","name":"forkId","nameLocation":"89651:6:14","nodeType":"VariableDeclaration","scope":14725,"src":"89643:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14719,"name":"uint256","nodeType":"ElementaryTypeName","src":"89643:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14722,"mutability":"mutable","name":"txHash","nameLocation":"89667:6:14","nodeType":"VariableDeclaration","scope":14725,"src":"89659:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89659:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89642:32:14"},"returnParameters":{"id":14724,"nodeType":"ParameterList","parameters":[],"src":"89683:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14731,"nodeType":"FunctionDefinition","src":"89718:50:14","nodes":[],"documentation":{"id":14726,"nodeType":"StructuredDocumentation","src":"89690:23:14","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"89727:10:14","parameters":{"id":14729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14728,"mutability":"mutable","name":"newGasPrice","nameLocation":"89746:11:14","nodeType":"VariableDeclaration","scope":14731,"src":"89738:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14727,"name":"uint256","nodeType":"ElementaryTypeName","src":"89738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89737:21:14"},"returnParameters":{"id":14730,"nodeType":"ParameterList","parameters":[],"src":"89767:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14737,"nodeType":"FunctionDefinition","src":"89806:45:14","nodes":[],"documentation":{"id":14732,"nodeType":"StructuredDocumentation","src":"89774:27:14","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"89815:4:14","parameters":{"id":14735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14734,"mutability":"mutable","name":"newTimestamp","nameLocation":"89828:12:14","nodeType":"VariableDeclaration","scope":14737,"src":"89820:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14733,"name":"uint256","nodeType":"ElementaryTypeName","src":"89820:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89819:22:14"},"returnParameters":{"id":14736,"nodeType":"ParameterList","parameters":[],"src":"89850:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14749,"nodeType":"FunctionDefinition","src":"90003:105:14","nodes":[],"documentation":{"id":14738,"nodeType":"StructuredDocumentation","src":"89891:107:14","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"90012:16:14","parameters":{"id":14747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14740,"mutability":"mutable","name":"callee","nameLocation":"90037:6:14","nodeType":"VariableDeclaration","scope":14749,"src":"90029:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14739,"name":"address","nodeType":"ElementaryTypeName","src":"90029:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14742,"mutability":"mutable","name":"msgValue","nameLocation":"90053:8:14","nodeType":"VariableDeclaration","scope":14749,"src":"90045:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14741,"name":"uint256","nodeType":"ElementaryTypeName","src":"90045:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14744,"mutability":"mutable","name":"minGas","nameLocation":"90070:6:14","nodeType":"VariableDeclaration","scope":14749,"src":"90063:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14743,"name":"uint64","nodeType":"ElementaryTypeName","src":"90063:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14746,"mutability":"mutable","name":"data","nameLocation":"90093:4:14","nodeType":"VariableDeclaration","scope":14749,"src":"90078:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14745,"name":"bytes","nodeType":"ElementaryTypeName","src":"90078:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90028:70:14"},"returnParameters":{"id":14748,"nodeType":"ParameterList","parameters":[],"src":"90107:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14763,"nodeType":"FunctionDefinition","src":"90241:127:14","nodes":[],"documentation":{"id":14750,"nodeType":"StructuredDocumentation","src":"90114:122:14","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"90250:16:14","parameters":{"id":14761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14752,"mutability":"mutable","name":"callee","nameLocation":"90275:6:14","nodeType":"VariableDeclaration","scope":14763,"src":"90267:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14751,"name":"address","nodeType":"ElementaryTypeName","src":"90267:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14754,"mutability":"mutable","name":"msgValue","nameLocation":"90291:8:14","nodeType":"VariableDeclaration","scope":14763,"src":"90283:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14753,"name":"uint256","nodeType":"ElementaryTypeName","src":"90283:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14756,"mutability":"mutable","name":"minGas","nameLocation":"90308:6:14","nodeType":"VariableDeclaration","scope":14763,"src":"90301:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14755,"name":"uint64","nodeType":"ElementaryTypeName","src":"90301:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14758,"mutability":"mutable","name":"data","nameLocation":"90331:4:14","nodeType":"VariableDeclaration","scope":14763,"src":"90316:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14757,"name":"bytes","nodeType":"ElementaryTypeName","src":"90316:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14760,"mutability":"mutable","name":"count","nameLocation":"90344:5:14","nodeType":"VariableDeclaration","scope":14763,"src":"90337:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14759,"name":"uint64","nodeType":"ElementaryTypeName","src":"90337:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90266:84:14"},"returnParameters":{"id":14762,"nodeType":"ParameterList","parameters":[],"src":"90367:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14771,"nodeType":"FunctionDefinition","src":"90500:66:14","nodes":[],"documentation":{"id":14764,"nodeType":"StructuredDocumentation","src":"90374:121:14","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"90509:10:14","parameters":{"id":14769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14766,"mutability":"mutable","name":"callee","nameLocation":"90528:6:14","nodeType":"VariableDeclaration","scope":14771,"src":"90520:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14765,"name":"address","nodeType":"ElementaryTypeName","src":"90520:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14768,"mutability":"mutable","name":"data","nameLocation":"90551:4:14","nodeType":"VariableDeclaration","scope":14771,"src":"90536:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14767,"name":"bytes","nodeType":"ElementaryTypeName","src":"90536:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90519:37:14"},"returnParameters":{"id":14770,"nodeType":"ParameterList","parameters":[],"src":"90565:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14781,"nodeType":"FunctionDefinition","src":"90653:80:14","nodes":[],"documentation":{"id":14772,"nodeType":"StructuredDocumentation","src":"90572:76:14","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"90662:10:14","parameters":{"id":14779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14774,"mutability":"mutable","name":"callee","nameLocation":"90681:6:14","nodeType":"VariableDeclaration","scope":14781,"src":"90673:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14773,"name":"address","nodeType":"ElementaryTypeName","src":"90673:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14776,"mutability":"mutable","name":"data","nameLocation":"90704:4:14","nodeType":"VariableDeclaration","scope":14781,"src":"90689:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14775,"name":"bytes","nodeType":"ElementaryTypeName","src":"90689:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14778,"mutability":"mutable","name":"count","nameLocation":"90717:5:14","nodeType":"VariableDeclaration","scope":14781,"src":"90710:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14777,"name":"uint64","nodeType":"ElementaryTypeName","src":"90710:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90672:51:14"},"returnParameters":{"id":14780,"nodeType":"ParameterList","parameters":[],"src":"90732:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14791,"nodeType":"FunctionDefinition","src":"90821:84:14","nodes":[],"documentation":{"id":14782,"nodeType":"StructuredDocumentation","src":"90739:77:14","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"90830:10:14","parameters":{"id":14789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14784,"mutability":"mutable","name":"callee","nameLocation":"90849:6:14","nodeType":"VariableDeclaration","scope":14791,"src":"90841:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14783,"name":"address","nodeType":"ElementaryTypeName","src":"90841:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14786,"mutability":"mutable","name":"msgValue","nameLocation":"90865:8:14","nodeType":"VariableDeclaration","scope":14791,"src":"90857:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14785,"name":"uint256","nodeType":"ElementaryTypeName","src":"90857:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14788,"mutability":"mutable","name":"data","nameLocation":"90890:4:14","nodeType":"VariableDeclaration","scope":14791,"src":"90875:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14787,"name":"bytes","nodeType":"ElementaryTypeName","src":"90875:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90840:55:14"},"returnParameters":{"id":14790,"nodeType":"ParameterList","parameters":[],"src":"90904:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14803,"nodeType":"FunctionDefinition","src":"91008:98:14","nodes":[],"documentation":{"id":14792,"nodeType":"StructuredDocumentation","src":"90911:92:14","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"91017:10:14","parameters":{"id":14801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14794,"mutability":"mutable","name":"callee","nameLocation":"91036:6:14","nodeType":"VariableDeclaration","scope":14803,"src":"91028:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14793,"name":"address","nodeType":"ElementaryTypeName","src":"91028:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14796,"mutability":"mutable","name":"msgValue","nameLocation":"91052:8:14","nodeType":"VariableDeclaration","scope":14803,"src":"91044:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14795,"name":"uint256","nodeType":"ElementaryTypeName","src":"91044:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14798,"mutability":"mutable","name":"data","nameLocation":"91077:4:14","nodeType":"VariableDeclaration","scope":14803,"src":"91062:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14797,"name":"bytes","nodeType":"ElementaryTypeName","src":"91062:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14800,"mutability":"mutable","name":"count","nameLocation":"91090:5:14","nodeType":"VariableDeclaration","scope":14803,"src":"91083:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14799,"name":"uint64","nodeType":"ElementaryTypeName","src":"91083:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91027:69:14"},"returnParameters":{"id":14802,"nodeType":"ParameterList","parameters":[],"src":"91105:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14815,"nodeType":"FunctionDefinition","src":"91199:96:14","nodes":[],"documentation":{"id":14804,"nodeType":"StructuredDocumentation","src":"91112:82:14","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"91208:10:14","parameters":{"id":14813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14806,"mutability":"mutable","name":"callee","nameLocation":"91227:6:14","nodeType":"VariableDeclaration","scope":14815,"src":"91219:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14805,"name":"address","nodeType":"ElementaryTypeName","src":"91219:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14808,"mutability":"mutable","name":"msgValue","nameLocation":"91243:8:14","nodeType":"VariableDeclaration","scope":14815,"src":"91235:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14807,"name":"uint256","nodeType":"ElementaryTypeName","src":"91235:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14810,"mutability":"mutable","name":"gas","nameLocation":"91260:3:14","nodeType":"VariableDeclaration","scope":14815,"src":"91253:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14809,"name":"uint64","nodeType":"ElementaryTypeName","src":"91253:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14812,"mutability":"mutable","name":"data","nameLocation":"91280:4:14","nodeType":"VariableDeclaration","scope":14815,"src":"91265:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14811,"name":"bytes","nodeType":"ElementaryTypeName","src":"91265:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"91218:67:14"},"returnParameters":{"id":14814,"nodeType":"ParameterList","parameters":[],"src":"91294:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14829,"nodeType":"FunctionDefinition","src":"91404:110:14","nodes":[],"documentation":{"id":14816,"nodeType":"StructuredDocumentation","src":"91301:98:14","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"91413:10:14","parameters":{"id":14827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14818,"mutability":"mutable","name":"callee","nameLocation":"91432:6:14","nodeType":"VariableDeclaration","scope":14829,"src":"91424:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14817,"name":"address","nodeType":"ElementaryTypeName","src":"91424:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14820,"mutability":"mutable","name":"msgValue","nameLocation":"91448:8:14","nodeType":"VariableDeclaration","scope":14829,"src":"91440:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14819,"name":"uint256","nodeType":"ElementaryTypeName","src":"91440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14822,"mutability":"mutable","name":"gas","nameLocation":"91465:3:14","nodeType":"VariableDeclaration","scope":14829,"src":"91458:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14821,"name":"uint64","nodeType":"ElementaryTypeName","src":"91458:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14824,"mutability":"mutable","name":"data","nameLocation":"91485:4:14","nodeType":"VariableDeclaration","scope":14829,"src":"91470:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14823,"name":"bytes","nodeType":"ElementaryTypeName","src":"91470:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14826,"mutability":"mutable","name":"count","nameLocation":"91498:5:14","nodeType":"VariableDeclaration","scope":14829,"src":"91491:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14825,"name":"uint64","nodeType":"ElementaryTypeName","src":"91491:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91423:81:14"},"returnParameters":{"id":14828,"nodeType":"ParameterList","parameters":[],"src":"91513:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14843,"nodeType":"FunctionDefinition","src":"91873:134:14","nodes":[],"documentation":{"id":14830,"nodeType":"StructuredDocumentation","src":"91520:348:14","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"91882:19:14","parameters":{"id":14841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14832,"mutability":"mutable","name":"checkTopic0","nameLocation":"91907:11:14","nodeType":"VariableDeclaration","scope":14843,"src":"91902:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14831,"name":"bool","nodeType":"ElementaryTypeName","src":"91902:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14834,"mutability":"mutable","name":"checkTopic1","nameLocation":"91925:11:14","nodeType":"VariableDeclaration","scope":14843,"src":"91920:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14833,"name":"bool","nodeType":"ElementaryTypeName","src":"91920:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14836,"mutability":"mutable","name":"checkTopic2","nameLocation":"91943:11:14","nodeType":"VariableDeclaration","scope":14843,"src":"91938:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14835,"name":"bool","nodeType":"ElementaryTypeName","src":"91938:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14838,"mutability":"mutable","name":"checkTopic3","nameLocation":"91961:11:14","nodeType":"VariableDeclaration","scope":14843,"src":"91956:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14837,"name":"bool","nodeType":"ElementaryTypeName","src":"91956:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14840,"mutability":"mutable","name":"checkData","nameLocation":"91979:9:14","nodeType":"VariableDeclaration","scope":14843,"src":"91974:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14839,"name":"bool","nodeType":"ElementaryTypeName","src":"91974:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"91901:88:14"},"returnParameters":{"id":14842,"nodeType":"ParameterList","parameters":[],"src":"92006:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14859,"nodeType":"FunctionDefinition","src":"92110:197:14","nodes":[],"documentation":{"id":14844,"nodeType":"StructuredDocumentation","src":"92013:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92119:19:14","parameters":{"id":14857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14846,"mutability":"mutable","name":"checkTopic0","nameLocation":"92153:11:14","nodeType":"VariableDeclaration","scope":14859,"src":"92148:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14845,"name":"bool","nodeType":"ElementaryTypeName","src":"92148:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14848,"mutability":"mutable","name":"checkTopic1","nameLocation":"92179:11:14","nodeType":"VariableDeclaration","scope":14859,"src":"92174:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14847,"name":"bool","nodeType":"ElementaryTypeName","src":"92174:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14850,"mutability":"mutable","name":"checkTopic2","nameLocation":"92205:11:14","nodeType":"VariableDeclaration","scope":14859,"src":"92200:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14849,"name":"bool","nodeType":"ElementaryTypeName","src":"92200:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14852,"mutability":"mutable","name":"checkTopic3","nameLocation":"92231:11:14","nodeType":"VariableDeclaration","scope":14859,"src":"92226:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14851,"name":"bool","nodeType":"ElementaryTypeName","src":"92226:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14854,"mutability":"mutable","name":"checkData","nameLocation":"92257:9:14","nodeType":"VariableDeclaration","scope":14859,"src":"92252:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14853,"name":"bool","nodeType":"ElementaryTypeName","src":"92252:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14856,"mutability":"mutable","name":"emitter","nameLocation":"92284:7:14","nodeType":"VariableDeclaration","scope":14859,"src":"92276:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14855,"name":"address","nodeType":"ElementaryTypeName","src":"92276:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92138:159:14"},"returnParameters":{"id":14858,"nodeType":"ParameterList","parameters":[],"src":"92306:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14863,"nodeType":"FunctionDefinition","src":"92597:40:14","nodes":[],"documentation":{"id":14860,"nodeType":"StructuredDocumentation","src":"92313:279:14","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92606:19:14","parameters":{"id":14861,"nodeType":"ParameterList","parameters":[],"src":"92625:2:14"},"returnParameters":{"id":14862,"nodeType":"ParameterList","parameters":[],"src":"92636:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14869,"nodeType":"FunctionDefinition","src":"92740:55:14","nodes":[],"documentation":{"id":14864,"nodeType":"StructuredDocumentation","src":"92643:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92749:19:14","parameters":{"id":14867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14866,"mutability":"mutable","name":"emitter","nameLocation":"92777:7:14","nodeType":"VariableDeclaration","scope":14869,"src":"92769:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14865,"name":"address","nodeType":"ElementaryTypeName","src":"92769:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92768:17:14"},"returnParameters":{"id":14868,"nodeType":"ParameterList","parameters":[],"src":"92794:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14881,"nodeType":"FunctionDefinition","src":"93134:99:14","nodes":[],"documentation":{"id":14870,"nodeType":"StructuredDocumentation","src":"92801:328:14","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93143:10:14","parameters":{"id":14879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14872,"mutability":"mutable","name":"checkTopic1","nameLocation":"93159:11:14","nodeType":"VariableDeclaration","scope":14881,"src":"93154:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14871,"name":"bool","nodeType":"ElementaryTypeName","src":"93154:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14874,"mutability":"mutable","name":"checkTopic2","nameLocation":"93177:11:14","nodeType":"VariableDeclaration","scope":14881,"src":"93172:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14873,"name":"bool","nodeType":"ElementaryTypeName","src":"93172:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14876,"mutability":"mutable","name":"checkTopic3","nameLocation":"93195:11:14","nodeType":"VariableDeclaration","scope":14881,"src":"93190:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14875,"name":"bool","nodeType":"ElementaryTypeName","src":"93190:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14878,"mutability":"mutable","name":"checkData","nameLocation":"93213:9:14","nodeType":"VariableDeclaration","scope":14881,"src":"93208:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14877,"name":"bool","nodeType":"ElementaryTypeName","src":"93208:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"93153:70:14"},"returnParameters":{"id":14880,"nodeType":"ParameterList","parameters":[],"src":"93232:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14895,"nodeType":"FunctionDefinition","src":"93336:124:14","nodes":[],"documentation":{"id":14882,"nodeType":"StructuredDocumentation","src":"93239:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93345:10:14","parameters":{"id":14893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14884,"mutability":"mutable","name":"checkTopic1","nameLocation":"93361:11:14","nodeType":"VariableDeclaration","scope":14895,"src":"93356:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14883,"name":"bool","nodeType":"ElementaryTypeName","src":"93356:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14886,"mutability":"mutable","name":"checkTopic2","nameLocation":"93379:11:14","nodeType":"VariableDeclaration","scope":14895,"src":"93374:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14885,"name":"bool","nodeType":"ElementaryTypeName","src":"93374:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14888,"mutability":"mutable","name":"checkTopic3","nameLocation":"93397:11:14","nodeType":"VariableDeclaration","scope":14895,"src":"93392:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14887,"name":"bool","nodeType":"ElementaryTypeName","src":"93392:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14890,"mutability":"mutable","name":"checkData","nameLocation":"93415:9:14","nodeType":"VariableDeclaration","scope":14895,"src":"93410:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14889,"name":"bool","nodeType":"ElementaryTypeName","src":"93410:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14892,"mutability":"mutable","name":"emitter","nameLocation":"93434:7:14","nodeType":"VariableDeclaration","scope":14895,"src":"93426:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14891,"name":"address","nodeType":"ElementaryTypeName","src":"93426:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93355:87:14"},"returnParameters":{"id":14894,"nodeType":"ParameterList","parameters":[],"src":"93459:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14899,"nodeType":"FunctionDefinition","src":"93730:31:14","nodes":[],"documentation":{"id":14896,"nodeType":"StructuredDocumentation","src":"93466:259:14","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93739:10:14","parameters":{"id":14897,"nodeType":"ParameterList","parameters":[],"src":"93749:2:14"},"returnParameters":{"id":14898,"nodeType":"ParameterList","parameters":[],"src":"93760:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14905,"nodeType":"FunctionDefinition","src":"93864:46:14","nodes":[],"documentation":{"id":14900,"nodeType":"StructuredDocumentation","src":"93767:92:14","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93873:10:14","parameters":{"id":14903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14902,"mutability":"mutable","name":"emitter","nameLocation":"93892:7:14","nodeType":"VariableDeclaration","scope":14905,"src":"93884:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14901,"name":"address","nodeType":"ElementaryTypeName","src":"93884:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93883:17:14"},"returnParameters":{"id":14904,"nodeType":"ParameterList","parameters":[],"src":"93909:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14909,"nodeType":"FunctionDefinition","src":"93976:33:14","nodes":[],"documentation":{"id":14906,"nodeType":"StructuredDocumentation","src":"93916:55:14","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"93985:12:14","parameters":{"id":14907,"nodeType":"ParameterList","parameters":[],"src":"93997:2:14"},"returnParameters":{"id":14908,"nodeType":"ParameterList","parameters":[],"src":"94008:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14915,"nodeType":"FunctionDefinition","src":"94087:50:14","nodes":[],"documentation":{"id":14910,"nodeType":"StructuredDocumentation","src":"94015:67:14","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"94096:12:14","parameters":{"id":14913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14912,"mutability":"mutable","name":"revertData","nameLocation":"94116:10:14","nodeType":"VariableDeclaration","scope":14915,"src":"94109:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":14911,"name":"bytes4","nodeType":"ElementaryTypeName","src":"94109:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"94108:19:14"},"returnParameters":{"id":14914,"nodeType":"ParameterList","parameters":[],"src":"94136:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14921,"nodeType":"FunctionDefinition","src":"94219:58:14","nodes":[],"documentation":{"id":14916,"nodeType":"StructuredDocumentation","src":"94143:71:14","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"94228:12:14","parameters":{"id":14919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14918,"mutability":"mutable","name":"revertData","nameLocation":"94256:10:14","nodeType":"VariableDeclaration","scope":14921,"src":"94241:25:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14917,"name":"bytes","nodeType":"ElementaryTypeName","src":"94241:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94240:27:14"},"returnParameters":{"id":14920,"nodeType":"ParameterList","parameters":[],"src":"94276:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14929,"nodeType":"FunctionDefinition","src":"94506:59:14","nodes":[],"documentation":{"id":14922,"nodeType":"StructuredDocumentation","src":"94283:218:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"94515:16:14","parameters":{"id":14927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14924,"mutability":"mutable","name":"min","nameLocation":"94539:3:14","nodeType":"VariableDeclaration","scope":14929,"src":"94532:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14923,"name":"uint64","nodeType":"ElementaryTypeName","src":"94532:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14926,"mutability":"mutable","name":"max","nameLocation":"94551:3:14","nodeType":"VariableDeclaration","scope":14929,"src":"94544:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14925,"name":"uint64","nodeType":"ElementaryTypeName","src":"94544:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94531:24:14"},"returnParameters":{"id":14928,"nodeType":"ParameterList","parameters":[],"src":"94564:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14937,"nodeType":"FunctionDefinition","src":"94807:63:14","nodes":[],"documentation":{"id":14930,"nodeType":"StructuredDocumentation","src":"94571:231:14","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"94816:20:14","parameters":{"id":14935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14932,"mutability":"mutable","name":"min","nameLocation":"94844:3:14","nodeType":"VariableDeclaration","scope":14937,"src":"94837:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14931,"name":"uint64","nodeType":"ElementaryTypeName","src":"94837:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":14934,"mutability":"mutable","name":"max","nameLocation":"94856:3:14","nodeType":"VariableDeclaration","scope":14937,"src":"94849:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":14933,"name":"uint64","nodeType":"ElementaryTypeName","src":"94849:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94836:24:14"},"returnParameters":{"id":14936,"nodeType":"ParameterList","parameters":[],"src":"94869:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14943,"nodeType":"FunctionDefinition","src":"94948:38:14","nodes":[],"documentation":{"id":14938,"nodeType":"StructuredDocumentation","src":"94876:67:14","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"94957:4:14","parameters":{"id":14941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14940,"mutability":"mutable","name":"skipTest","nameLocation":"94967:8:14","nodeType":"VariableDeclaration","scope":14943,"src":"94962:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14939,"name":"bool","nodeType":"ElementaryTypeName","src":"94962:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"94961:15:14"},"returnParameters":{"id":14942,"nodeType":"ParameterList","parameters":[],"src":"94985:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14947,"nodeType":"FunctionDefinition","src":"95061:41:14","nodes":[],"documentation":{"id":14944,"nodeType":"StructuredDocumentation","src":"94992:64:14","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"95070:20:14","parameters":{"id":14945,"nodeType":"ParameterList","parameters":[],"src":"95090:2:14"},"returnParameters":{"id":14946,"nodeType":"ParameterList","parameters":[],"src":"95101:0:14"},"scope":14948,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":14301,"name":"VmSafe","nameLocations":["79232:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":14299,"src":"79232:6:14"},"id":14302,"nodeType":"InheritanceSpecifier","src":"79232:6:14"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":14300,"nodeType":"StructuredDocumentation","src":"79045:171:14","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[14948,14299],"name":"Vm","nameLocation":"79226:2:14","scope":14949,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":14}