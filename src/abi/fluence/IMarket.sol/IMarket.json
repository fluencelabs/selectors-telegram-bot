{"abi":[{"type":"function","name":"addComputePeers","inputs":[{"name":"offerId","type":"bytes32","internalType":"bytes32"},{"name":"peers","type":"tuple[]","internalType":"struct IOffer.RegisterComputePeer[]","components":[{"name":"peerId","type":"bytes32","internalType":"bytes32"},{"name":"owner","type":"address","internalType":"address"},{"name":"unitIds","type":"bytes32[]","internalType":"bytes32[]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addComputeUnits","inputs":[{"name":"peerId","type":"bytes32","internalType":"bytes32"},{"name":"unitIds","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addEffector","inputs":[{"name":"offerId","type":"bytes32","internalType":"bytes32"},{"name":"newEffectors","type":"tuple[]","internalType":"struct CIDV1[]","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"changeMinPricePerCuPerEpoch","inputs":[{"name":"offerId","type":"bytes32","internalType":"bytes32"},{"name":"newMinPricePerCuPerEpoch","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"changePaymentToken","inputs":[{"name":"offerId","type":"bytes32","internalType":"bytes32"},{"name":"newPaymentToken","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getComputePeer","inputs":[{"name":"peerId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IOffer.ComputePeer","components":[{"name":"offerId","type":"bytes32","internalType":"bytes32"},{"name":"commitmentId","type":"bytes32","internalType":"bytes32"},{"name":"unitCount","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"getComputeUnit","inputs":[{"name":"unitId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IOffer.ComputeUnit","components":[{"name":"deal","type":"address","internalType":"address"},{"name":"peerId","type":"bytes32","internalType":"bytes32"},{"name":"startEpoch","type":"uint256","internalType":"uint256"},{"name":"onchainWorkerId","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"getComputeUnitIds","inputs":[{"name":"peerId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getComputeUnits","inputs":[{"name":"peerId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IOffer.ComputeUnitView[]","components":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"deal","type":"address","internalType":"address"},{"name":"startEpoch","type":"uint256","internalType":"uint256"},{"name":"onchainWorkerId","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"getEffectorInfo","inputs":[{"name":"id","type":"tuple","internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"outputs":[{"name":"","type":"tuple","internalType":"struct IOffer.EffectorInfo","components":[{"name":"description","type":"string","internalType":"string"},{"name":"metadata","type":"tuple","internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}]}],"stateMutability":"view"},{"type":"function","name":"getOffer","inputs":[{"name":"offerId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IOffer.Offer","components":[{"name":"provider","type":"address","internalType":"address"},{"name":"minPricePerCuPerEpoch","type":"uint256","internalType":"uint256"},{"name":"paymentToken","type":"address","internalType":"address"},{"name":"peerCount","type":"uint256","internalType":"uint256"},{"name":"minProtocolVersion","type":"uint256","internalType":"uint256"},{"name":"maxProtocolVersion","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getProviderInfo","inputs":[{"name":"provider","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IOffer.ProviderInfo","components":[{"name":"name","type":"string","internalType":"string"},{"name":"metadata","type":"tuple","internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]},{"name":"unitCount","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"matchDeal","inputs":[{"name":"deal","type":"address","internalType":"contract IDeal"},{"name":"offers","type":"bytes32[]","internalType":"bytes32[]"},{"name":"computeUnits","type":"bytes32[][][]","internalType":"bytes32[][][]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"moveResourcesFromDeal","inputs":[{"name":"unitIds","type":"bytes32[]","internalType":"bytes32[]"},{"name":"onchainWorkerId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerMarketOffer","inputs":[{"name":"minPricePerCuPerEpoch","type":"uint256","internalType":"uint256"},{"name":"paymentToken","type":"address","internalType":"address"},{"name":"effectors","type":"tuple[]","internalType":"struct CIDV1[]","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]},{"name":"peers","type":"tuple[]","internalType":"struct IOffer.RegisterComputePeer[]","components":[{"name":"peerId","type":"bytes32","internalType":"bytes32"},{"name":"owner","type":"address","internalType":"address"},{"name":"unitIds","type":"bytes32[]","internalType":"bytes32[]"}]},{"name":"minProtocolVersion","type":"uint256","internalType":"uint256"},{"name":"maxProtocolVersion","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeComputePeer","inputs":[{"name":"peerId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeComputeUnit","inputs":[{"name":"unitId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeEffector","inputs":[{"name":"offerId","type":"bytes32","internalType":"bytes32"},{"name":"effectors","type":"tuple[]","internalType":"struct CIDV1[]","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeEffectorInfo","inputs":[{"name":"id","type":"tuple","internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeOffer","inputs":[{"name":"offerId","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEffectorInfo","inputs":[{"name":"id","type":"tuple","internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]},{"name":"description","type":"string","internalType":"string"},{"name":"metadata","type":"tuple","internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setProviderInfo","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"metadata","type":"tuple","internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ComputeUnitCreated","inputs":[{"name":"peerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"unitId","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"ComputeUnitRemoved","inputs":[{"name":"peerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"unitId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"ComputeUnitsMatched","inputs":[{"name":"peerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"deal","type":"address","indexed":false,"internalType":"contract IDeal"},{"name":"onchainWorkerId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"cuIds","type":"bytes32[]","indexed":false,"internalType":"bytes32[]"},{"name":"appCID","type":"tuple","indexed":false,"internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"anonymous":false},{"type":"event","name":"ComputeUnitsRemovedFromDeal","inputs":[{"name":"peerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"deal","type":"address","indexed":true,"internalType":"contract IDeal"},{"name":"cuIds","type":"bytes32[]","indexed":false,"internalType":"bytes32[]"},{"name":"onchainWorkerId","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"EffectorAdded","inputs":[{"name":"offerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"effector","type":"tuple","indexed":false,"internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"anonymous":false},{"type":"event","name":"EffectorInfoRemoved","inputs":[{"name":"id","type":"tuple","indexed":false,"internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"anonymous":false},{"type":"event","name":"EffectorInfoSet","inputs":[{"name":"id","type":"tuple","indexed":false,"internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]},{"name":"description","type":"string","indexed":false,"internalType":"string"},{"name":"metadata","type":"tuple","indexed":false,"internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"anonymous":false},{"type":"event","name":"EffectorRemoved","inputs":[{"name":"offerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"effector","type":"tuple","indexed":false,"internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"anonymous":false},{"type":"event","name":"MarketOfferRegistered","inputs":[{"name":"provider","type":"address","indexed":true,"internalType":"address"},{"name":"offerId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"minPricePerCuPerEpoch","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"paymentToken","type":"address","indexed":false,"internalType":"address"},{"name":"effectors","type":"tuple[]","indexed":false,"internalType":"struct CIDV1[]","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]},{"name":"minProtocolVersion","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"maxProtocolVersion","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MarketOfferRemoved","inputs":[{"name":"offerId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"MinPricePerCuPerEpochUpdated","inputs":[{"name":"offerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"minPricePerCuPerEpoch","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PaymentTokenUpdated","inputs":[{"name":"offerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"paymentToken","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PeerCreated","inputs":[{"name":"offerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"peerId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"owner","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PeerRemoved","inputs":[{"name":"offerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"peerId","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"ProviderInfoUpdated","inputs":[{"name":"provider","type":"address","indexed":true,"internalType":"address"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"metadata","type":"tuple","indexed":false,"internalType":"struct CIDV1","components":[{"name":"prefixes","type":"bytes4","internalType":"bytes4"},{"name":"hash","type":"bytes32","internalType":"bytes32"}]}],"anonymous":false},{"type":"error","name":"MinWorkersNotMatched","inputs":[{"name":"_minWorkers","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addComputePeers(bytes32,(bytes32,address,bytes32[])[])":"74920a9d","addComputeUnits(bytes32,bytes32[])":"b6b9084e","addEffector(bytes32,(bytes4,bytes32)[])":"b017191a","changeMinPricePerCuPerEpoch(bytes32,uint256)":"f46bcb1d","changePaymentToken(bytes32,address)":"087b97ba","getComputePeer(bytes32)":"86e68254","getComputeUnit(bytes32)":"745e920b","getComputeUnitIds(bytes32)":"62ac63fa","getComputeUnits(bytes32)":"b6015c6e","getEffectorInfo((bytes4,bytes32))":"0bcee1a2","getOffer(bytes32)":"d597b8c8","getProviderInfo(address)":"7583902f","matchDeal(address,bytes32[],bytes32[][][])":"8e4643cb","moveResourcesFromDeal(bytes32[],bytes32)":"12a4ebb0","registerMarketOffer(uint256,address,(bytes4,bytes32)[],(bytes32,address,bytes32[])[],uint256,uint256)":"edd9db67","removeComputePeer(bytes32)":"9faf0d20","removeComputeUnit(bytes32)":"3591187c","removeEffector(bytes32,(bytes4,bytes32)[])":"34205efd","removeEffectorInfo((bytes4,bytes32))":"19c671ca","removeOffer(bytes32)":"91d27f71","setEffectorInfo((bytes4,bytes32),string,(bytes4,bytes32))":"da74336a","setProviderInfo(string,(bytes4,bytes32))":"c685738e"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minWorkers\",\"type\":\"uint256\"}],\"name\":\"MinWorkersNotMatched\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"}],\"name\":\"ComputeUnitCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"}],\"name\":\"ComputeUnitRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IDeal\",\"name\":\"deal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"onchainWorkerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"cuIds\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CIDV1\",\"name\":\"appCID\",\"type\":\"tuple\"}],\"name\":\"ComputeUnitsMatched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"contract IDeal\",\"name\":\"deal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"cuIds\",\"type\":\"bytes32[]\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"onchainWorkerId\",\"type\":\"bytes32\"}],\"name\":\"ComputeUnitsRemovedFromDeal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CIDV1\",\"name\":\"effector\",\"type\":\"tuple\"}],\"name\":\"EffectorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CIDV1\",\"name\":\"id\",\"type\":\"tuple\"}],\"name\":\"EffectorInfoRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CIDV1\",\"name\":\"id\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CIDV1\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"EffectorInfoSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CIDV1\",\"name\":\"effector\",\"type\":\"tuple\"}],\"name\":\"EffectorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minPricePerCuPerEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CIDV1[]\",\"name\":\"effectors\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minProtocolVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxProtocolVersion\",\"type\":\"uint256\"}],\"name\":\"MarketOfferRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"}],\"name\":\"MarketOfferRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minPricePerCuPerEpoch\",\"type\":\"uint256\"}],\"name\":\"MinPricePerCuPerEpochUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"}],\"name\":\"PaymentTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PeerCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"}],\"name\":\"PeerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct CIDV1\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"ProviderInfoUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"unitIds\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IOffer.RegisterComputePeer[]\",\"name\":\"peers\",\"type\":\"tuple[]\"}],\"name\":\"addComputePeers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"unitIds\",\"type\":\"bytes32[]\"}],\"name\":\"addComputeUnits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1[]\",\"name\":\"newEffectors\",\"type\":\"tuple[]\"}],\"name\":\"addEffector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"newMinPricePerCuPerEpoch\",\"type\":\"uint256\"}],\"name\":\"changeMinPricePerCuPerEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"changePaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"}],\"name\":\"getComputePeer\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"commitmentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"unitCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct IOffer.ComputePeer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"}],\"name\":\"getComputeUnit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"deal\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"startEpoch\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"onchainWorkerId\",\"type\":\"bytes32\"}],\"internalType\":\"struct IOffer.ComputeUnit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"}],\"name\":\"getComputeUnitIds\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"}],\"name\":\"getComputeUnits\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startEpoch\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"onchainWorkerId\",\"type\":\"bytes32\"}],\"internalType\":\"struct IOffer.ComputeUnitView[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1\",\"name\":\"id\",\"type\":\"tuple\"}],\"name\":\"getEffectorInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IOffer.EffectorInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"}],\"name\":\"getOffer\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minPricePerCuPerEpoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"peerCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minProtocolVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxProtocolVersion\",\"type\":\"uint256\"}],\"internalType\":\"struct IOffer.Offer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"getProviderInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"unitCount\",\"type\":\"uint256\"}],\"internalType\":\"struct IOffer.ProviderInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IDeal\",\"name\":\"deal\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"offers\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[][][]\",\"name\":\"computeUnits\",\"type\":\"bytes32[][][]\"}],\"name\":\"matchDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"unitIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"onchainWorkerId\",\"type\":\"bytes32\"}],\"name\":\"moveResourcesFromDeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minPricePerCuPerEpoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1[]\",\"name\":\"effectors\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"unitIds\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IOffer.RegisterComputePeer[]\",\"name\":\"peers\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"minProtocolVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxProtocolVersion\",\"type\":\"uint256\"}],\"name\":\"registerMarketOffer\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"}],\"name\":\"removeComputePeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"}],\"name\":\"removeComputeUnit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1[]\",\"name\":\"effectors\",\"type\":\"tuple[]\"}],\"name\":\"removeEffector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1\",\"name\":\"id\",\"type\":\"tuple\"}],\"name\":\"removeEffectorInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"offerId\",\"type\":\"bytes32\"}],\"name\":\"removeOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1\",\"name\":\"id\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"setEffectorInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes4\",\"name\":\"prefixes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct CIDV1\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"setProviderInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Market contract is responsible for managing the deals and offers\",\"errors\":{\"MinWorkersNotMatched(uint256)\":[{\"details\":\"Throws if the min workers of the deal is not matched\",\"params\":{\"_minWorkers\":\"The min workers of the deal\"}}]},\"events\":{\"ComputeUnitCreated(bytes32,bytes32)\":{\"details\":\"Emitted when a compute unit created for a peer\",\"params\":{\"peerId\":\"The peer id\",\"unitId\":\"The compute unit id\"}},\"ComputeUnitRemoved(bytes32,bytes32)\":{\"details\":\"Emitted when a compute unit removed from a peer\",\"params\":{\"peerId\":\"The peer id\",\"unitId\":\"The compute unit id\"}},\"ComputeUnitsMatched(bytes32,address,bytes32,bytes32[],(bytes4,bytes32))\":{\"details\":\"Emitted when a deal is matched with a compute unit\",\"params\":{\"appCID\":\"The app cid of the deal\",\"cuIds\":\"ids of compute units matched\",\"deal\":\"The deal address\",\"onchainWorkerId\":\"onchain worker id, for use in tools that interact with chain\",\"peerId\":\"The peer id of the deal\"}},\"ComputeUnitsRemovedFromDeal(bytes32,address,bytes32[],bytes32)\":{\"details\":\"Emitted when a compute unit removed from a peer\",\"params\":{\"cuIds\":\"The list of compute unit ids\",\"deal\":\"The deal address\",\"peerId\":\"The peer id\"}},\"EffectorAdded(bytes32,(bytes4,bytes32))\":{\"details\":\"Emitted when an effector added to an offer\",\"params\":{\"effector\":\"The effector cid\",\"offerId\":\"The offer id\"}},\"EffectorInfoRemoved((bytes4,bytes32))\":{\"details\":\"Emitted when the effector info is removed\",\"params\":{\"id\":\"The effector cid\"}},\"EffectorInfoSet((bytes4,bytes32),string,(bytes4,bytes32))\":{\"details\":\"Emitted when the effector info is set. Effector info can be added by the contract owner\",\"params\":{\"description\":\"The description of the effector\",\"id\":\"The effector cid\",\"metadata\":\"The metadata of the effector\"}},\"EffectorRemoved(bytes32,(bytes4,bytes32))\":{\"details\":\"Emitted when an effector removed from an offer\",\"params\":{\"effector\":\"The effector cid\",\"offerId\":\"The offer id\"}},\"MarketOfferRegistered(address,bytes32,uint256,address,(bytes4,bytes32)[],uint256,uint256)\":{\"details\":\"Emitted when a new offer is registered\",\"params\":{\"effectors\":\"The effectors of the offer\",\"minPricePerCuPerEpoch\":\"The min price per cu per epoch which the provider specify for the matching with the deal\",\"offerId\":\"The offer id\",\"paymentToken\":\"The payment token of the offer\",\"provider\":\"The provider address\"}},\"MarketOfferRemoved(bytes32)\":{\"details\":\"Emitted when an offer removed\",\"params\":{\"offerId\":\"The offer id\"}},\"MinPricePerCuPerEpochUpdated(bytes32,uint256)\":{\"details\":\"Emitted when the min price per worker per epoch of an offer is updated\",\"params\":{\"minPricePerCuPerEpoch\":\"The new min price per worker per epoch\",\"offerId\":\"The offer id\"}},\"PaymentTokenUpdated(bytes32,address)\":{\"details\":\"Emitted when the payment token of an offer is updated\",\"params\":{\"offerId\":\"The offer id\",\"paymentToken\":\"The new payment token\"}},\"PeerCreated(bytes32,bytes32,address)\":{\"details\":\"Emitted when a peer created for an offer\"},\"PeerRemoved(bytes32,bytes32)\":{\"details\":\"Emitted when a peer removed from an offer\",\"params\":{\"offerId\":\"The offer id\",\"peerId\":\"The peer id\"}},\"ProviderInfoUpdated(address,string,(bytes4,bytes32))\":{\"details\":\"Emitted when a provider info is updated\",\"params\":{\"metadata\":\"The new metadata of the provider\",\"name\":\"The new name of the provider\",\"provider\":\"The provider address\"}}},\"kind\":\"dev\",\"methods\":{\"addComputePeers(bytes32,(bytes32,address,bytes32[])[])\":{\"details\":\"Add compute peers to an offer\"},\"addComputeUnits(bytes32,bytes32[])\":{\"details\":\"Add compute units to a peer\"},\"addEffector(bytes32,(bytes4,bytes32)[])\":{\"details\":\"Add effectors to an offer\"},\"changeMinPricePerCuPerEpoch(bytes32,uint256)\":{\"details\":\"Change the min price per CU per epoch of an offer\"},\"changePaymentToken(bytes32,address)\":{\"details\":\"Change the payment token of an offer\"},\"getComputePeer(bytes32)\":{\"details\":\"Returns the compute peer info\"},\"getComputeUnit(bytes32)\":{\"details\":\"Returns the compute unit info\"},\"getComputeUnitIds(bytes32)\":{\"details\":\"Returns the compute unit ids of a peer\"},\"getComputeUnits(bytes32)\":{\"details\":\"Returns the compute units info of a peer\"},\"getEffectorInfo((bytes4,bytes32))\":{\"details\":\"Returns the effector info\",\"params\":{\"id\":\"The effector cid\"}},\"getOffer(bytes32)\":{\"details\":\"Returns the offer info\",\"params\":{\"offerId\":\"The offer id\"},\"returns\":{\"_0\":\"offer The offer info\"}},\"getProviderInfo(address)\":{\"details\":\"Returns the provider info\",\"params\":{\"provider\":\"The provider address\"},\"returns\":{\"_0\":\"providerInfo The provider info\"}},\"matchDeal(address,bytes32[],bytes32[][][])\":{\"details\":\"Match Deal with Compute Units provided.There should be `bytes32[][] calldata peers` as well, but it is not supported by subgraph codegen.Ref to https://github.com/graphprotocol/graph-tooling/issues/342.\",\"params\":{\"computeUnits\":\": Compute Units per offer id (3D array: provider -> peer -> CU) to match with.\",\"deal\":\": Deal to match.\",\"offers\":\": Offers array that represents offers in computeUnits 3D array.\"}},\"moveResourcesFromDeal(bytes32[],bytes32)\":{\"details\":\"Return resources from deal\"},\"registerMarketOffer(uint256,address,(bytes4,bytes32)[],(bytes32,address,bytes32[])[],uint256,uint256)\":{\"details\":\"Register a new offer\",\"params\":{\"effectors\":\"The effectors of the offer\",\"minPricePerCuPerEpoch\":\"The min price per CU per epoch which the provider specify for the matching with the deal\",\"paymentToken\":\"The payment token of the offer\",\"peers\":\"The compute peers of the offer\"}},\"removeComputePeer(bytes32)\":{\"details\":\"Remove compute peers from an offer after all CUs removed.Only owner can remove Peer.\"},\"removeComputeUnit(bytes32)\":{\"details\":\"Remove compute units from a peer.Only owner can remove Compute Unit that not in Deal and in CC.\"},\"removeEffector(bytes32,(bytes4,bytes32)[])\":{\"details\":\"Remove effectors from an offer\"},\"removeEffectorInfo((bytes4,bytes32))\":{\"details\":\"Remove the effector info. Effector info can be removed by the contract owner\"},\"removeOffer(bytes32)\":{\"details\":\"Remove an offer.Only owner can change offer after all Peers removed (and CUs before).\"},\"setEffectorInfo((bytes4,bytes32),string,(bytes4,bytes32))\":{\"details\":\"Set the effector info. Effector info can be added by the contract owner\"},\"setProviderInfo(string,(bytes4,bytes32))\":{\"details\":\"Set the provider info\",\"params\":{\"metadata\":\"The metadata of the provider\",\"name\":\"The name of the provider\"}}},\"title\":\"Market contract interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"matchDeal(address,bytes32[],bytes32[][][])\":{\"notice\":\"Match deal with offers and compute units (peers checks through compute units).It validates provided CUs and silently ignore unvalidated ones on checking:- deal.maxWorkersPerProvider and silently ignore other CUs out of this limit.- Offer, or Peer not allowed to match (deal.isProviderAllowed, allowed prices, paymentToken, effectors)- Compute Unit (CU): Active CC status, also note, protocol does not allow more than one CU per peerfor the same Deal. But, when deal consists of whitelisted provider - CUs of this Providercould be matched without even CC.TODO: consolidate workaround: when it comes to check CC status, on wrong status the whole transactionwill be failed instead of to be silenced.This method is mirrored in ts-client/src/dealMatcherClient/dealMatcherClient.ts.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/interfaces/IMarket.sol\":\"IMarket\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[\":@ensdomains/buffer/=lib/filecoin-solidity/lib/buffer/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":buffer/=lib/filecoin-solidity/lib/buffer/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":filecoin-solidity/=lib/filecoin-solidity/contracts/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/filecoin-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-BigNumber/=lib/filecoin-solidity/contracts/vendor/solidity-BigNumber/src/\",\":solidity-cborutils/=lib/solidity-cborutils/contracts/\",\":solidity-cborutils/contracts/=lib/filecoin-solidity/lib/solidity-cborutils/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"src/core/interfaces/ICapacityConst.sol\":{\"keccak256\":\"0x60679e12175ef8ec5fe3fd2108fcdf8b7845348452fececc25ada3b7516191d9\",\"urls\":[\"bzz-raw://054ffd2a008a4ba8692dd7f60bef3d9f87c84799f28d1575b9031a4c9715e84f\",\"dweb:/ipfs/QmUqCxKvUCMQ2bGqnEsCUZR2qi8aMAFxrDAQNQdBnYkjPj\"]},\"src/core/interfaces/ICore.sol\":{\"keccak256\":\"0xbbb134aa00e6a7ba2f50c05df2178a76700d18dbf4c7c3f5f1a659f022badb0b\",\"urls\":[\"bzz-raw://7983fd4c355cb3d758a974a9d3430d2009a939552be90487e51b87b0d3b29957\",\"dweb:/ipfs/QmWJoZCr5C5Ma4RBHjvTBQ73tvau3Ct3tKvjg3MCd21qc2\"]},\"src/core/interfaces/IEpochController.sol\":{\"keccak256\":\"0x75d4b147938d93ea391e8e97950fae57dc0d02da5eceba44beafd3fdde152b43\",\"urls\":[\"bzz-raw://6709d7544c7c3ea5ef8b0a10d05ed1a23676a78ee27a23bf61d4eef7731f804b\",\"dweb:/ipfs/QmZFea2bBEZ185jGeRtGcxRYNChFmFwgiRrPUGaoJD4qLx\"]},\"src/core/interfaces/IGlobalConst.sol\":{\"keccak256\":\"0x244f1e7020782274570d1230a5b5df81ab67dc11007eda87acf0bfdb2b5bda2a\",\"urls\":[\"bzz-raw://a7a7a3b6781aa0b1994e79461094776bf4cfb3f6f801a5095f81694bed43bd9a\",\"dweb:/ipfs/QmbTAJDu5K9AaffkoHguoQnMsjPRRDhiwAdu9dafkcs52G\"]},\"src/core/interfaces/IMarket.sol\":{\"keccak256\":\"0xe58a0fde5678eefff06461ca39a38cf9f54c2e57aedcd23da1759f9a71bdeab9\",\"urls\":[\"bzz-raw://6bc0f2760ace30a53320939167c16971e3380b708f71f43ed3bcae85ee75d28a\",\"dweb:/ipfs/QmbbVFf1dQBUB2qraJqkGTvbEurzanaNmxDG2uzGKK6bFt\"]},\"src/core/interfaces/IOffer.sol\":{\"keccak256\":\"0x3a08a6c1ce568d8e13fadf78b5edd9d089fa203516eab9cb0ae67a10237fd464\",\"urls\":[\"bzz-raw://ee4d648d703147ae423f7c4b5924cc973aa3dcd59b768c8fc5d393fbd817c04f\",\"dweb:/ipfs/QmNSX9tkgfixv134c1QGf7HFVdWpaTZQ1aFzMxkwXYwjPz\"]},\"src/deal/interfaces/IConfig.sol\":{\"keccak256\":\"0xd2ff604cbf7bd00e8319b8434e0001cb6180b6077dc4a188308a0a9b65ee9524\",\"urls\":[\"bzz-raw://3bf8a3c15d21c7ab8fcb84dbba3e77faf125caf2cf962b272b510818e0e3507e\",\"dweb:/ipfs/QmfXFRMxDSS2HM6smXjzJyB5BZqeDEgL5JPNBgFeo6Bxn3\"]},\"src/deal/interfaces/IDeal.sol\":{\"keccak256\":\"0xfce3124c64bfa00bb84e789b1e06805113246a1e4764b8ad49e020cadead2bc2\",\"urls\":[\"bzz-raw://8417dbd3925059b78f3925013cfebf8c5a6e95fdb254711a7edb023390c72a68\",\"dweb:/ipfs/QmPwo6BBYr99mcZYPTDMrt2BNeEnNkSx7tRYzNCVeTY8oR\"]},\"src/deal/interfaces/IWorkerManager.sol\":{\"keccak256\":\"0x81d3ec7e32d78abf2b680080bfc84ca3dc63e3f0fa6b75263713c3eb7431bce6\",\"urls\":[\"bzz-raw://ab256654fb955d467ff693c9d1ff7ec3eb1903112d070460ea3ce262c3d935b3\",\"dweb:/ipfs/QmUiQhkUx8TtqVBe9Dt77rqxZr8RzpKH7WcBNE46NBfs3y\"]},\"src/interfaces/IDiamond.sol\":{\"keccak256\":\"0xf5202acc1d0ab8c54d0f144535d7af8b1cc275ab901a5114edb382e102d3bb43\",\"urls\":[\"bzz-raw://1d6b0fe6a6c64f27afd431c8e3c19c1cf665e21d3725ac93be3e6e397af7d18f\",\"dweb:/ipfs/QmVcYgm3dxMHkU1LgNC2XKAD665LjgNd7L4QBS1mNcSUJs\"]},\"src/interfaces/IWhitelist.sol\":{\"keccak256\":\"0x0dd87386e23970aaaa704283f3a0e6d71f782f576280885a1ce6741cf375cfa2\",\"urls\":[\"bzz-raw://ab074c338a4fde07d6d0b1548c0348849e47d720efc88a43fb067128d65c6b6e\",\"dweb:/ipfs/QmPk65Gu1vtxwJA7vucWsuaPfMb7tRPwA1roQZCj3bA4kY\"]},\"src/utils/Common.sol\":{\"keccak256\":\"0x825b67051bb6656367c807d479fbcb3acfc05ddd40c2f808f53c56cc7df65241\",\"urls\":[\"bzz-raw://5ee9f171a17bd35b1970b84dc7c964a326694af177bda0531bc7fd2252029ecb\",\"dweb:/ipfs/QmXdMNVRuKhMdn5AT8BE8oZCo3X4QmRtZAE5Cw2CSHsrA9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_minWorkers","type":"uint256"}],"type":"error","name":"MinWorkersNotMatched"},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"unitId","type":"bytes32","indexed":false}],"type":"event","name":"ComputeUnitCreated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"unitId","type":"bytes32","indexed":true}],"type":"event","name":"ComputeUnitRemoved","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":true},{"internalType":"contract IDeal","name":"deal","type":"address","indexed":false},{"internalType":"bytes32","name":"onchainWorkerId","type":"bytes32","indexed":false},{"internalType":"bytes32[]","name":"cuIds","type":"bytes32[]","indexed":false},{"internalType":"struct CIDV1","name":"appCID","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"indexed":false}],"type":"event","name":"ComputeUnitsMatched","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":true},{"internalType":"contract IDeal","name":"deal","type":"address","indexed":true},{"internalType":"bytes32[]","name":"cuIds","type":"bytes32[]","indexed":false},{"internalType":"bytes32","name":"onchainWorkerId","type":"bytes32","indexed":false}],"type":"event","name":"ComputeUnitsRemovedFromDeal","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32","indexed":true},{"internalType":"struct CIDV1","name":"effector","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"indexed":false}],"type":"event","name":"EffectorAdded","anonymous":false},{"inputs":[{"internalType":"struct CIDV1","name":"id","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"indexed":false}],"type":"event","name":"EffectorInfoRemoved","anonymous":false},{"inputs":[{"internalType":"struct CIDV1","name":"id","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"indexed":false},{"internalType":"string","name":"description","type":"string","indexed":false},{"internalType":"struct CIDV1","name":"metadata","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"indexed":false}],"type":"event","name":"EffectorInfoSet","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32","indexed":true},{"internalType":"struct CIDV1","name":"effector","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"indexed":false}],"type":"event","name":"EffectorRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"provider","type":"address","indexed":true},{"internalType":"bytes32","name":"offerId","type":"bytes32","indexed":false},{"internalType":"uint256","name":"minPricePerCuPerEpoch","type":"uint256","indexed":false},{"internalType":"address","name":"paymentToken","type":"address","indexed":false},{"internalType":"struct CIDV1[]","name":"effectors","type":"tuple[]","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"indexed":false},{"internalType":"uint256","name":"minProtocolVersion","type":"uint256","indexed":false},{"internalType":"uint256","name":"maxProtocolVersion","type":"uint256","indexed":false}],"type":"event","name":"MarketOfferRegistered","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32","indexed":true}],"type":"event","name":"MarketOfferRemoved","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"minPricePerCuPerEpoch","type":"uint256","indexed":false}],"type":"event","name":"MinPricePerCuPerEpochUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32","indexed":true},{"internalType":"address","name":"paymentToken","type":"address","indexed":false}],"type":"event","name":"PaymentTokenUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":false},{"internalType":"address","name":"owner","type":"address","indexed":false}],"type":"event","name":"PeerCreated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":true}],"type":"event","name":"PeerRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"provider","type":"address","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"struct CIDV1","name":"metadata","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}],"indexed":false}],"type":"event","name":"ProviderInfoUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32"},{"internalType":"struct IOffer.RegisterComputePeer[]","name":"peers","type":"tuple[]","components":[{"internalType":"bytes32","name":"peerId","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32[]","name":"unitIds","type":"bytes32[]"}]}],"stateMutability":"nonpayable","type":"function","name":"addComputePeers"},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32"},{"internalType":"bytes32[]","name":"unitIds","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"addComputeUnits"},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32"},{"internalType":"struct CIDV1[]","name":"newEffectors","type":"tuple[]","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"addEffector"},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32"},{"internalType":"uint256","name":"newMinPricePerCuPerEpoch","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"changeMinPricePerCuPerEpoch"},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32"},{"internalType":"address","name":"newPaymentToken","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"changePaymentToken"},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getComputePeer","outputs":[{"internalType":"struct IOffer.ComputePeer","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"offerId","type":"bytes32"},{"internalType":"bytes32","name":"commitmentId","type":"bytes32"},{"internalType":"uint256","name":"unitCount","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}]}]},{"inputs":[{"internalType":"bytes32","name":"unitId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getComputeUnit","outputs":[{"internalType":"struct IOffer.ComputeUnit","name":"","type":"tuple","components":[{"internalType":"address","name":"deal","type":"address"},{"internalType":"bytes32","name":"peerId","type":"bytes32"},{"internalType":"uint256","name":"startEpoch","type":"uint256"},{"internalType":"bytes32","name":"onchainWorkerId","type":"bytes32"}]}]},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getComputeUnitIds","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getComputeUnits","outputs":[{"internalType":"struct IOffer.ComputeUnitView[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"deal","type":"address"},{"internalType":"uint256","name":"startEpoch","type":"uint256"},{"internalType":"bytes32","name":"onchainWorkerId","type":"bytes32"}]}]},{"inputs":[{"internalType":"struct CIDV1","name":"id","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]}],"stateMutability":"view","type":"function","name":"getEffectorInfo","outputs":[{"internalType":"struct IOffer.EffectorInfo","name":"","type":"tuple","components":[{"internalType":"string","name":"description","type":"string"},{"internalType":"struct CIDV1","name":"metadata","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]}]}]},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getOffer","outputs":[{"internalType":"struct IOffer.Offer","name":"","type":"tuple","components":[{"internalType":"address","name":"provider","type":"address"},{"internalType":"uint256","name":"minPricePerCuPerEpoch","type":"uint256"},{"internalType":"address","name":"paymentToken","type":"address"},{"internalType":"uint256","name":"peerCount","type":"uint256"},{"internalType":"uint256","name":"minProtocolVersion","type":"uint256"},{"internalType":"uint256","name":"maxProtocolVersion","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"stateMutability":"view","type":"function","name":"getProviderInfo","outputs":[{"internalType":"struct IOffer.ProviderInfo","name":"","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"struct CIDV1","name":"metadata","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]},{"internalType":"uint256","name":"unitCount","type":"uint256"}]}]},{"inputs":[{"internalType":"contract IDeal","name":"deal","type":"address"},{"internalType":"bytes32[]","name":"offers","type":"bytes32[]"},{"internalType":"bytes32[][][]","name":"computeUnits","type":"bytes32[][][]"}],"stateMutability":"nonpayable","type":"function","name":"matchDeal"},{"inputs":[{"internalType":"bytes32[]","name":"unitIds","type":"bytes32[]"},{"internalType":"bytes32","name":"onchainWorkerId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"moveResourcesFromDeal"},{"inputs":[{"internalType":"uint256","name":"minPricePerCuPerEpoch","type":"uint256"},{"internalType":"address","name":"paymentToken","type":"address"},{"internalType":"struct CIDV1[]","name":"effectors","type":"tuple[]","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]},{"internalType":"struct IOffer.RegisterComputePeer[]","name":"peers","type":"tuple[]","components":[{"internalType":"bytes32","name":"peerId","type":"bytes32"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bytes32[]","name":"unitIds","type":"bytes32[]"}]},{"internalType":"uint256","name":"minProtocolVersion","type":"uint256"},{"internalType":"uint256","name":"maxProtocolVersion","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"registerMarketOffer","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"removeComputePeer"},{"inputs":[{"internalType":"bytes32","name":"unitId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"removeComputeUnit"},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32"},{"internalType":"struct CIDV1[]","name":"effectors","type":"tuple[]","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"removeEffector"},{"inputs":[{"internalType":"struct CIDV1","name":"id","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"removeEffectorInfo"},{"inputs":[{"internalType":"bytes32","name":"offerId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"removeOffer"},{"inputs":[{"internalType":"struct CIDV1","name":"id","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]},{"internalType":"string","name":"description","type":"string"},{"internalType":"struct CIDV1","name":"metadata","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"setEffectorInfo"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"struct CIDV1","name":"metadata","type":"tuple","components":[{"internalType":"bytes4","name":"prefixes","type":"bytes4"},{"internalType":"bytes32","name":"hash","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"setProviderInfo"}],"devdoc":{"kind":"dev","methods":{"addComputePeers(bytes32,(bytes32,address,bytes32[])[])":{"details":"Add compute peers to an offer"},"addComputeUnits(bytes32,bytes32[])":{"details":"Add compute units to a peer"},"addEffector(bytes32,(bytes4,bytes32)[])":{"details":"Add effectors to an offer"},"changeMinPricePerCuPerEpoch(bytes32,uint256)":{"details":"Change the min price per CU per epoch of an offer"},"changePaymentToken(bytes32,address)":{"details":"Change the payment token of an offer"},"getComputePeer(bytes32)":{"details":"Returns the compute peer info"},"getComputeUnit(bytes32)":{"details":"Returns the compute unit info"},"getComputeUnitIds(bytes32)":{"details":"Returns the compute unit ids of a peer"},"getComputeUnits(bytes32)":{"details":"Returns the compute units info of a peer"},"getEffectorInfo((bytes4,bytes32))":{"details":"Returns the effector info","params":{"id":"The effector cid"}},"getOffer(bytes32)":{"details":"Returns the offer info","params":{"offerId":"The offer id"},"returns":{"_0":"offer The offer info"}},"getProviderInfo(address)":{"details":"Returns the provider info","params":{"provider":"The provider address"},"returns":{"_0":"providerInfo The provider info"}},"matchDeal(address,bytes32[],bytes32[][][])":{"details":"Match Deal with Compute Units provided.There should be `bytes32[][] calldata peers` as well, but it is not supported by subgraph codegen.Ref to https://github.com/graphprotocol/graph-tooling/issues/342.","params":{"computeUnits":": Compute Units per offer id (3D array: provider -> peer -> CU) to match with.","deal":": Deal to match.","offers":": Offers array that represents offers in computeUnits 3D array."}},"moveResourcesFromDeal(bytes32[],bytes32)":{"details":"Return resources from deal"},"registerMarketOffer(uint256,address,(bytes4,bytes32)[],(bytes32,address,bytes32[])[],uint256,uint256)":{"details":"Register a new offer","params":{"effectors":"The effectors of the offer","minPricePerCuPerEpoch":"The min price per CU per epoch which the provider specify for the matching with the deal","paymentToken":"The payment token of the offer","peers":"The compute peers of the offer"}},"removeComputePeer(bytes32)":{"details":"Remove compute peers from an offer after all CUs removed.Only owner can remove Peer."},"removeComputeUnit(bytes32)":{"details":"Remove compute units from a peer.Only owner can remove Compute Unit that not in Deal and in CC."},"removeEffector(bytes32,(bytes4,bytes32)[])":{"details":"Remove effectors from an offer"},"removeEffectorInfo((bytes4,bytes32))":{"details":"Remove the effector info. Effector info can be removed by the contract owner"},"removeOffer(bytes32)":{"details":"Remove an offer.Only owner can change offer after all Peers removed (and CUs before)."},"setEffectorInfo((bytes4,bytes32),string,(bytes4,bytes32))":{"details":"Set the effector info. Effector info can be added by the contract owner"},"setProviderInfo(string,(bytes4,bytes32))":{"details":"Set the provider info","params":{"metadata":"The metadata of the provider","name":"The name of the provider"}}},"version":1},"userdoc":{"kind":"user","methods":{"matchDeal(address,bytes32[],bytes32[][][])":{"notice":"Match deal with offers and compute units (peers checks through compute units).It validates provided CUs and silently ignore unvalidated ones on checking:- deal.maxWorkersPerProvider and silently ignore other CUs out of this limit.- Offer, or Peer not allowed to match (deal.isProviderAllowed, allowed prices, paymentToken, effectors)- Compute Unit (CU): Active CC status, also note, protocol does not allow more than one CU per peerfor the same Deal. But, when deal consists of whitelisted provider - CUs of this Providercould be matched without even CC.TODO: consolidate workaround: when it comes to check CC status, on wrong status the whole transactionwill be failed instead of to be silenced.This method is mirrored in ts-client/src/dealMatcherClient/dealMatcherClient.ts."}},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/filecoin-solidity/lib/buffer/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","buffer/=lib/filecoin-solidity/lib/buffer/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","filecoin-solidity/=lib/filecoin-solidity/contracts/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/filecoin-solidity/lib/openzeppelin-contracts-upgradeable/contracts/","solidity-BigNumber/=lib/filecoin-solidity/contracts/vendor/solidity-BigNumber/src/","solidity-cborutils/=lib/solidity-cborutils/contracts/","solidity-cborutils/contracts/=lib/filecoin-solidity/lib/solidity-cborutils/contracts/"],"optimizer":{"enabled":true,"runs":0},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/core/interfaces/IMarket.sol":"IMarket"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"src/core/interfaces/ICapacityConst.sol":{"keccak256":"0x60679e12175ef8ec5fe3fd2108fcdf8b7845348452fececc25ada3b7516191d9","urls":["bzz-raw://054ffd2a008a4ba8692dd7f60bef3d9f87c84799f28d1575b9031a4c9715e84f","dweb:/ipfs/QmUqCxKvUCMQ2bGqnEsCUZR2qi8aMAFxrDAQNQdBnYkjPj"],"license":null},"src/core/interfaces/ICore.sol":{"keccak256":"0xbbb134aa00e6a7ba2f50c05df2178a76700d18dbf4c7c3f5f1a659f022badb0b","urls":["bzz-raw://7983fd4c355cb3d758a974a9d3430d2009a939552be90487e51b87b0d3b29957","dweb:/ipfs/QmWJoZCr5C5Ma4RBHjvTBQ73tvau3Ct3tKvjg3MCd21qc2"],"license":null},"src/core/interfaces/IEpochController.sol":{"keccak256":"0x75d4b147938d93ea391e8e97950fae57dc0d02da5eceba44beafd3fdde152b43","urls":["bzz-raw://6709d7544c7c3ea5ef8b0a10d05ed1a23676a78ee27a23bf61d4eef7731f804b","dweb:/ipfs/QmZFea2bBEZ185jGeRtGcxRYNChFmFwgiRrPUGaoJD4qLx"],"license":null},"src/core/interfaces/IGlobalConst.sol":{"keccak256":"0x244f1e7020782274570d1230a5b5df81ab67dc11007eda87acf0bfdb2b5bda2a","urls":["bzz-raw://a7a7a3b6781aa0b1994e79461094776bf4cfb3f6f801a5095f81694bed43bd9a","dweb:/ipfs/QmbTAJDu5K9AaffkoHguoQnMsjPRRDhiwAdu9dafkcs52G"],"license":null},"src/core/interfaces/IMarket.sol":{"keccak256":"0xe58a0fde5678eefff06461ca39a38cf9f54c2e57aedcd23da1759f9a71bdeab9","urls":["bzz-raw://6bc0f2760ace30a53320939167c16971e3380b708f71f43ed3bcae85ee75d28a","dweb:/ipfs/QmbbVFf1dQBUB2qraJqkGTvbEurzanaNmxDG2uzGKK6bFt"],"license":null},"src/core/interfaces/IOffer.sol":{"keccak256":"0x3a08a6c1ce568d8e13fadf78b5edd9d089fa203516eab9cb0ae67a10237fd464","urls":["bzz-raw://ee4d648d703147ae423f7c4b5924cc973aa3dcd59b768c8fc5d393fbd817c04f","dweb:/ipfs/QmNSX9tkgfixv134c1QGf7HFVdWpaTZQ1aFzMxkwXYwjPz"],"license":null},"src/deal/interfaces/IConfig.sol":{"keccak256":"0xd2ff604cbf7bd00e8319b8434e0001cb6180b6077dc4a188308a0a9b65ee9524","urls":["bzz-raw://3bf8a3c15d21c7ab8fcb84dbba3e77faf125caf2cf962b272b510818e0e3507e","dweb:/ipfs/QmfXFRMxDSS2HM6smXjzJyB5BZqeDEgL5JPNBgFeo6Bxn3"],"license":null},"src/deal/interfaces/IDeal.sol":{"keccak256":"0xfce3124c64bfa00bb84e789b1e06805113246a1e4764b8ad49e020cadead2bc2","urls":["bzz-raw://8417dbd3925059b78f3925013cfebf8c5a6e95fdb254711a7edb023390c72a68","dweb:/ipfs/QmPwo6BBYr99mcZYPTDMrt2BNeEnNkSx7tRYzNCVeTY8oR"],"license":null},"src/deal/interfaces/IWorkerManager.sol":{"keccak256":"0x81d3ec7e32d78abf2b680080bfc84ca3dc63e3f0fa6b75263713c3eb7431bce6","urls":["bzz-raw://ab256654fb955d467ff693c9d1ff7ec3eb1903112d070460ea3ce262c3d935b3","dweb:/ipfs/QmUiQhkUx8TtqVBe9Dt77rqxZr8RzpKH7WcBNE46NBfs3y"],"license":null},"src/interfaces/IDiamond.sol":{"keccak256":"0xf5202acc1d0ab8c54d0f144535d7af8b1cc275ab901a5114edb382e102d3bb43","urls":["bzz-raw://1d6b0fe6a6c64f27afd431c8e3c19c1cf665e21d3725ac93be3e6e397af7d18f","dweb:/ipfs/QmVcYgm3dxMHkU1LgNC2XKAD665LjgNd7L4QBS1mNcSUJs"],"license":null},"src/interfaces/IWhitelist.sol":{"keccak256":"0x0dd87386e23970aaaa704283f3a0e6d71f782f576280885a1ce6741cf375cfa2","urls":["bzz-raw://ab074c338a4fde07d6d0b1548c0348849e47d720efc88a43fb067128d65c6b6e","dweb:/ipfs/QmPk65Gu1vtxwJA7vucWsuaPfMb7tRPwA1roQZCj3bA4kY"],"license":null},"src/utils/Common.sol":{"keccak256":"0x825b67051bb6656367c807d479fbcb3acfc05ddd40c2f808f53c56cc7df65241","urls":["bzz-raw://5ee9f171a17bd35b1970b84dc7c964a326694af177bda0531bc7fd2252029ecb","dweb:/ipfs/QmXdMNVRuKhMdn5AT8BE8oZCo3X4QmRtZAE5Cw2CSHsrA9"],"license":null}},"version":1},"storageLayout":{"storage":[],"types":{}},"devdoc":{"version":1,"kind":"dev","details":"Market contract is responsible for managing the deals and offers","methods":{"addComputePeers(bytes32,(bytes32,address,bytes32[])[])":{"details":"Add compute peers to an offer"},"addComputeUnits(bytes32,bytes32[])":{"details":"Add compute units to a peer"},"addEffector(bytes32,(bytes4,bytes32)[])":{"details":"Add effectors to an offer"},"changeMinPricePerCuPerEpoch(bytes32,uint256)":{"details":"Change the min price per CU per epoch of an offer"},"changePaymentToken(bytes32,address)":{"details":"Change the payment token of an offer"},"getComputePeer(bytes32)":{"details":"Returns the compute peer info"},"getComputeUnit(bytes32)":{"details":"Returns the compute unit info"},"getComputeUnitIds(bytes32)":{"details":"Returns the compute unit ids of a peer"},"getComputeUnits(bytes32)":{"details":"Returns the compute units info of a peer"},"getEffectorInfo((bytes4,bytes32))":{"details":"Returns the effector info","params":{"id":"The effector cid"}},"getOffer(bytes32)":{"details":"Returns the offer info","params":{"offerId":"The offer id"},"returns":{"_0":"offer The offer info"}},"getProviderInfo(address)":{"details":"Returns the provider info","params":{"provider":"The provider address"},"returns":{"_0":"providerInfo The provider info"}},"matchDeal(address,bytes32[],bytes32[][][])":{"details":"Match Deal with Compute Units provided.There should be `bytes32[][] calldata peers` as well, but it is not supported by subgraph codegen.Ref to https://github.com/graphprotocol/graph-tooling/issues/342.","params":{"computeUnits":": Compute Units per offer id (3D array: provider -> peer -> CU) to match with.","deal":": Deal to match.","offers":": Offers array that represents offers in computeUnits 3D array."}},"moveResourcesFromDeal(bytes32[],bytes32)":{"details":"Return resources from deal"},"registerMarketOffer(uint256,address,(bytes4,bytes32)[],(bytes32,address,bytes32[])[],uint256,uint256)":{"details":"Register a new offer","params":{"effectors":"The effectors of the offer","minPricePerCuPerEpoch":"The min price per CU per epoch which the provider specify for the matching with the deal","paymentToken":"The payment token of the offer","peers":"The compute peers of the offer"}},"removeComputePeer(bytes32)":{"details":"Remove compute peers from an offer after all CUs removed.Only owner can remove Peer."},"removeComputeUnit(bytes32)":{"details":"Remove compute units from a peer.Only owner can remove Compute Unit that not in Deal and in CC."},"removeEffector(bytes32,(bytes4,bytes32)[])":{"details":"Remove effectors from an offer"},"removeEffectorInfo((bytes4,bytes32))":{"details":"Remove the effector info. Effector info can be removed by the contract owner"},"removeOffer(bytes32)":{"details":"Remove an offer.Only owner can change offer after all Peers removed (and CUs before)."},"setEffectorInfo((bytes4,bytes32),string,(bytes4,bytes32))":{"details":"Set the effector info. Effector info can be added by the contract owner"},"setProviderInfo(string,(bytes4,bytes32))":{"details":"Set the provider info","params":{"metadata":"The metadata of the provider","name":"The name of the provider"}}},"events":{"ComputeUnitCreated(bytes32,bytes32)":{"details":"Emitted when a compute unit created for a peer","params":{"peerId":"The peer id","unitId":"The compute unit id"}},"ComputeUnitRemoved(bytes32,bytes32)":{"details":"Emitted when a compute unit removed from a peer","params":{"peerId":"The peer id","unitId":"The compute unit id"}},"ComputeUnitsMatched(bytes32,address,bytes32,bytes32[],(bytes4,bytes32))":{"details":"Emitted when a deal is matched with a compute unit","params":{"appCID":"The app cid of the deal","cuIds":"ids of compute units matched","deal":"The deal address","onchainWorkerId":"onchain worker id, for use in tools that interact with chain","peerId":"The peer id of the deal"}},"ComputeUnitsRemovedFromDeal(bytes32,address,bytes32[],bytes32)":{"details":"Emitted when a compute unit removed from a peer","params":{"cuIds":"The list of compute unit ids","deal":"The deal address","peerId":"The peer id"}},"EffectorAdded(bytes32,(bytes4,bytes32))":{"details":"Emitted when an effector added to an offer","params":{"effector":"The effector cid","offerId":"The offer id"}},"EffectorInfoRemoved((bytes4,bytes32))":{"details":"Emitted when the effector info is removed","params":{"id":"The effector cid"}},"EffectorInfoSet((bytes4,bytes32),string,(bytes4,bytes32))":{"details":"Emitted when the effector info is set. Effector info can be added by the contract owner","params":{"description":"The description of the effector","id":"The effector cid","metadata":"The metadata of the effector"}},"EffectorRemoved(bytes32,(bytes4,bytes32))":{"details":"Emitted when an effector removed from an offer","params":{"effector":"The effector cid","offerId":"The offer id"}},"MarketOfferRegistered(address,bytes32,uint256,address,(bytes4,bytes32)[],uint256,uint256)":{"details":"Emitted when a new offer is registered","params":{"effectors":"The effectors of the offer","minPricePerCuPerEpoch":"The min price per cu per epoch which the provider specify for the matching with the deal","offerId":"The offer id","paymentToken":"The payment token of the offer","provider":"The provider address"}},"MarketOfferRemoved(bytes32)":{"details":"Emitted when an offer removed","params":{"offerId":"The offer id"}},"MinPricePerCuPerEpochUpdated(bytes32,uint256)":{"details":"Emitted when the min price per worker per epoch of an offer is updated","params":{"minPricePerCuPerEpoch":"The new min price per worker per epoch","offerId":"The offer id"}},"PaymentTokenUpdated(bytes32,address)":{"details":"Emitted when the payment token of an offer is updated","params":{"offerId":"The offer id","paymentToken":"The new payment token"}},"PeerCreated(bytes32,bytes32,address)":{"details":"Emitted when a peer created for an offer"},"PeerRemoved(bytes32,bytes32)":{"details":"Emitted when a peer removed from an offer","params":{"offerId":"The offer id","peerId":"The peer id"}},"ProviderInfoUpdated(address,string,(bytes4,bytes32))":{"details":"Emitted when a provider info is updated","params":{"metadata":"The new metadata of the provider","name":"The new name of the provider","provider":"The provider address"}}},"errors":{"MinWorkersNotMatched(uint256)":[{"details":"Throws if the min workers of the deal is not matched","params":{"_minWorkers":"The min workers of the deal"}}]},"title":"Market contract interface"},"ast":{"absolutePath":"src/core/interfaces/IMarket.sol","id":55765,"exportedSymbols":{"CIDV1":[69235],"IDeal":[59740],"IMarket":[55764],"IOffer":[56155]},"nodeType":"SourceUnit","src":"700:2638:67","nodes":[{"id":55718,"nodeType":"PragmaDirective","src":"700:24:67","nodes":[],"literals":["solidity","^","0.8",".19"]},{"id":55720,"nodeType":"ImportDirective","src":"726:54:67","nodes":[],"absolutePath":"src/core/interfaces/IOffer.sol","file":"src/core/interfaces/IOffer.sol","nameLocation":"-1:-1:-1","scope":55765,"sourceUnit":56156,"symbolAliases":[{"foreign":{"id":55719,"name":"IOffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56155,"src":"734:6:67","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":55722,"nodeType":"ImportDirective","src":"781:52:67","nodes":[],"absolutePath":"src/deal/interfaces/IDeal.sol","file":"src/deal/interfaces/IDeal.sol","nameLocation":"-1:-1:-1","scope":55765,"sourceUnit":59741,"symbolAliases":[{"foreign":{"id":55721,"name":"IDeal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59740,"src":"789:5:67","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":55724,"nodeType":"ImportDirective","src":"834:43:67","nodes":[],"absolutePath":"src/utils/Common.sol","file":"src/utils/Common.sol","nameLocation":"-1:-1:-1","scope":55765,"sourceUnit":69236,"symbolAliases":[{"foreign":{"id":55723,"name":"CIDV1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69235,"src":"842:5:67","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":55764,"nodeType":"ContractDefinition","src":"990:2347:67","nodes":[{"id":55732,"nodeType":"ErrorDefinition","src":"1197:48:67","nodes":[],"documentation":{"id":55728,"nodeType":"StructuredDocumentation","src":"1076:116:67","text":"@dev Throws if the min workers of the deal is not matched\n @param _minWorkers The min workers of the deal"},"errorSelector":"49d61e1c","name":"MinWorkersNotMatched","nameLocation":"1203:20:67","parameters":{"id":55731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55730,"mutability":"mutable","name":"_minWorkers","nameLocation":"1232:11:67","nodeType":"VariableDeclaration","scope":55732,"src":"1224:19:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55729,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:67","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1223:21:67"}},{"id":55748,"nodeType":"EventDefinition","src":"1636:164:67","nodes":[],"anonymous":false,"documentation":{"id":55733,"nodeType":"StructuredDocumentation","src":"1301:330:67","text":"@dev Emitted when a deal is matched with a compute unit\n @param peerId The peer id of the deal\n @param deal The deal address\n @param onchainWorkerId onchain worker id, for use in tools that interact with chain\n @param cuIds ids of compute units matched\n @param appCID The app cid of the deal"},"eventSelector":"6e5629a2cfaa82d1ea7ad51936794f666271fbd5068017020eaaafdbb017e615","name":"ComputeUnitsMatched","nameLocation":"1642:19:67","parameters":{"id":55747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55735,"indexed":true,"mutability":"mutable","name":"peerId","nameLocation":"1687:6:67","nodeType":"VariableDeclaration","scope":55748,"src":"1671:22:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":55734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1671:7:67","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":55738,"indexed":false,"mutability":"mutable","name":"deal","nameLocation":"1709:4:67","nodeType":"VariableDeclaration","scope":55748,"src":"1703:10:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDeal_$59740","typeString":"contract IDeal"},"typeName":{"id":55737,"nodeType":"UserDefinedTypeName","pathNode":{"id":55736,"name":"IDeal","nameLocations":["1703:5:67"],"nodeType":"IdentifierPath","referencedDeclaration":59740,"src":"1703:5:67"},"referencedDeclaration":59740,"src":"1703:5:67","typeDescriptions":{"typeIdentifier":"t_contract$_IDeal_$59740","typeString":"contract IDeal"}},"visibility":"internal"},{"constant":false,"id":55740,"indexed":false,"mutability":"mutable","name":"onchainWorkerId","nameLocation":"1731:15:67","nodeType":"VariableDeclaration","scope":55748,"src":"1723:23:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":55739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1723:7:67","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":55743,"indexed":false,"mutability":"mutable","name":"cuIds","nameLocation":"1766:5:67","nodeType":"VariableDeclaration","scope":55748,"src":"1756:15:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":55741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1756:7:67","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":55742,"nodeType":"ArrayTypeName","src":"1756:9:67","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":55746,"indexed":false,"mutability":"mutable","name":"appCID","nameLocation":"1787:6:67","nodeType":"VariableDeclaration","scope":55748,"src":"1781:12:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_CIDV1_$69235_memory_ptr","typeString":"struct CIDV1"},"typeName":{"id":55745,"nodeType":"UserDefinedTypeName","pathNode":{"id":55744,"name":"CIDV1","nameLocations":["1781:5:67"],"nodeType":"IdentifierPath","referencedDeclaration":69235,"src":"1781:5:67"},"referencedDeclaration":69235,"src":"1781:5:67","typeDescriptions":{"typeIdentifier":"t_struct$_CIDV1_$69235_storage_ptr","typeString":"struct CIDV1"}},"visibility":"internal"}],"src":"1661:138:67"}},{"id":55763,"nodeType":"FunctionDefinition","src":"3231:104:67","nodes":[],"documentation":{"id":55749,"nodeType":"StructuredDocumentation","src":"1806:1420:67","text":" @dev Match Deal with Compute Units provided.\n @notice Match deal with offers and compute units (peers checks through compute units).\n @notice It validates provided CUs and silently ignore unvalidated ones on checking:\n @notice - deal.maxWorkersPerProvider and silently ignore other CUs out of this limit.\n @notice - Offer, or Peer not allowed to match (deal.isProviderAllowed, allowed prices, paymentToken, effectors)\n @notice - Compute Unit (CU): Active CC status, also note, protocol does not allow more than one CU per peer\n @notice    for the same Deal. But, when deal consists of whitelisted provider - CUs of this Provider\n @notice    could be matched without even CC.\n @notice TODO: consolidate workaround: when it comes to check CC status, on wrong status the whole transaction\n @notice  will be failed instead of to be silenced.\n @dev There should be `bytes32[][] calldata peers` as well, but it is not supported by subgraph codegen.\n @dev  Ref to https://github.com/graphprotocol/graph-tooling/issues/342.\n @notice This method is mirrored in ts-client/src/dealMatcherClient/dealMatcherClient.ts.\n @param deal: Deal to match.\n @param offers: Offers array that represents offers in computeUnits 3D array.\n @param computeUnits: Compute Units per offer id (3D array: provider -> peer -> CU) to match with."},"functionSelector":"8e4643cb","implemented":false,"kind":"function","modifiers":[],"name":"matchDeal","nameLocation":"3240:9:67","parameters":{"id":55761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55752,"mutability":"mutable","name":"deal","nameLocation":"3256:4:67","nodeType":"VariableDeclaration","scope":55763,"src":"3250:10:67","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDeal_$59740","typeString":"contract IDeal"},"typeName":{"id":55751,"nodeType":"UserDefinedTypeName","pathNode":{"id":55750,"name":"IDeal","nameLocations":["3250:5:67"],"nodeType":"IdentifierPath","referencedDeclaration":59740,"src":"3250:5:67"},"referencedDeclaration":59740,"src":"3250:5:67","typeDescriptions":{"typeIdentifier":"t_contract$_IDeal_$59740","typeString":"contract IDeal"}},"visibility":"internal"},{"constant":false,"id":55755,"mutability":"mutable","name":"offers","nameLocation":"3281:6:67","nodeType":"VariableDeclaration","scope":55763,"src":"3262:25:67","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":55753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3262:7:67","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":55754,"nodeType":"ArrayTypeName","src":"3262:9:67","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":55760,"mutability":"mutable","name":"computeUnits","nameLocation":"3312:12:67","nodeType":"VariableDeclaration","scope":55763,"src":"3289:35:67","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_array$_t_bytes32_$dyn_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes32[][][]"},"typeName":{"baseType":{"baseType":{"baseType":{"id":55756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:67","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":55757,"nodeType":"ArrayTypeName","src":"3289:9:67","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"id":55758,"nodeType":"ArrayTypeName","src":"3289:11:67","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_bytes32_$dyn_storage_$dyn_storage_ptr","typeString":"bytes32[][]"}},"id":55759,"nodeType":"ArrayTypeName","src":"3289:13:67","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_array$_t_bytes32_$dyn_storage_$dyn_storage_$dyn_storage_ptr","typeString":"bytes32[][][]"}},"visibility":"internal"}],"src":"3249:76:67"},"returnParameters":{"id":55762,"nodeType":"ParameterList","parameters":[],"src":"3334:0:67"},"scope":55764,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":55726,"name":"IOffer","nameLocations":["1011:6:67"],"nodeType":"IdentifierPath","referencedDeclaration":56155,"src":"1011:6:67"},"id":55727,"nodeType":"InheritanceSpecifier","src":"1011:6:67"}],"canonicalName":"IMarket","contractDependencies":[],"contractKind":"interface","documentation":{"id":55725,"nodeType":"StructuredDocumentation","src":"879:111:67","text":"@title Market contract interface\n @dev Market contract is responsible for managing the deals and offers"},"fullyImplemented":false,"linearizedBaseContracts":[55764,56155],"name":"IMarket","nameLocation":"1000:7:67","scope":55765,"usedErrors":[55732],"usedEvents":[55748,55843,55862,55867,55876,55883,55890,55897,55904,55911,55919,55927,55940,55951,55957]}]},"id":67}