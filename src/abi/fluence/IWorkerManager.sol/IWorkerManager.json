{"abi":[{"type":"function","name":"getComputeUnit","inputs":[{"name":"id","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IWorkerManager.ComputeUnit","components":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"workerId","type":"bytes32","internalType":"bytes32"},{"name":"peerId","type":"bytes32","internalType":"bytes32"},{"name":"provider","type":"address","internalType":"address"},{"name":"joinedEpoch","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getComputeUnitCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getComputeUnitCount","inputs":[{"name":"provider","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getComputeUnits","inputs":[],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IWorkerManager.ComputeUnit[]","components":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"workerId","type":"bytes32","internalType":"bytes32"},{"name":"peerId","type":"bytes32","internalType":"bytes32"},{"name":"provider","type":"address","internalType":"address"},{"name":"joinedEpoch","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getWorkerCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isComputePeerExist","inputs":[{"name":"peerId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"ComputeUnitJoined","inputs":[{"name":"peerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"unitId","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"ComputeUnitRemoved","inputs":[{"name":"peerId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"unitId","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"WorkerIdUpdated","inputs":[{"name":"computeUnitId","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"workerId","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getComputeUnit(bytes32)":"745e920b","getComputeUnitCount()":"108d2f52","getComputeUnitCount(address)":"e2581238","getComputeUnits()":"4b66a309","getWorkerCount()":"4d7599f1","isComputePeerExist(bytes32)":"cb45f023"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"}],\"name\":\"ComputeUnitJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"unitId\",\"type\":\"bytes32\"}],\"name\":\"ComputeUnitRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"computeUnitId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"workerId\",\"type\":\"bytes32\"}],\"name\":\"WorkerIdUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getComputeUnit\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"workerId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"joinedEpoch\",\"type\":\"uint256\"}],\"internalType\":\"struct IWorkerManager.ComputeUnit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getComputeUnitCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"getComputeUnitCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getComputeUnits\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"workerId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"joinedEpoch\",\"type\":\"uint256\"}],\"internalType\":\"struct IWorkerManager.ComputeUnit[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWorkerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"peerId\",\"type\":\"bytes32\"}],\"name\":\"isComputePeerExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Worker manager contract is responsible for managing the workers in the deal\",\"events\":{\"ComputeUnitJoined(bytes32,bytes32)\":{\"details\":\"Emitted when a new compute unit is added\",\"params\":{\"unitId\":\"The compute unit ID\"}},\"ComputeUnitRemoved(bytes32,bytes32)\":{\"details\":\"Emitted when a compute unit is removed\",\"params\":{\"unitId\":\"The compute unit ID\"}},\"WorkerIdUpdated(bytes32,bytes32)\":{\"details\":\"Emitted when a worker ID is updated\",\"params\":{\"computeUnitId\":\"The compute unit\",\"workerId\":\"The new worker ID\"}}},\"kind\":\"dev\",\"methods\":{\"getComputeUnit(bytes32)\":{\"details\":\"Returns the compute unit info by ID\"},\"getComputeUnitCount()\":{\"details\":\"Returns total number of compute units\"},\"getComputeUnitCount(address)\":{\"details\":\"Returns the compute units by provider\"},\"getComputeUnits()\":{\"details\":\"Returns the compute units info by provider\"},\"getWorkerCount()\":{\"details\":\"Returns the worker count. Worker is a compute unit that has a worker ID\"},\"isComputePeerExist(bytes32)\":{\"details\":\"Returns the boolean flag indicating whether the peer exists in the deal\"}},\"title\":\"Worker manager contract interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/deal/interfaces/IWorkerManager.sol\":\"IWorkerManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":0},\"remappings\":[\":@ensdomains/buffer/=lib/filecoin-solidity/lib/buffer/\",\":@openzeppelin/contracts-upgradeable/=lib/filecoin-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":buffer/=lib/filecoin-solidity/lib/buffer/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":filecoin-solidity/=lib/filecoin-solidity/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-BigNumber/=lib/filecoin-solidity/contracts/vendor/solidity-BigNumber/src/\",\":solidity-cborutils/=lib/solidity-cborutils/contracts/\",\":solidity-cborutils/contracts/=lib/filecoin-solidity/lib/solidity-cborutils/contracts/\"],\"viaIR\":true},\"sources\":{\"src/deal/interfaces/IWorkerManager.sol\":{\"keccak256\":\"0xf0ef555b63b5e70cf26df4fda1f3b4e3b9aa6f38bf1d78ce3ab295aca991e5aa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a9849858eb4f79c087229f80fe72f8fe0bf68cddee83841b80d2453111b7356\",\"dweb:/ipfs/QmSAXrYXsdD6p9HerxJNGxKBCn4TqGKsUsVQyJM6GonNCY\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"unitId","type":"bytes32","indexed":false}],"type":"event","name":"ComputeUnitJoined","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"unitId","type":"bytes32","indexed":false}],"type":"event","name":"ComputeUnitRemoved","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"computeUnitId","type":"bytes32","indexed":false},{"internalType":"bytes32","name":"workerId","type":"bytes32","indexed":false}],"type":"event","name":"WorkerIdUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getComputeUnit","outputs":[{"internalType":"struct IWorkerManager.ComputeUnit","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"bytes32","name":"workerId","type":"bytes32"},{"internalType":"bytes32","name":"peerId","type":"bytes32"},{"internalType":"address","name":"provider","type":"address"},{"internalType":"uint256","name":"joinedEpoch","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getComputeUnitCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"stateMutability":"view","type":"function","name":"getComputeUnitCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getComputeUnits","outputs":[{"internalType":"struct IWorkerManager.ComputeUnit[]","name":"","type":"tuple[]","components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"bytes32","name":"workerId","type":"bytes32"},{"internalType":"bytes32","name":"peerId","type":"bytes32"},{"internalType":"address","name":"provider","type":"address"},{"internalType":"uint256","name":"joinedEpoch","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getWorkerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"peerId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isComputePeerExist","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"getComputeUnit(bytes32)":{"details":"Returns the compute unit info by ID"},"getComputeUnitCount()":{"details":"Returns total number of compute units"},"getComputeUnitCount(address)":{"details":"Returns the compute units by provider"},"getComputeUnits()":{"details":"Returns the compute units info by provider"},"getWorkerCount()":{"details":"Returns the worker count. Worker is a compute unit that has a worker ID"},"isComputePeerExist(bytes32)":{"details":"Returns the boolean flag indicating whether the peer exists in the deal"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/filecoin-solidity/lib/buffer/","@openzeppelin/contracts-upgradeable/=lib/filecoin-solidity/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","buffer/=lib/filecoin-solidity/lib/buffer/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","filecoin-solidity/=lib/filecoin-solidity/contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/","solidity-BigNumber/=lib/filecoin-solidity/contracts/vendor/solidity-BigNumber/src/","solidity-cborutils/=lib/solidity-cborutils/contracts/","solidity-cborutils/contracts/=lib/filecoin-solidity/lib/solidity-cborutils/contracts/"],"optimizer":{"enabled":true,"runs":0},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/deal/interfaces/IWorkerManager.sol":"IWorkerManager"},"evmVersion":"london","libraries":{},"viaIR":true},"sources":{"src/deal/interfaces/IWorkerManager.sol":{"keccak256":"0xf0ef555b63b5e70cf26df4fda1f3b4e3b9aa6f38bf1d78ce3ab295aca991e5aa","urls":["bzz-raw://4a9849858eb4f79c087229f80fe72f8fe0bf68cddee83841b80d2453111b7356","dweb:/ipfs/QmSAXrYXsdD6p9HerxJNGxKBCn4TqGKsUsVQyJM6GonNCY"],"license":"Apache-2.0"}},"version":1},"storageLayout":{"storage":[],"types":{}},"devdoc":{"version":1,"kind":"dev","details":"Worker manager contract is responsible for managing the workers in the deal","methods":{"getComputeUnit(bytes32)":{"details":"Returns the compute unit info by ID"},"getComputeUnitCount()":{"details":"Returns total number of compute units"},"getComputeUnitCount(address)":{"details":"Returns the compute units by provider"},"getComputeUnits()":{"details":"Returns the compute units info by provider"},"getWorkerCount()":{"details":"Returns the worker count. Worker is a compute unit that has a worker ID"},"isComputePeerExist(bytes32)":{"details":"Returns the boolean flag indicating whether the peer exists in the deal"}},"events":{"ComputeUnitJoined(bytes32,bytes32)":{"details":"Emitted when a new compute unit is added","params":{"unitId":"The compute unit ID"}},"ComputeUnitRemoved(bytes32,bytes32)":{"details":"Emitted when a compute unit is removed","params":{"unitId":"The compute unit ID"}},"WorkerIdUpdated(bytes32,bytes32)":{"details":"Emitted when a worker ID is updated","params":{"computeUnitId":"The compute unit","workerId":"The new worker ID"}}},"title":"Worker manager contract interface"},"id":99}