{"abi":[{"type":"function","name":"transmitInterchainTransfer","inputs":[{"name":"tokenId","type":"bytes32","internalType":"bytes32"},{"name":"sourceAddress","type":"address","internalType":"address"},{"name":"destinationChain","type":"string","internalType":"string"},{"name":"destinationAddress","type":"bytes","internalType":"bytes"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"transmitInterchainTransfer(bytes32,address,string,bytes,uint256,bytes)":"70756cde"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sourceAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"destinationChain\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"destinationAddress\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"transmitInterchainTransfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transmitInterchainTransfer(bytes32,address,string,bytes,uint256,bytes)\":{\"details\":\"Only callable by a token registered under a tokenId.\",\"params\":{\"amount\":\"The amount of token to give.\",\"destinationAddress\":\"The destinationAddress for the interchainTransfer.\",\"destinationChain\":\"The name of the chain to send tokens to.\",\"metadata\":\"Optional metadata for the call for additional effects (such as calling a destination contract).\",\"sourceAddress\":\"The address where the token is coming from.\",\"tokenId\":\"The tokenId of the token (which must be the msg.sender).\"}}},\"title\":\"ITransmitInterchainToken Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"transmitInterchainTransfer(bytes32,address,string,bytes,uint256,bytes)\":{\"notice\":\"Transmit an interchain transfer for the given tokenId.\"}},\"notice\":\"Interface for transmiting interchain tokens via the interchain token service\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/interchain-token-service/contracts/interfaces/ITransmitInterchainToken.sol\":\"ITransmitInterchainToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-network/axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/\",\":@axelar-network/interchain-token-service/=lib/interchain-token-service/contracts/\",\":@ipc/=../../contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=../../contracts/lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":interchain-token-service/=lib/interchain-token-service/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/interchain-token-service/contracts/interfaces/ITransmitInterchainToken.sol\":{\"keccak256\":\"0x7e2084d1db1b58c7e4fd0157df00d5a5ceffc15c5e4d07c9860993e1c6279951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b219949e6fc66a5cbb0d39b525227739eb04ae4f0bd53fcfa73464285dac09f\",\"dweb:/ipfs/QmbssbvqmhDpUHKb7PRtqTYACy7ZKmATAWUNEcHTuxtLYR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"sourceAddress","type":"address"},{"internalType":"string","name":"destinationChain","type":"string"},{"internalType":"bytes","name":"destinationAddress","type":"bytes"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"payable","type":"function","name":"transmitInterchainTransfer"}],"devdoc":{"kind":"dev","methods":{"transmitInterchainTransfer(bytes32,address,string,bytes,uint256,bytes)":{"details":"Only callable by a token registered under a tokenId.","params":{"amount":"The amount of token to give.","destinationAddress":"The destinationAddress for the interchainTransfer.","destinationChain":"The name of the chain to send tokens to.","metadata":"Optional metadata for the call for additional effects (such as calling a destination contract).","sourceAddress":"The address where the token is coming from.","tokenId":"The tokenId of the token (which must be the msg.sender)."}}},"version":1},"userdoc":{"kind":"user","methods":{"transmitInterchainTransfer(bytes32,address,string,bytes,uint256,bytes)":{"notice":"Transmit an interchain transfer for the given tokenId."}},"version":1}},"settings":{"remappings":["@axelar-network/axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/","@axelar-network/interchain-token-service/=lib/interchain-token-service/contracts/","@ipc/=../../contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","fevmate/=../../contracts/lib/fevmate/contracts/","forge-std/=lib/forge-std/src/","interchain-token-service/=lib/interchain-token-service/contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/interchain-token-service/contracts/interfaces/ITransmitInterchainToken.sol":"ITransmitInterchainToken"},"libraries":{}},"sources":{"lib/interchain-token-service/contracts/interfaces/ITransmitInterchainToken.sol":{"keccak256":"0x7e2084d1db1b58c7e4fd0157df00d5a5ceffc15c5e4d07c9860993e1c6279951","urls":["bzz-raw://1b219949e6fc66a5cbb0d39b525227739eb04ae4f0bd53fcfa73464285dac09f","dweb:/ipfs/QmbssbvqmhDpUHKb7PRtqTYACy7ZKmATAWUNEcHTuxtLYR"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/interchain-token-service/contracts/interfaces/ITransmitInterchainToken.sol","id":55705,"exportedSymbols":{"ITransmitInterchainToken":[55704]},"nodeType":"SourceUnit","src":"33:1092:83","nodes":[{"id":55686,"nodeType":"PragmaDirective","src":"33:23:83","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":55704,"nodeType":"ContractDefinition","src":"199:925:83","nodes":[{"id":55703,"nodeType":"FunctionDefinition","src":"867:255:83","nodes":[],"documentation":{"id":55688,"nodeType":"StructuredDocumentation","src":"240:622:83","text":" @notice Transmit an interchain transfer for the given tokenId.\n @dev Only callable by a token registered under a tokenId.\n @param tokenId The tokenId of the token (which must be the msg.sender).\n @param sourceAddress The address where the token is coming from.\n @param destinationChain The name of the chain to send tokens to.\n @param destinationAddress The destinationAddress for the interchainTransfer.\n @param amount The amount of token to give.\n @param metadata Optional metadata for the call for additional effects (such as calling a destination contract)."},"functionSelector":"70756cde","implemented":false,"kind":"function","modifiers":[],"name":"transmitInterchainTransfer","nameLocation":"876:26:83","parameters":{"id":55701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55690,"mutability":"mutable","name":"tokenId","nameLocation":"920:7:83","nodeType":"VariableDeclaration","scope":55703,"src":"912:15:83","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":55689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:83","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":55692,"mutability":"mutable","name":"sourceAddress","nameLocation":"945:13:83","nodeType":"VariableDeclaration","scope":55703,"src":"937:21:83","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55691,"name":"address","nodeType":"ElementaryTypeName","src":"937:7:83","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55694,"mutability":"mutable","name":"destinationChain","nameLocation":"984:16:83","nodeType":"VariableDeclaration","scope":55703,"src":"968:32:83","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":55693,"name":"string","nodeType":"ElementaryTypeName","src":"968:6:83","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":55696,"mutability":"mutable","name":"destinationAddress","nameLocation":"1023:18:83","nodeType":"VariableDeclaration","scope":55703,"src":"1010:31:83","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":55695,"name":"bytes","nodeType":"ElementaryTypeName","src":"1010:5:83","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":55698,"mutability":"mutable","name":"amount","nameLocation":"1059:6:83","nodeType":"VariableDeclaration","scope":55703,"src":"1051:14:83","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":55697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1051:7:83","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":55700,"mutability":"mutable","name":"metadata","nameLocation":"1090:8:83","nodeType":"VariableDeclaration","scope":55703,"src":"1075:23:83","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":55699,"name":"bytes","nodeType":"ElementaryTypeName","src":"1075:5:83","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"902:202:83"},"returnParameters":{"id":55702,"nodeType":"ParameterList","parameters":[],"src":"1121:0:83"},"scope":55704,"stateMutability":"payable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ITransmitInterchainToken","contractDependencies":[],"contractKind":"interface","documentation":{"id":55687,"nodeType":"StructuredDocumentation","src":"58:140:83","text":" @title ITransmitInterchainToken Interface\n @notice Interface for transmiting interchain tokens via the interchain token service"},"fullyImplemented":false,"linearizedBaseContracts":[55704],"name":"ITransmitInterchainToken","nameLocation":"209:24:83","scope":55705,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":83}