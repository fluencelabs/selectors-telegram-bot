{"abi":[{"type":"function","name":"acceptOperatorship","inputs":[{"name":"fromOperator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"role","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOperator","inputs":[{"name":"addr","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"proposeOperatorship","inputs":[{"name":"operator_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOperatorship","inputs":[{"name":"operator_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"RolesAdded","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"accountRoles","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RolesProposed","inputs":[{"name":"fromAccount","type":"address","indexed":true,"internalType":"address"},{"name":"toAccount","type":"address","indexed":true,"internalType":"address"},{"name":"accountRoles","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RolesRemoved","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"accountRoles","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"InvalidProposedRoles","inputs":[{"name":"fromAccount","type":"address","internalType":"address"},{"name":"toAccount","type":"address","internalType":"address"},{"name":"accountRoles","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"MissingAllRoles","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"accountRoles","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"MissingAnyOfRoles","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"accountRoles","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"MissingRole","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"role","type":"uint8","internalType":"uint8"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"acceptOperatorship(address)":"da4886df","hasRole(address,uint8)":"95a8c58d","isOperator(address)":"6d70f7ae","proposeOperatorship(address)":"6f3eef62","transferOperatorship(address)":"4a6a42d8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"InvalidProposedRoles\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"MissingAllRoles\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"MissingAnyOfRoles\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"MissingRole\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"RolesAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"RolesProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountRoles\",\"type\":\"uint256\"}],\"name\":\"RolesRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromOperator\",\"type\":\"address\"}],\"name\":\"acceptOperatorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"}],\"name\":\"proposeOperatorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator_\",\"type\":\"address\"}],\"name\":\"transferOperatorship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOperatorship(address)\":{\"details\":\"Can only be called by the proposed operator.\",\"params\":{\"fromOperator\":\"The previous operator of the contract.\"}},\"hasRole(address,uint8)\":{\"params\":{\"account\":\"The address to check\",\"role\":\"The role to check\"},\"returns\":{\"_0\":\"True if the account has the role, false otherwise\"}},\"isOperator(address)\":{\"params\":{\"addr\":\"The address to query for.\"},\"returns\":{\"_0\":\"bool Boolean value representing whether or not the address is an operator.\"}},\"proposeOperatorship(address)\":{\"details\":\"Can only be called by the current operator.\",\"params\":{\"operator_\":\"The address of the new operator.\"}},\"transferOperatorship(address)\":{\"details\":\"Can only be called by the current operator.\",\"params\":{\"operator_\":\"The address of the new operator.\"}}},\"title\":\"IOperator Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOperatorship(address)\":{\"notice\":\"Accept a proposed change of operatorship.\"},\"hasRole(address,uint8)\":{\"notice\":\"Checks if an account has a role.\"},\"isOperator(address)\":{\"notice\":\"Query if an address is a operator.\"},\"proposeOperatorship(address)\":{\"notice\":\"Proposed a change of the operator of the contract.\"},\"transferOperatorship(address)\":{\"notice\":\"Change the operator of the contract.\"}},\"notice\":\"An interface for a contract module which provides a basic access control mechanism, where there is an account (a operator) that can be granted exclusive access to specific functions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/interchain-token-service/contracts/interfaces/IOperator.sol\":\"IOperator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-network/axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/\",\":@axelar-network/interchain-token-service/=lib/interchain-token-service/contracts/\",\":@ipc/=../../contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":fevmate/=../../contracts/lib/fevmate/contracts/\",\":forge-std/=lib/forge-std/src/\",\":interchain-token-service/=lib/interchain-token-service/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IRolesBase.sol\":{\"keccak256\":\"0x9f8b439986230a5ec7e47084609243367995680771db149bd1ec0d74ff6565cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284a7e08b5ba45af9c87587c22590a967c915bf1d7e944935289a751dc26b3f4\",\"dweb:/ipfs/QmYLdJBSaT5wYRuR3rqUDBg46u56NiWVcUb9iBiuYNr6Dn\"]},\"lib/interchain-token-service/contracts/interfaces/IOperator.sol\":{\"keccak256\":\"0xddabf817cac789b6f7110c7f6d4a75a22000007e20a852a18f422441c80524a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41d77ed3708d40602b52f6afa1f9d9200e049f2b8b5cd9e61206d7857fd19aa2\",\"dweb:/ipfs/QmafnrTEYK2PfsaQpzPbCQ6V95xZeeSaKW5Z1Bwt96Y3w1\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"fromAccount","type":"address"},{"internalType":"address","name":"toAccount","type":"address"},{"internalType":"uint256","name":"accountRoles","type":"uint256"}],"type":"error","name":"InvalidProposedRoles"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"accountRoles","type":"uint256"}],"type":"error","name":"MissingAllRoles"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"accountRoles","type":"uint256"}],"type":"error","name":"MissingAnyOfRoles"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"}],"type":"error","name":"MissingRole"},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"uint256","name":"accountRoles","type":"uint256","indexed":false}],"type":"event","name":"RolesAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"fromAccount","type":"address","indexed":true},{"internalType":"address","name":"toAccount","type":"address","indexed":true},{"internalType":"uint256","name":"accountRoles","type":"uint256","indexed":false}],"type":"event","name":"RolesProposed","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"uint256","name":"accountRoles","type":"uint256","indexed":false}],"type":"event","name":"RolesRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"fromOperator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"acceptOperatorship"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint8","name":"role","type":"uint8"}],"stateMutability":"view","type":"function","name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"view","type":"function","name":"isOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"operator_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"proposeOperatorship"},{"inputs":[{"internalType":"address","name":"operator_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOperatorship"}],"devdoc":{"kind":"dev","methods":{"acceptOperatorship(address)":{"details":"Can only be called by the proposed operator.","params":{"fromOperator":"The previous operator of the contract."}},"hasRole(address,uint8)":{"params":{"account":"The address to check","role":"The role to check"},"returns":{"_0":"True if the account has the role, false otherwise"}},"isOperator(address)":{"params":{"addr":"The address to query for."},"returns":{"_0":"bool Boolean value representing whether or not the address is an operator."}},"proposeOperatorship(address)":{"details":"Can only be called by the current operator.","params":{"operator_":"The address of the new operator."}},"transferOperatorship(address)":{"details":"Can only be called by the current operator.","params":{"operator_":"The address of the new operator."}}},"version":1},"userdoc":{"kind":"user","methods":{"acceptOperatorship(address)":{"notice":"Accept a proposed change of operatorship."},"hasRole(address,uint8)":{"notice":"Checks if an account has a role."},"isOperator(address)":{"notice":"Query if an address is a operator."},"proposeOperatorship(address)":{"notice":"Proposed a change of the operator of the contract."},"transferOperatorship(address)":{"notice":"Change the operator of the contract."}},"version":1}},"settings":{"remappings":["@axelar-network/axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/","@axelar-network/interchain-token-service/=lib/interchain-token-service/contracts/","@ipc/=../../contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","fevmate/=../../contracts/lib/fevmate/contracts/","forge-std/=lib/forge-std/src/","interchain-token-service/=lib/interchain-token-service/contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/interchain-token-service/contracts/interfaces/IOperator.sol":"IOperator"},"libraries":{}},"sources":{"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IRolesBase.sol":{"keccak256":"0x9f8b439986230a5ec7e47084609243367995680771db149bd1ec0d74ff6565cc","urls":["bzz-raw://284a7e08b5ba45af9c87587c22590a967c915bf1d7e944935289a751dc26b3f4","dweb:/ipfs/QmYLdJBSaT5wYRuR3rqUDBg46u56NiWVcUb9iBiuYNr6Dn"],"license":"MIT"},"lib/interchain-token-service/contracts/interfaces/IOperator.sol":{"keccak256":"0xddabf817cac789b6f7110c7f6d4a75a22000007e20a852a18f422441c80524a8","urls":["bzz-raw://41d77ed3708d40602b52f6afa1f9d9200e049f2b8b5cd9e61206d7857fd19aa2","dweb:/ipfs/QmafnrTEYK2PfsaQpzPbCQ6V95xZeeSaKW5Z1Bwt96Y3w1"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/interchain-token-service/contracts/interfaces/IOperator.sol","id":55664,"exportedSymbols":{"IOperator":[55663],"IRolesBase":[10088]},"nodeType":"SourceUnit","src":"33:1438:80","nodes":[{"id":55631,"nodeType":"PragmaDirective","src":"33:23:80","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":55633,"nodeType":"ImportDirective","src":"58:105:80","nodes":[],"absolutePath":"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IRolesBase.sol","file":"@axelar-network/axelar-gmp-sdk-solidity/contracts/interfaces/IRolesBase.sol","nameLocation":"-1:-1:-1","scope":55664,"sourceUnit":10089,"symbolAliases":[{"foreign":{"id":55632,"name":"IRolesBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10088,"src":"67:10:80","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":55663,"nodeType":"ContractDefinition","src":"400:1070:80","nodes":[{"id":55642,"nodeType":"FunctionDefinition","src":"621:58:80","nodes":[],"documentation":{"id":55637,"nodeType":"StructuredDocumentation","src":"440:176:80","text":" @notice Change the operator of the contract.\n @dev Can only be called by the current operator.\n @param operator_ The address of the new operator."},"functionSelector":"4a6a42d8","implemented":false,"kind":"function","modifiers":[],"name":"transferOperatorship","nameLocation":"630:20:80","parameters":{"id":55640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55639,"mutability":"mutable","name":"operator_","nameLocation":"659:9:80","nodeType":"VariableDeclaration","scope":55642,"src":"651:17:80","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55638,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:80","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:19:80"},"returnParameters":{"id":55641,"nodeType":"ParameterList","parameters":[],"src":"678:0:80"},"scope":55663,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":55648,"nodeType":"FunctionDefinition","src":"880:57:80","nodes":[],"documentation":{"id":55643,"nodeType":"StructuredDocumentation","src":"685:190:80","text":" @notice Proposed a change of the operator of the contract.\n @dev Can only be called by the current operator.\n @param operator_ The address of the new operator."},"functionSelector":"6f3eef62","implemented":false,"kind":"function","modifiers":[],"name":"proposeOperatorship","nameLocation":"889:19:80","parameters":{"id":55646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55645,"mutability":"mutable","name":"operator_","nameLocation":"917:9:80","nodeType":"VariableDeclaration","scope":55648,"src":"909:17:80","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55644,"name":"address","nodeType":"ElementaryTypeName","src":"909:7:80","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"908:19:80"},"returnParameters":{"id":55647,"nodeType":"ParameterList","parameters":[],"src":"936:0:80"},"scope":55663,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":55654,"nodeType":"FunctionDefinition","src":"1139:59:80","nodes":[],"documentation":{"id":55649,"nodeType":"StructuredDocumentation","src":"943:191:80","text":" @notice Accept a proposed change of operatorship.\n @dev Can only be called by the proposed operator.\n @param fromOperator The previous operator of the contract."},"functionSelector":"da4886df","implemented":false,"kind":"function","modifiers":[],"name":"acceptOperatorship","nameLocation":"1148:18:80","parameters":{"id":55652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55651,"mutability":"mutable","name":"fromOperator","nameLocation":"1175:12:80","nodeType":"VariableDeclaration","scope":55654,"src":"1167:20:80","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55650,"name":"address","nodeType":"ElementaryTypeName","src":"1167:7:80","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1166:22:80"},"returnParameters":{"id":55653,"nodeType":"ParameterList","parameters":[],"src":"1197:0:80"},"scope":55663,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":55662,"nodeType":"FunctionDefinition","src":"1405:63:80","nodes":[],"documentation":{"id":55655,"nodeType":"StructuredDocumentation","src":"1204:196:80","text":" @notice Query if an address is a operator.\n @param addr The address to query for.\n @return bool Boolean value representing whether or not the address is an operator."},"functionSelector":"6d70f7ae","implemented":false,"kind":"function","modifiers":[],"name":"isOperator","nameLocation":"1414:10:80","parameters":{"id":55658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55657,"mutability":"mutable","name":"addr","nameLocation":"1433:4:80","nodeType":"VariableDeclaration","scope":55662,"src":"1425:12:80","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55656,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:80","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1424:14:80"},"returnParameters":{"id":55661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55662,"src":"1462:4:80","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55659,"name":"bool","nodeType":"ElementaryTypeName","src":"1462:4:80","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1461:6:80"},"scope":55663,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":55635,"name":"IRolesBase","nameLocations":["423:10:80"],"nodeType":"IdentifierPath","referencedDeclaration":10088,"src":"423:10:80"},"id":55636,"nodeType":"InheritanceSpecifier","src":"423:10:80"}],"canonicalName":"IOperator","contractDependencies":[],"contractKind":"interface","documentation":{"id":55634,"nodeType":"StructuredDocumentation","src":"165:234:80","text":" @title IOperator Interface\n @notice An interface for a contract module which provides a basic access control mechanism, where\n there is an account (a operator) that can be granted exclusive access to specific functions."},"fullyImplemented":false,"linearizedBaseContracts":[55663,10088],"name":"IOperator","nameLocation":"410:9:80","scope":55664,"usedErrors":[10037,10043,10049,10057],"usedEvents":[10065,10071,10077]}],"license":"MIT"},"id":80}